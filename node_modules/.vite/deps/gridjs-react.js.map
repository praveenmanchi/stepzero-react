{
  "version": 3,
  "sources": ["../../gridjs/src/types.ts", "../../gridjs/node_modules/preact/dist/preact.module.js", "../../gridjs/src/util/id.ts", "../../gridjs/src/base.ts", "../../gridjs/src/view/htmlElement.tsx", "../../gridjs/src/util/html.ts", "../../gridjs/src/cell.ts", "../../gridjs/src/pipeline/processor.ts", "../../gridjs/src/row.ts", "../../gridjs/src/tabular.ts", "../../gridjs/src/util/array.ts", "../../gridjs/src/util/eventEmitter.ts", "../../gridjs/src/util/deepEqual.ts", "../../gridjs/src/pipeline/filter/globalSearch.ts", "../../gridjs/src/operator/search.ts", "../../gridjs/src/util/className.ts", "../../gridjs/src/pipeline/filter/serverGlobalSearch.ts", "../../gridjs/node_modules/preact/hooks/dist/hooks.module.js", "../../gridjs/src/hooks/useConfig.ts", "../../gridjs/src/i18n/en_US.ts", "../../gridjs/src/i18n/language.ts", "../../gridjs/src/view/plugin/search/actions.ts", "../../gridjs/src/hooks/useStore.ts", "../../gridjs/src/hooks/useSelector.ts", "../../gridjs/src/view/plugin/search/search.tsx", "../../gridjs/src/util/debounce.ts", "../../gridjs/src/pipeline/limit/pagination.ts", "../../gridjs/src/pipeline/limit/serverPagination.ts", "../../gridjs/src/view/plugin/pagination.tsx", "../../gridjs/src/util/width.ts", "../../gridjs/src/view/table/shadow.tsx", "../../gridjs/src/util/string.ts", "../../gridjs/src/plugin.ts", "../../gridjs/src/util/log.ts", "../../gridjs/src/header.ts", "../../gridjs/src/storage/storage.ts", "../../gridjs/src/storage/memory.ts", "../../gridjs/src/storage/server.ts", "../../gridjs/src/storage/storageUtils.ts", "../../gridjs/src/pipeline/pipeline.ts", "../../gridjs/src/pipeline/extractor/storage.ts", "../../gridjs/src/pipeline/transformer/arrayToTabular.ts", "../../gridjs/src/pipeline/initiator/server.ts", "../../gridjs/src/pipeline/transformer/storageResponseToArray.ts", "../../gridjs/src/pipeline/pipelineUtils.ts", "../../gridjs/src/state/store.ts", "../../gridjs/src/config.ts", "../../gridjs/src/view/table/td.tsx", "../../gridjs/src/view/table/tr.tsx", "../../gridjs/src/view/table/messageRow.tsx", "../../gridjs/src/view/table/tbody.tsx", "../../gridjs/src/pipeline/sort/native.ts", "../../gridjs/src/view/plugin/sort/actions.ts", "../../gridjs/src/pipeline/sort/server.ts", "../../gridjs/src/view/plugin/sort/sort.tsx", "../../gridjs/src/util/throttle.ts", "../../gridjs/src/view/plugin/resize/resize.tsx", "../../gridjs/src/view/table/th.tsx", "../../gridjs/src/view/table/thead.tsx", "../../gridjs/src/util/table.ts", "../../gridjs/src/view/actions.ts", "../../gridjs/src/view/table/table.tsx", "../../gridjs/src/view/headerContainer.tsx", "../../gridjs/src/view/footerContainer.tsx", "../../gridjs/src/view/container.tsx", "../../gridjs/src/grid.ts", "../../gridjs-react/node_modules/tslib/tslib.es6.js", "../../gridjs-react/src/grid.tsx", "../../gridjs-react/node_modules/react-dom/client.js", "../../gridjs-react/src/wrapper.tsx"],
  "sourcesContent": ["import { ComponentChild } from 'preact';\nimport Row from './row';\nimport { SortConfig } from './view/plugin/sort/sort';\nimport { JSXInternal } from 'preact/src/jsx';\nimport { Plugin } from './plugin';\n\nexport type OneDArray<T> = T[];\nexport type TwoDArray<T> = T[][];\n\n/**\n * Table cell types\n */\nexport type TCell = number | string | boolean | ComponentChild | HTMLElement;\n// Array of Arrays\nexport type TDataArrayRow = OneDArray<TCell>;\nexport type TDataArray = OneDArray<TDataArrayRow>;\n// Array of Objects\nexport type TDataObjectRow = { [key: string]: TCell };\nexport type TDataObject = OneDArray<TDataObjectRow>;\n// (Array of Arrays) and (Array of Objects)\nexport type TData = TDataArray | TDataObject;\n\n// Table header cell type\nexport interface TColumn {\n  id?: string;\n  // default data for all columns\n  data?: ((row: TDataArrayRow | TDataObjectRow) => TCell) | TCell;\n  // column label\n  name?: string | ComponentChild;\n  plugin?: Plugin<any>;\n  // column width\n  width?: string;\n  minWidth?: string;\n  sort?: SortConfig;\n  columns?: OneDArray<TColumn>;\n  resizable?: boolean;\n  hidden?: boolean;\n  formatter?: (cell: TCell, row: Row, column: TColumn) => ComponentChild;\n  // HTML attributes to be added to all cells and header of this column\n  attributes?:\n    | ((\n        // this is null when `attributes` is called for a th\n        cell: TCell | null,\n        row: Row | null,\n        column: TColumn,\n      ) => JSXInternal.HTMLAttributes<HTMLTableCellElement>)\n    | JSXInternal.HTMLAttributes<HTMLTableCellElement>;\n}\n\n// Comparator function for the sorting plugin\nexport type Comparator<T> = (a: T, b: T) => number;\n\nexport interface TColumnSort {\n  index: number;\n  // 1 ascending, -1 descending\n  direction?: 1 | -1;\n}\n\n// container status\nexport enum Status {\n  Init,\n  Loading,\n  Loaded,\n  Rendered,\n  Error,\n}\n\nexport type CSSDeclaration = {\n  [key: string]: string | number;\n};\n", "var n,l,u,i,t,o,r,f={},e=[],c=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;function s(n,l){for(var u in l)n[u]=l[u];return n}function a(n){var l=n.parentNode;l&&l.removeChild(n)}function h(l,u,i){var t,o,r,f={};for(r in u)\"key\"==r?t=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];if(arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):i),\"function\"==typeof l&&null!=l.defaultProps)for(r in l.defaultProps)void 0===f[r]&&(f[r]=l.defaultProps[r]);return v(l,f,t,o,null)}function v(n,i,t,o,r){var f={type:n,props:i,key:t,ref:o,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,__h:null,constructor:void 0,__v:null==r?++u:r};return null==r&&null!=l.vnode&&l.vnode(f),f}function y(){return{current:null}}function p(n){return n.children}function d(n,l){this.props=n,this.context=l}function _(n,l){if(null==l)return n.__?_(n.__,n.__.__k.indexOf(n)+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return\"function\"==typeof n.type?_(n):null}function k(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return k(n)}}function b(n){(!n.__d&&(n.__d=!0)&&t.push(n)&&!g.__r++||o!==l.debounceRendering)&&((o=l.debounceRendering)||setTimeout)(g)}function g(){for(var n;g.__r=t.length;)n=t.sort(function(n,l){return n.__v.__b-l.__v.__b}),t=[],n.some(function(n){var l,u,i,t,o,r;n.__d&&(o=(t=(l=n).__v).__e,(r=l.__P)&&(u=[],(i=s({},t)).__v=t.__v+1,j(r,t,i,l.__n,void 0!==r.ownerSVGElement,null!=t.__h?[o]:null,u,null==o?_(t):o,t.__h),z(u,t),t.__e!=o&&k(t)))})}function w(n,l,u,i,t,o,r,c,s,a){var h,y,d,k,b,g,w,x=i&&i.__k||e,C=x.length;for(u.__k=[],h=0;h<l.length;h++)if(null!=(k=u.__k[h]=null==(k=l[h])||\"boolean\"==typeof k?null:\"string\"==typeof k||\"number\"==typeof k||\"bigint\"==typeof k?v(null,k,null,null,k):Array.isArray(k)?v(p,{children:k},null,null,null):k.__b>0?v(k.type,k.props,k.key,k.ref?k.ref:null,k.__v):k)){if(k.__=u,k.__b=u.__b+1,null===(d=x[h])||d&&k.key==d.key&&k.type===d.type)x[h]=void 0;else for(y=0;y<C;y++){if((d=x[y])&&k.key==d.key&&k.type===d.type){x[y]=void 0;break}d=null}j(n,k,d=d||f,t,o,r,c,s,a),b=k.__e,(y=k.ref)&&d.ref!=y&&(w||(w=[]),d.ref&&w.push(d.ref,null,k),w.push(y,k.__c||b,k)),null!=b?(null==g&&(g=b),\"function\"==typeof k.type&&k.__k===d.__k?k.__d=s=m(k,s,n):s=A(n,k,d,x,b,s),\"function\"==typeof u.type&&(u.__d=s)):s&&d.__e==s&&s.parentNode!=n&&(s=_(d))}for(u.__e=g,h=C;h--;)null!=x[h]&&N(x[h],x[h]);if(w)for(h=0;h<w.length;h++)M(w[h],w[++h],w[++h])}function m(n,l,u){for(var i,t=n.__k,o=0;t&&o<t.length;o++)(i=t[o])&&(i.__=n,l=\"function\"==typeof i.type?m(i,l,u):A(u,i,i,t,i.__e,l));return l}function x(n,l){return l=l||[],null==n||\"boolean\"==typeof n||(Array.isArray(n)?n.some(function(n){x(n,l)}):l.push(n)),l}function A(n,l,u,i,t,o){var r,f,e;if(void 0!==l.__d)r=l.__d,l.__d=void 0;else if(null==u||t!=o||null==t.parentNode)n:if(null==o||o.parentNode!==n)n.appendChild(t),r=null;else{for(f=o,e=0;(f=f.nextSibling)&&e<i.length;e+=1)if(f==t)break n;n.insertBefore(t,o),r=o}return void 0!==r?r:t.nextSibling}function C(n,l,u,i,t){var o;for(o in u)\"children\"===o||\"key\"===o||o in l||H(n,o,null,u[o],i);for(o in l)t&&\"function\"!=typeof l[o]||\"children\"===o||\"key\"===o||\"value\"===o||\"checked\"===o||u[o]===l[o]||H(n,o,l[o],u[o],i)}function $(n,l,u){\"-\"===l[0]?n.setProperty(l,u):n[l]=null==u?\"\":\"number\"!=typeof u||c.test(l)?u:u+\"px\"}function H(n,l,u,i,t){var o;n:if(\"style\"===l)if(\"string\"==typeof u)n.style.cssText=u;else{if(\"string\"==typeof i&&(n.style.cssText=i=\"\"),i)for(l in i)u&&l in u||$(n.style,l,\"\");if(u)for(l in u)i&&u[l]===i[l]||$(n.style,l,u[l])}else if(\"o\"===l[0]&&\"n\"===l[1])o=l!==(l=l.replace(/Capture$/,\"\")),l=l.toLowerCase()in n?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+o]=u,u?i||n.addEventListener(l,o?T:I,o):n.removeEventListener(l,o?T:I,o);else if(\"dangerouslySetInnerHTML\"!==l){if(t)l=l.replace(/xlink(H|:h)/,\"h\").replace(/sName$/,\"s\");else if(\"href\"!==l&&\"list\"!==l&&\"form\"!==l&&\"tabIndex\"!==l&&\"download\"!==l&&l in n)try{n[l]=null==u?\"\":u;break n}catch(n){}\"function\"==typeof u||(null==u||!1===u&&-1==l.indexOf(\"-\")?n.removeAttribute(l):n.setAttribute(l,u))}}function I(n){this.l[n.type+!1](l.event?l.event(n):n)}function T(n){this.l[n.type+!0](l.event?l.event(n):n)}function j(n,u,i,t,o,r,f,e,c){var a,h,v,y,_,k,b,g,m,x,A,C,$,H,I,T=u.type;if(void 0!==u.constructor)return null;null!=i.__h&&(c=i.__h,e=u.__e=i.__e,u.__h=null,r=[e]),(a=l.__b)&&a(u);try{n:if(\"function\"==typeof T){if(g=u.props,m=(a=T.contextType)&&t[a.__c],x=a?m?m.props.value:a.__:t,i.__c?b=(h=u.__c=i.__c).__=h.__E:(\"prototype\"in T&&T.prototype.render?u.__c=h=new T(g,x):(u.__c=h=new d(g,x),h.constructor=T,h.render=O),m&&m.sub(h),h.props=g,h.state||(h.state={}),h.context=x,h.__n=t,v=h.__d=!0,h.__h=[],h._sb=[]),null==h.__s&&(h.__s=h.state),null!=T.getDerivedStateFromProps&&(h.__s==h.state&&(h.__s=s({},h.__s)),s(h.__s,T.getDerivedStateFromProps(g,h.__s))),y=h.props,_=h.state,v)null==T.getDerivedStateFromProps&&null!=h.componentWillMount&&h.componentWillMount(),null!=h.componentDidMount&&h.__h.push(h.componentDidMount);else{if(null==T.getDerivedStateFromProps&&g!==y&&null!=h.componentWillReceiveProps&&h.componentWillReceiveProps(g,x),!h.__e&&null!=h.shouldComponentUpdate&&!1===h.shouldComponentUpdate(g,h.__s,x)||u.__v===i.__v){for(h.props=g,h.state=h.__s,u.__v!==i.__v&&(h.__d=!1),h.__v=u,u.__e=i.__e,u.__k=i.__k,u.__k.forEach(function(n){n&&(n.__=u)}),A=0;A<h._sb.length;A++)h.__h.push(h._sb[A]);h._sb=[],h.__h.length&&f.push(h);break n}null!=h.componentWillUpdate&&h.componentWillUpdate(g,h.__s,x),null!=h.componentDidUpdate&&h.__h.push(function(){h.componentDidUpdate(y,_,k)})}if(h.context=x,h.props=g,h.__v=u,h.__P=n,C=l.__r,$=0,\"prototype\"in T&&T.prototype.render){for(h.state=h.__s,h.__d=!1,C&&C(u),a=h.render(h.props,h.state,h.context),H=0;H<h._sb.length;H++)h.__h.push(h._sb[H]);h._sb=[]}else do{h.__d=!1,C&&C(u),a=h.render(h.props,h.state,h.context),h.state=h.__s}while(h.__d&&++$<25);h.state=h.__s,null!=h.getChildContext&&(t=s(s({},t),h.getChildContext())),v||null==h.getSnapshotBeforeUpdate||(k=h.getSnapshotBeforeUpdate(y,_)),I=null!=a&&a.type===p&&null==a.key?a.props.children:a,w(n,Array.isArray(I)?I:[I],u,i,t,o,r,f,e,c),h.base=u.__e,u.__h=null,h.__h.length&&f.push(h),b&&(h.__E=h.__=null),h.__e=!1}else null==r&&u.__v===i.__v?(u.__k=i.__k,u.__e=i.__e):u.__e=L(i.__e,u,i,t,o,r,f,c);(a=l.diffed)&&a(u)}catch(n){u.__v=null,(c||null!=r)&&(u.__e=e,u.__h=!!c,r[r.indexOf(e)]=null),l.__e(n,u,i)}}function z(n,u){l.__c&&l.__c(u,n),n.some(function(u){try{n=u.__h,u.__h=[],n.some(function(n){n.call(u)})}catch(n){l.__e(n,u.__v)}})}function L(l,u,i,t,o,r,e,c){var s,h,v,y=i.props,p=u.props,d=u.type,k=0;if(\"svg\"===d&&(o=!0),null!=r)for(;k<r.length;k++)if((s=r[k])&&\"setAttribute\"in s==!!d&&(d?s.localName===d:3===s.nodeType)){l=s,r[k]=null;break}if(null==l){if(null===d)return document.createTextNode(p);l=o?document.createElementNS(\"http://www.w3.org/2000/svg\",d):document.createElement(d,p.is&&p),r=null,c=!1}if(null===d)y===p||c&&l.data===p||(l.data=p);else{if(r=r&&n.call(l.childNodes),h=(y=i.props||f).dangerouslySetInnerHTML,v=p.dangerouslySetInnerHTML,!c){if(null!=r)for(y={},k=0;k<l.attributes.length;k++)y[l.attributes[k].name]=l.attributes[k].value;(v||h)&&(v&&(h&&v.__html==h.__html||v.__html===l.innerHTML)||(l.innerHTML=v&&v.__html||\"\"))}if(C(l,p,y,o,c),v)u.__k=[];else if(k=u.props.children,w(l,Array.isArray(k)?k:[k],u,i,t,o&&\"foreignObject\"!==d,r,e,r?r[0]:i.__k&&_(i,0),c),null!=r)for(k=r.length;k--;)null!=r[k]&&a(r[k]);c||(\"value\"in p&&void 0!==(k=p.value)&&(k!==l.value||\"progress\"===d&&!k||\"option\"===d&&k!==y.value)&&H(l,\"value\",k,y.value,!1),\"checked\"in p&&void 0!==(k=p.checked)&&k!==l.checked&&H(l,\"checked\",k,y.checked,!1))}return l}function M(n,u,i){try{\"function\"==typeof n?n(u):n.current=u}catch(n){l.__e(n,i)}}function N(n,u,i){var t,o;if(l.unmount&&l.unmount(n),(t=n.ref)&&(t.current&&t.current!==n.__e||M(t,null,u)),null!=(t=n.__c)){if(t.componentWillUnmount)try{t.componentWillUnmount()}catch(n){l.__e(n,u)}t.base=t.__P=null,n.__c=void 0}if(t=n.__k)for(o=0;o<t.length;o++)t[o]&&N(t[o],u,i||\"function\"!=typeof n.type);i||null==n.__e||a(n.__e),n.__=n.__e=n.__d=void 0}function O(n,l,u){return this.constructor(n,u)}function P(u,i,t){var o,r,e;l.__&&l.__(u,i),r=(o=\"function\"==typeof t)?null:t&&t.__k||i.__k,e=[],j(i,u=(!o&&t||i).__k=h(p,null,[u]),r||f,f,void 0!==i.ownerSVGElement,!o&&t?[t]:r?null:i.firstChild?n.call(i.childNodes):null,e,!o&&t?t:r?r.__e:i.firstChild,o),z(e,u)}function S(n,l){P(n,l,S)}function q(l,u,i){var t,o,r,f=s({},l.props);for(r in u)\"key\"==r?t=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];return arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):i),v(l.type,f,t||l.key,o||l.ref,null)}function B(n,l){var u={__c:l=\"__cC\"+r++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var u,i;return this.getChildContext||(u=[],(i={})[l]=this,this.getChildContext=function(){return i},this.shouldComponentUpdate=function(n){this.props.value!==n.value&&u.some(b)},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u.splice(u.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Provider.__=u.Consumer.contextType=u}n=e.slice,l={__e:function(n,l,u,i){for(var t,o,r;l=l.__;)if((t=l.__c)&&!t.__)try{if((o=t.constructor)&&null!=o.getDerivedStateFromError&&(t.setState(o.getDerivedStateFromError(n)),r=t.__d),null!=t.componentDidCatch&&(t.componentDidCatch(n,i||{}),r=t.__d),r)return t.__E=t}catch(l){n=l}throw n}},u=0,i=function(n){return null!=n&&void 0===n.constructor},d.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=s({},this.state),\"function\"==typeof n&&(n=n(s({},u),this.props)),n&&s(u,n),null!=n&&this.__v&&(l&&this._sb.push(l),b(this))},d.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),b(this))},d.prototype.render=p,t=[],g.__r=0,r=0;export{d as Component,p as Fragment,q as cloneElement,B as createContext,h as createElement,y as createRef,h,S as hydrate,i as isValidElement,l as options,P as render,x as toChildArray};\n//# sourceMappingURL=preact.module.js.map\n", "export type ID = string;\n\nexport function generateUUID(): ID {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8;\n    return v.toString(16);\n  });\n}\n", "import { generateUUID, ID } from './util/id';\n\nclass Base {\n  private readonly _id: ID;\n\n  constructor(id?: ID) {\n    this._id = id || generateUUID();\n  }\n\n  get id(): ID {\n    return this._id;\n  }\n}\n\nexport default Base;\n", "import { h } from 'preact';\n\nexport interface HTMLContentProps {\n  content: string;\n  parentElement?: string;\n}\n\nexport function HTMLElement(props: HTMLContentProps) {\n  return h(props.parentElement || 'span', {\n    dangerouslySetInnerHTML: { __html: props.content },\n  });\n}\n", "import { h, VNode } from 'preact';\nimport { HTMLElement } from '../view/htmlElement';\n\nexport function decode(content: string): string {\n  const value = new DOMParser().parseFromString(content, 'text/html');\n  return value.documentElement.textContent;\n}\n\nexport function html(content: string, parentElement?: string): VNode {\n  return h(HTMLElement, { content: content, parentElement: parentElement });\n}\n", "import Base from './base';\nimport { TCell } from './types';\nimport { html } from './util/html';\nimport { ComponentChild } from 'preact';\n\nclass Cell extends Base {\n  // because a Cell is a subset of TCell type\n  public data: number | string | boolean | ComponentChild;\n\n  constructor(data: TCell) {\n    super();\n\n    this.update(data);\n  }\n\n  private cast(data: TCell): number | string | boolean | ComponentChild {\n    if (data instanceof HTMLElement) {\n      return html(data.outerHTML);\n    }\n\n    return data;\n  }\n\n  /**\n   * Updates the Cell's data\n   *\n   * @param data\n   */\n  public update(data: TCell): Cell {\n    this.data = this.cast(data);\n    return this;\n  }\n}\n\nexport default Cell;\n", "// The order of enum items define the processing order of the processor type\n// e.g. Extractor = 0 will be processed before Transformer = 1\nimport { generateUUID, ID } from '../util/id';\nimport { EventEmitter } from '../util/eventEmitter';\nimport { deepEqual } from '../util/deepEqual';\n\nexport enum ProcessorType {\n  Initiator,\n  ServerFilter,\n  ServerSort,\n  ServerLimit,\n  Extractor,\n  Transformer,\n  Filter,\n  Sort,\n  Limit,\n}\n\ninterface PipelineProcessorEvents {\n  propsUpdated: <T, P>(processor: PipelineProcessor<T, P>) => void;\n  beforeProcess: (...args) => void;\n  afterProcess: (...args) => void;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\nexport interface PipelineProcessorProps {}\n\nexport abstract class PipelineProcessor<\n  T,\n  P extends Partial<PipelineProcessorProps>,\n> extends EventEmitter<PipelineProcessorEvents> {\n  public readonly id: ID;\n  private _props: P;\n\n  abstract get type(): ProcessorType;\n  protected abstract _process(...args): T | Promise<T>;\n  protected validateProps?(...args): void;\n\n  constructor(props?: Partial<P>) {\n    super();\n\n    this._props = {} as P;\n    this.id = generateUUID();\n\n    if (props) this.setProps(props);\n  }\n\n  /**\n   * process is used to call beforeProcess and afterProcess callbacks\n   * This function is just a wrapper that calls _process()\n   *\n   * @param args\n   */\n  process(...args): T | Promise<T> {\n    if (this.validateProps instanceof Function) {\n      this.validateProps(...args);\n    }\n\n    this.emit('beforeProcess', ...args);\n    const result = this._process(...args);\n    this.emit('afterProcess', ...args);\n    return result;\n  }\n\n  setProps(props: Partial<P>): this {\n    const updatedProps = {\n      ...this._props,\n      ...props,\n    };\n\n    if (!deepEqual(updatedProps, this._props)) {\n      this._props = updatedProps;\n      this.emit('propsUpdated', this);\n    }\n\n    return this;\n  }\n\n  get props(): P {\n    return this._props;\n  }\n}\n", "import Cell from './cell';\nimport Base from './base';\nimport { TCell } from './types';\n\nclass Row extends Base {\n  private _cells: Cell[];\n\n  constructor(cells?: Cell[]) {\n    super();\n\n    this.cells = cells || [];\n  }\n\n  public cell(index: number): Cell {\n    return this._cells[index];\n  }\n\n  public get cells(): Cell[] {\n    return this._cells;\n  }\n\n  public set cells(cells: Cell[]) {\n    this._cells = cells;\n  }\n\n  public toArray(): TCell[] {\n    return this.cells.map((cell) => cell.data);\n  }\n\n  /**\n   * Creates a new Row from an array of Cell(s)\n   * This method generates a new ID for the Row and all nested elements\n   *\n   * @param cells\n   * @returns Row\n   */\n  static fromCells(cells: Cell[]): Row {\n    return new Row(cells.map((cell) => new Cell(cell.data)));\n  }\n\n  get length(): number {\n    return this.cells.length;\n  }\n}\n\nexport default Row;\n", "import Base from './base';\nimport Row from './row';\nimport Cell from './cell';\nimport { OneDArray, TCell, TwoDArray } from './types';\nimport { oneDtoTwoD } from './util/array';\n\nclass Tabular extends Base {\n  private _rows: Row[];\n  private _length: number;\n\n  constructor(rows?: Row[] | Row) {\n    super();\n\n    if (rows instanceof Array) {\n      this.rows = rows;\n    } else if (rows instanceof Row) {\n      this.rows = [rows];\n    } else {\n      this.rows = [];\n    }\n  }\n\n  get rows(): Row[] {\n    return this._rows;\n  }\n\n  set rows(rows: Row[]) {\n    this._rows = rows;\n  }\n\n  get length(): number {\n    return this._length || this.rows.length;\n  }\n\n  // we want to sent the length when storage is ServerStorage\n  set length(len: number) {\n    this._length = len;\n  }\n\n  public toArray(): TCell[][] {\n    return this.rows.map((row) => row.toArray());\n  }\n\n  /**\n   * Creates a new Tabular from an array of Row(s)\n   * This method generates a new ID for the Tabular and all nested elements\n   *\n   * @param rows\n   * @returns Tabular\n   */\n  static fromRows(rows: Row[]): Tabular {\n    return new Tabular(rows.map((row) => Row.fromCells(row.cells)));\n  }\n\n  /**\n   * Creates a new Tabular from a 2D array\n   * This method generates a new ID for the Tabular and all nested elements\n   *\n   * @param data\n   * @returns Tabular\n   */\n  static fromArray<T extends TCell>(\n    data: OneDArray<T> | TwoDArray<T>,\n  ): Tabular {\n    data = oneDtoTwoD(data);\n\n    return new Tabular(\n      data.map((row) => new Row(row.map((cell) => new Cell(cell)))),\n    );\n  }\n}\n\nexport default Tabular;\n", "import { OneDArray, TwoDArray } from '../types';\n\nexport function oneDtoTwoD<T>(data: OneDArray<T> | TwoDArray<T>): TwoDArray<T> {\n  if (data[0] && !(data[0] instanceof Array)) {\n    return [data] as TwoDArray<T>;\n  }\n\n  return data as TwoDArray<T>;\n}\n\nexport function flatten<T>(arrays: TwoDArray<T>): OneDArray<T> {\n  return arrays.reduce((prev, x) => prev.concat(x), []);\n}\n", "type EventArgs<T> = [T] extends [(...args: infer U) => any]\n  ? U\n  : [T] extends [void]\n  ? []\n  : [T];\n\n/**\n * Example:\n *\n * export interface BaseEvents<P, S> {\n *   SET_STATE: (component: BaseComponent<P, S>, state: S) => void;\n * }\n */\n\nexport interface EventEmitter<EventTypes> {\n  addListener<EventName extends keyof EventTypes>(\n    event: EventName,\n    listener: (...args: EventArgs<EventTypes[EventName]>) => void,\n  ): EventEmitter<EventTypes>;\n\n  on<EventName extends keyof EventTypes>(\n    event: EventName,\n    listener: (...args: EventArgs<EventTypes[EventName]>) => void,\n  ): EventEmitter<EventTypes>;\n\n  off<EventName extends keyof EventTypes>(\n    event: EventName,\n    listener: (...args: EventArgs<EventTypes[EventName]>) => void,\n  ): EventEmitter<EventTypes>;\n\n  emit<EventName extends keyof EventTypes>(\n    event: EventName,\n    ...args: EventArgs<EventTypes[EventName]>\n  ): boolean;\n}\n\nexport class EventEmitter<EventTypes> {\n  private callbacks: { [event: string]: ((...args) => void)[] };\n\n  // because we are using EventEmitter as a mixin and the\n  // constructor won't be called by the applyMixins function\n  // see src/base.ts and src/util/applyMixin.ts\n  private init(event?: string): void {\n    if (!this.callbacks) {\n      this.callbacks = {};\n    }\n\n    if (event && !this.callbacks[event]) {\n      this.callbacks[event] = [];\n    }\n  }\n\n  listeners(): { [event: string]: ((...args) => void)[] } {\n    return this.callbacks;\n  }\n\n  on<EventName extends keyof EventTypes>(\n    event: EventName,\n    listener: (...args: EventArgs<EventTypes[EventName]>) => void,\n  ): EventEmitter<EventTypes> {\n    this.init(event as string);\n    this.callbacks[event as string].push(listener);\n    return this;\n  }\n\n  off<EventName extends keyof EventTypes>(\n    event: EventName,\n    listener: (...args: EventArgs<EventTypes[EventName]>) => void,\n  ): EventEmitter<EventTypes> {\n    const eventName = event as string;\n\n    this.init();\n\n    if (!this.callbacks[eventName] || this.callbacks[eventName].length === 0) {\n      // there is no callbacks with this key\n      return this;\n    }\n\n    this.callbacks[eventName] = this.callbacks[eventName].filter(\n      (value) => value != listener,\n    );\n\n    return this;\n  }\n\n  emit<EventName extends keyof EventTypes>(\n    event: EventName,\n    ...args: EventArgs<EventTypes[EventName]>\n  ): boolean {\n    const eventName = event as string;\n\n    this.init(eventName);\n\n    if (this.callbacks[eventName].length > 0) {\n      this.callbacks[eventName].forEach((value) => value(...args));\n      return true;\n    }\n\n    return false;\n  }\n}\n", "/**\n * Returns true if both objects are equal\n * @param a left object\n * @param b right object\n * @returns\n */\nexport function deepEqual<A, B>(obj1: A, obj2: B) {\n  // If objects are not the same type, return false\n  if (typeof obj1 !== typeof obj2) {\n    return false;\n  }\n  // If objects are both null or undefined, return true\n  if (obj1 === null && obj2 === null) {\n    return true;\n  }\n  // If objects are both primitive types, compare them directly\n  if (typeof obj1 !== 'object') {\n    // eslint-disable-next-line\n    // @ts-ignore\n    return obj1 === obj2;\n  }\n  // If objects are arrays, compare their elements recursively\n  if (Array.isArray(obj1) && Array.isArray(obj2)) {\n    if (obj1.length !== obj2.length) {\n      return false;\n    }\n    for (let i = 0; i < obj1.length; i++) {\n      if (!deepEqual(obj1[i], obj2[i])) {\n        return false;\n      }\n    }\n    return true;\n  }\n  // If objects are VNodes, compare their props only\n  if (\n    // eslint-disable-next-line no-prototype-builtins\n    obj1.hasOwnProperty('constructor') &&\n    // eslint-disable-next-line no-prototype-builtins\n    obj2.hasOwnProperty('constructor') &&\n    // eslint-disable-next-line no-prototype-builtins\n    obj1.hasOwnProperty('props') &&\n    // eslint-disable-next-line no-prototype-builtins\n    obj2.hasOwnProperty('props') &&\n    // eslint-disable-next-line no-prototype-builtins\n    obj1.hasOwnProperty('key') &&\n    // eslint-disable-next-line no-prototype-builtins\n    obj2.hasOwnProperty('key') &&\n    // eslint-disable-next-line no-prototype-builtins\n    obj1.hasOwnProperty('ref') &&\n    // eslint-disable-next-line no-prototype-builtins\n    obj2.hasOwnProperty('ref') &&\n    // eslint-disable-next-line no-prototype-builtins\n    obj1.hasOwnProperty('type') &&\n    // eslint-disable-next-line no-prototype-builtins\n    obj2.hasOwnProperty('type')\n  ) {\n    return deepEqual(obj1['props'], obj2['props']);\n  }\n  // If objects are both objects, compare their properties recursively\n  const keys1 = Object.keys(obj1);\n  const keys2 = Object.keys(obj2);\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n  for (const key of keys1) {\n    // eslint-disable-next-line no-prototype-builtins\n    if (!obj2.hasOwnProperty(key) || !deepEqual(obj1[key], obj2[key])) {\n      return false;\n    }\n  }\n  return true;\n}\n", "import search from '../../operator/search';\nimport Tabular from '../../tabular';\nimport {\n  PipelineProcessor,\n  PipelineProcessorProps,\n  ProcessorType,\n} from '../processor';\nimport { OneDArray, TCell, TColumn } from '../../types';\n\ninterface GlobalSearchFilterProps extends PipelineProcessorProps {\n  keyword: string;\n  columns: OneDArray<TColumn>;\n  ignoreHiddenColumns: boolean;\n  selector?: (cell: TCell, rowIndex: number, cellIndex: number) => string;\n}\n\nclass GlobalSearchFilter extends PipelineProcessor<\n  Tabular,\n  GlobalSearchFilterProps\n> {\n  get type(): ProcessorType {\n    return ProcessorType.Filter;\n  }\n\n  _process(data: Tabular): Tabular {\n    if (this.props.keyword) {\n      return search(\n        String(this.props.keyword).trim(),\n        this.props.columns,\n        this.props.ignoreHiddenColumns,\n        data,\n        this.props.selector,\n      );\n    }\n\n    return data;\n  }\n}\n\nexport default GlobalSearchFilter;\n", "import Tabular from '../tabular';\nimport { VNode } from 'preact';\nimport { HTMLContentProps } from '../view/htmlElement';\nimport { OneDArray, TCell, TColumn } from '../types';\n\nexport default function (\n  keyword: string,\n  columns: OneDArray<TColumn>,\n  ignoreHiddenColumns: boolean,\n  tabular: Tabular,\n  selector?: (cell: TCell, rowIndex: number, cellIndex: number) => string,\n): Tabular {\n  // escape special regex chars\n  keyword = keyword.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n\n  return new Tabular(\n    tabular.rows.filter((row, rowIndex) =>\n      row.cells.some((cell, cellIndex) => {\n        if (!cell) {\n          return false;\n        }\n\n        if (ignoreHiddenColumns) {\n          if (\n            columns &&\n            columns[cellIndex] &&\n            typeof columns[cellIndex] === 'object'\n          ) {\n            const typedColumn = columns[cellIndex] as TColumn;\n            if (typedColumn.hidden) {\n              return false;\n            }\n          }\n        }\n\n        let data = '';\n\n        if (typeof selector === 'function') {\n          data = selector(cell.data, rowIndex, cellIndex);\n        } else if (typeof cell.data === 'object') {\n          // HTMLContent element\n          const element = cell.data as VNode<HTMLContentProps>;\n          if (element && element.props && element.props.content) {\n            // TODO: we should only search in the content of the element. props.content is the entire HTML element\n            data = element.props.content;\n          }\n        } else {\n          // primitive types\n          data = String(cell.data);\n        }\n\n        return new RegExp(keyword, 'gi').test(data);\n      }),\n    ),\n  );\n}\n", "import { JSXInternal } from 'preact/src/jsx';\n\nexport function className(...args: string[]): string {\n  const prefix = 'gridjs';\n\n  return `${prefix}${args.reduce(\n    (prev: string, cur: string) => `${prev}-${cur}`,\n    '',\n  )}`;\n}\n\nexport function classJoin(\n  ...classNames: (undefined | string | JSXInternal.SignalLike<string>)[]\n): string {\n  return classNames\n    .map((x) => (x ? x.toString() : ''))\n    .filter((x) => x)\n    .reduce((className, prev) => `${className || ''} ${prev}`, '')\n    .trim();\n}\n", "import {\n  PipelineProcessor,\n  PipelineProcessorProps,\n  ProcessorType,\n} from '../processor';\nimport { ServerStorageOptions } from '../../storage/server';\n\ninterface ServerGlobalSearchFilterProps extends PipelineProcessorProps {\n  keyword?: string;\n  url?: (prevUrl: string, keyword: string) => string;\n  body?: (prevBody: BodyInit, keyword: string) => BodyInit;\n}\n\nclass ServerGlobalSearchFilter extends PipelineProcessor<\n  ServerStorageOptions,\n  ServerGlobalSearchFilterProps\n> {\n  get type(): ProcessorType {\n    return ProcessorType.ServerFilter;\n  }\n\n  _process(options?: ServerStorageOptions): ServerStorageOptions {\n    if (!this.props.keyword) return options;\n\n    const updates = {};\n\n    if (this.props.url) {\n      updates['url'] = this.props.url(options.url, this.props.keyword);\n    }\n\n    if (this.props.body) {\n      updates['body'] = this.props.body(options.body, this.props.keyword);\n    }\n\n    return {\n      ...options,\n      ...updates,\n    };\n  }\n}\n\nexport default ServerGlobalSearchFilter;\n", "import{options as n}from\"preact\";var t,r,u,i,o=0,f=[],c=[],e=n.__b,a=n.__r,v=n.diffed,l=n.__c,m=n.unmount;function d(t,u){n.__h&&n.__h(r,t,o||u),o=0;var i=r.__H||(r.__H={__:[],__h:[]});return t>=i.__.length&&i.__.push({__V:c}),i.__[t]}function p(n){return o=1,y(B,n)}function y(n,u,i){var o=d(t++,2);if(o.t=n,!o.__c&&(o.__=[i?i(u):B(void 0,u),function(n){var t=o.__N?o.__N[0]:o.__[0],r=o.t(t,n);t!==r&&(o.__N=[r,o.__[1]],o.__c.setState({}))}],o.__c=r,!r.u)){r.u=!0;var f=r.shouldComponentUpdate;r.shouldComponentUpdate=function(n,t,r){if(!o.__c.__H)return!0;var u=o.__c.__H.__.filter(function(n){return n.__c});if(u.every(function(n){return!n.__N}))return!f||f.call(this,n,t,r);var i=!1;return u.forEach(function(n){if(n.__N){var t=n.__[0];n.__=n.__N,n.__N=void 0,t!==n.__[0]&&(i=!0)}}),!(!i&&o.__c.props===n)&&(!f||f.call(this,n,t,r))}}return o.__N||o.__}function h(u,i){var o=d(t++,3);!n.__s&&z(o.__H,i)&&(o.__=u,o.i=i,r.__H.__h.push(o))}function s(u,i){var o=d(t++,4);!n.__s&&z(o.__H,i)&&(o.__=u,o.i=i,r.__h.push(o))}function _(n){return o=5,F(function(){return{current:n}},[])}function A(n,t,r){o=6,s(function(){return\"function\"==typeof n?(n(t()),function(){return n(null)}):n?(n.current=t(),function(){return n.current=null}):void 0},null==r?r:r.concat(n))}function F(n,r){var u=d(t++,7);return z(u.__H,r)?(u.__V=n(),u.i=r,u.__h=n,u.__V):u.__}function T(n,t){return o=8,F(function(){return n},t)}function q(n){var u=r.context[n.__c],i=d(t++,9);return i.c=n,u?(null==i.__&&(i.__=!0,u.sub(r)),u.props.value):n.__}function x(t,r){n.useDebugValue&&n.useDebugValue(r?r(t):t)}function P(n){var u=d(t++,10),i=p();return u.__=n,r.componentDidCatch||(r.componentDidCatch=function(n,t){u.__&&u.__(n,t),i[1](n)}),[i[0],function(){i[1](void 0)}]}function V(){var n=d(t++,11);if(!n.__){for(var u=r.__v;null!==u&&!u.__m&&null!==u.__;)u=u.__;var i=u.__m||(u.__m=[0,0]);n.__=\"P\"+i[0]+\"-\"+i[1]++}return n.__}function b(){for(var t;t=f.shift();)if(t.__P&&t.__H)try{t.__H.__h.forEach(k),t.__H.__h.forEach(w),t.__H.__h=[]}catch(r){t.__H.__h=[],n.__e(r,t.__v)}}n.__b=function(n){r=null,e&&e(n)},n.__r=function(n){a&&a(n),t=0;var i=(r=n.__c).__H;i&&(u===r?(i.__h=[],r.__h=[],i.__.forEach(function(n){n.__N&&(n.__=n.__N),n.__V=c,n.__N=n.i=void 0})):(i.__h.forEach(k),i.__h.forEach(w),i.__h=[])),u=r},n.diffed=function(t){v&&v(t);var o=t.__c;o&&o.__H&&(o.__H.__h.length&&(1!==f.push(o)&&i===n.requestAnimationFrame||((i=n.requestAnimationFrame)||j)(b)),o.__H.__.forEach(function(n){n.i&&(n.__H=n.i),n.__V!==c&&(n.__=n.__V),n.i=void 0,n.__V=c})),u=r=null},n.__c=function(t,r){r.some(function(t){try{t.__h.forEach(k),t.__h=t.__h.filter(function(n){return!n.__||w(n)})}catch(u){r.some(function(n){n.__h&&(n.__h=[])}),r=[],n.__e(u,t.__v)}}),l&&l(t,r)},n.unmount=function(t){m&&m(t);var r,u=t.__c;u&&u.__H&&(u.__H.__.forEach(function(n){try{k(n)}catch(n){r=n}}),u.__H=void 0,r&&n.__e(r,u.__v))};var g=\"function\"==typeof requestAnimationFrame;function j(n){var t,r=function(){clearTimeout(u),g&&cancelAnimationFrame(t),setTimeout(n)},u=setTimeout(r,100);g&&(t=requestAnimationFrame(r))}function k(n){var t=r,u=n.__c;\"function\"==typeof u&&(n.__c=void 0,u()),r=t}function w(n){var t=r;n.__c=n.__(),r=t}function z(n,t){return!n||n.length!==t.length||t.some(function(t,r){return t!==n[r]})}function B(n,t){return\"function\"==typeof t?t(n):t}export{T as useCallback,q as useContext,x as useDebugValue,h as useEffect,P as useErrorBoundary,V as useId,A as useImperativeHandle,s as useLayoutEffect,F as useMemo,y as useReducer,_ as useRef,p as useState};\n//# sourceMappingURL=hooks.module.js.map\n", "import { useContext } from 'preact/hooks';\nimport { Config, ConfigContext } from '../config';\n\nexport function useConfig(): Config {\n  return useContext(ConfigContext);\n}\n", "export default {\n  search: {\n    placeholder: 'Type a keyword...',\n  },\n  sort: {\n    sortAsc: 'Sort column ascending',\n    sortDesc: 'Sort column descending',\n  },\n  pagination: {\n    previous: 'Previous',\n    next: 'Next',\n    navigate: (page, pages) => `Page ${page} of ${pages}`,\n    page: (page) => `Page ${page}`,\n    showing: 'Showing',\n    of: 'of',\n    to: 'to',\n    results: 'results',\n  },\n  loading: 'Loading...',\n  noRecordsFound: 'No matching records found',\n  error: 'An error happened while fetching the data',\n};\n", "import { useConfig } from '../hooks/useConfig';\nimport enUS from './en_US';\ntype MessageFormat = (...args) => string;\ntype Message = string | MessageFormat;\nexport type Language = { [key: string]: Message | Language };\n\nexport class Translator {\n  private readonly _language: Language;\n  private readonly _defaultLanguage: Language;\n\n  constructor(language?: Language) {\n    this._language = language;\n    this._defaultLanguage = enUS;\n  }\n\n  /**\n   * Tries to split the message with \".\" and find\n   * the key in the given language\n   *\n   * @param message\n   * @param lang\n   */\n  getString(message: string, lang: Language): MessageFormat {\n    if (!lang || !message) return null;\n\n    const splitted = message.split('.');\n    const key = splitted[0];\n\n    if (lang[key]) {\n      const val = lang[key];\n\n      if (typeof val === 'string') {\n        return (): string => val;\n      } else if (typeof val === 'function') {\n        return val;\n      } else {\n        return this.getString(splitted.slice(1).join('.'), val);\n      }\n    }\n\n    return null;\n  }\n\n  translate(message: string, ...args): string {\n    const translated = this.getString(message, this._language);\n    let messageFormat;\n\n    if (translated) {\n      messageFormat = translated;\n    } else {\n      messageFormat = this.getString(message, this._defaultLanguage);\n    }\n\n    if (messageFormat) {\n      return messageFormat(...args);\n    }\n\n    return message;\n  }\n}\n\nexport function useTranslator() {\n  const config = useConfig();\n\n  return function (message: string, ...args): string {\n    return config.translator.translate(message, ...args);\n  };\n}\n", "export const SearchKeyword = (payload) => (state) => {\n  return {\n    ...state,\n    search: {\n      keyword: payload,\n    },\n  };\n};\n", "import { useConfig } from './useConfig';\n\nexport function useStore() {\n  const config = useConfig();\n  return config.store;\n}\n", "import { useEffect, useState } from 'preact/hooks';\nimport { useStore } from './useStore';\n\nexport default function useSelector<T>(selector: (state) => T) {\n  const store = useStore();\n  const [current, setCurrent] = useState(selector(store.getState()));\n\n  useEffect(() => {\n    const unsubscribe = store.subscribe(() => {\n      const updated = selector(store.getState());\n\n      if (current !== updated) {\n        setCurrent(updated);\n      }\n    });\n\n    return unsubscribe;\n  }, []);\n\n  return current;\n}\n", "import { h, JSX } from 'preact';\nimport GlobalSearchFilter from '../../../pipeline/filter/globalSearch';\nimport { classJoin, className } from '../../../util/className';\nimport ServerGlobalSearchFilter from '../../../pipeline/filter/serverGlobalSearch';\nimport { TCell } from '../../../types';\nimport { useConfig } from '../../../hooks/useConfig';\nimport { useCallback, useEffect, useState } from 'preact/hooks';\nimport { useTranslator } from '../../../i18n/language';\nimport * as actions from './actions';\nimport { useStore } from '../../../hooks/useStore';\nimport useSelector from '../../../hooks/useSelector';\nimport { debounce } from '../../../util/debounce';\n\nexport interface SearchConfig {\n  keyword?: string;\n  ignoreHiddenColumns?: boolean;\n  debounceTimeout?: number;\n  selector?: (cell: TCell, rowIndex: number, cellIndex: number) => string;\n  server?: {\n    url?: (prevUrl: string, keyword: string) => string;\n    body?: (prevBody: BodyInit, keyword: string) => BodyInit;\n  };\n}\n\nexport function Search() {\n  const [processor, setProcessor] = useState<\n    GlobalSearchFilter | ServerGlobalSearchFilter\n  >(undefined);\n  const config = useConfig();\n  const props = config.search as SearchConfig;\n  const _ = useTranslator();\n  const { dispatch } = useStore();\n  const state = useSelector((state) => state.search);\n\n  useEffect(() => {\n    if (!processor) return;\n\n    processor.setProps({\n      keyword: state?.keyword,\n    });\n  }, [state, processor]);\n\n  useEffect(() => {\n    if (props.server) {\n      setProcessor(\n        new ServerGlobalSearchFilter({\n          keyword: props.keyword,\n          url: props.server.url,\n          body: props.server.body,\n        }),\n      );\n    } else {\n      setProcessor(\n        new GlobalSearchFilter({\n          keyword: props.keyword,\n          columns: config.header && config.header.columns,\n          ignoreHiddenColumns:\n            props.ignoreHiddenColumns ||\n            props.ignoreHiddenColumns === undefined,\n          selector: props.selector,\n        }),\n      );\n    }\n\n    // initial search\n    if (props.keyword) dispatch(actions.SearchKeyword(props.keyword));\n  }, [props]);\n\n  useEffect(() => {\n    if (!processor) return undefined;\n\n    config.pipeline.register<object, object>(processor);\n\n    return () => config.pipeline.unregister<object, object>(processor);\n  }, [config, processor]);\n\n  const debouncedOnInput = useCallback(\n    debounce(\n      (event: JSX.TargetedEvent<HTMLInputElement>) => {\n        if (event.target instanceof HTMLInputElement) {\n          dispatch(actions.SearchKeyword(event.target.value));\n        }\n      },\n      processor instanceof ServerGlobalSearchFilter\n        ? props.debounceTimeout || 250\n        : 0,\n    ),\n    [props, processor],\n  );\n\n  return (\n    <div className={className(classJoin('search', config.className?.search))}>\n      <input\n        type=\"search\"\n        placeholder={_('search.placeholder')}\n        aria-label={_('search.placeholder')}\n        onInput={debouncedOnInput}\n        className={classJoin(className('input'), className('search', 'input'))}\n        defaultValue={state?.keyword || ''}\n      />\n    </div>\n  );\n}\n", "export const debounce = <F extends (...args: any[]) => any>(\n  func: F,\n  waitFor: number,\n) => {\n  let timeout;\n\n  return (...args: Parameters<F>): Promise<ReturnType<F>> =>\n    new Promise((resolve) => {\n      if (timeout) {\n        clearTimeout(timeout);\n      }\n\n      timeout = setTimeout(() => resolve(func(...args)), waitFor);\n    });\n};\n", "import Tabular from '../../tabular';\nimport {\n  PipelineProcessor,\n  PipelineProcessorProps,\n  ProcessorType,\n} from '../processor';\n\ninterface PaginationLimitProps extends PipelineProcessorProps {\n  page: number;\n  limit: number;\n}\n\nclass PaginationLimit extends PipelineProcessor<Tabular, PaginationLimitProps> {\n  protected validateProps(): void {\n    if (isNaN(Number(this.props.limit)) || isNaN(Number(this.props.page))) {\n      throw Error('Invalid parameters passed');\n    }\n  }\n\n  get type(): ProcessorType {\n    return ProcessorType.Limit;\n  }\n\n  protected _process(data: Tabular): Tabular {\n    const page = this.props.page;\n    const start = page * this.props.limit;\n    const end = (page + 1) * this.props.limit;\n\n    return new Tabular(data.rows.slice(start, end));\n  }\n}\n\nexport default PaginationLimit;\n", "import {\n  PipelineProcessor,\n  PipelineProcessorProps,\n  ProcessorType,\n} from '../processor';\nimport { ServerStorageOptions } from '../../storage/server';\n\ninterface ServerPaginationLimitProps extends PipelineProcessorProps {\n  page: number;\n  limit: number;\n  url?: (prevUrl: string, page: number, limit: number) => string;\n  body?: (prevBody: BodyInit, page: number, limit: number) => BodyInit;\n}\n\nclass ServerPaginationLimit extends PipelineProcessor<\n  ServerStorageOptions,\n  ServerPaginationLimitProps\n> {\n  get type(): ProcessorType {\n    return ProcessorType.ServerLimit;\n  }\n\n  _process(options?: ServerStorageOptions): ServerStorageOptions {\n    const updates = {};\n\n    if (this.props.url) {\n      updates['url'] = this.props.url(\n        options.url,\n        this.props.page,\n        this.props.limit,\n      );\n    }\n\n    if (this.props.body) {\n      updates['body'] = this.props.body(\n        options.body,\n        this.props.page,\n        this.props.limit,\n      );\n    }\n\n    return {\n      ...options,\n      ...updates,\n    };\n  }\n}\n\nexport default ServerPaginationLimit;\n", "import { h, Fragment } from 'preact';\nimport PaginationLimit from '../../pipeline/limit/pagination';\nimport { classJoin, className } from '../../util/className';\nimport ServerPaginationLimit from '../../pipeline/limit/serverPagination';\nimport { useConfig } from '../../hooks/useConfig';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useTranslator } from '../../i18n/language';\n\nexport interface PaginationConfig {\n  limit?: number;\n  page?: number;\n  summary?: boolean;\n  nextButton?: boolean;\n  prevButton?: boolean;\n  buttonsCount?: number;\n  resetPageOnUpdate?: boolean;\n  server?: {\n    url?: (prevUrl: string, page: number, limit: number) => string;\n    body?: (prevBody: BodyInit, page: number, limit: number) => BodyInit;\n  };\n}\n\nexport function Pagination() {\n  const config = useConfig();\n  const {\n    server,\n    summary = true,\n    nextButton = true,\n    prevButton = true,\n    buttonsCount = 3,\n    limit = 10,\n    page = 0,\n    resetPageOnUpdate = true,\n  } = config.pagination as PaginationConfig;\n\n  const processor = useRef<PaginationLimit | ServerPaginationLimit>(null);\n  const [currentPage, setCurrentPage] = useState(page);\n  const [total, setTotal] = useState(0);\n  const _ = useTranslator();\n\n  useEffect(() => {\n    if (server) {\n      processor.current = new ServerPaginationLimit({\n        limit: limit,\n        page: currentPage,\n        url: server.url,\n        body: server.body,\n      });\n\n      config.pipeline.register(processor.current);\n    } else {\n      processor.current = new PaginationLimit({\n        limit: limit,\n        page: currentPage,\n      });\n\n      config.pipeline.register(processor.current);\n    }\n\n    if (processor.current instanceof ServerPaginationLimit) {\n      config.pipeline.on('afterProcess', (tabular) => setTotal(tabular.length));\n    } else if (processor.current instanceof PaginationLimit) {\n      // Pagination (all Limit processors) is the last step in the pipeline\n      // and we assume that at this stage, we have the rows that we care about.\n      // Let's grab the rows before processing Pagination and set total number of rows\n      processor.current.on('beforeProcess', (tabular) =>\n        setTotal(tabular.length),\n      );\n    }\n\n    config.pipeline.on('updated', onUpdate);\n\n    // we need to make sure that the state is set\n    // to the default props when an error happens\n    config.pipeline.on('error', () => {\n      setTotal(0);\n      setCurrentPage(0);\n    });\n\n    return () => {\n      config.pipeline.unregister<object, object>(processor.current);\n      config.pipeline.off('updated', onUpdate);\n    };\n  }, []);\n\n  const onUpdate = (updatedProcessor) => {\n    // this is to ensure that the current page is set to 0\n    // when a processor is updated for some reason\n    if (resetPageOnUpdate && updatedProcessor !== processor.current) {\n      setCurrentPage(0);\n\n      if (processor.current.props.page !== 0) {\n        processor.current.setProps({\n          page: 0,\n        });\n      }\n    }\n  };\n\n  const pages = () => Math.ceil(total / limit);\n\n  const setPage = (page: number) => {\n    if (page >= pages() || page < 0 || page === currentPage) {\n      return null;\n    }\n\n    setCurrentPage(page);\n\n    processor.current.setProps({\n      page: page,\n    });\n  };\n\n  const renderPages = () => {\n    if (buttonsCount <= 0) {\n      return null;\n    }\n\n    // how many pagination buttons to render?\n    const maxCount: number = Math.min(pages(), buttonsCount);\n\n    let pagePivot = Math.min(currentPage, Math.floor(maxCount / 2));\n    if (currentPage + Math.floor(maxCount / 2) >= pages()) {\n      pagePivot = maxCount - (pages() - currentPage);\n    }\n\n    return (\n      <Fragment>\n        {pages() > maxCount && currentPage - pagePivot > 0 && (\n          <Fragment>\n            <button\n              tabIndex={0}\n              role=\"button\"\n              onClick={() => setPage(0)}\n              title={_('pagination.firstPage')}\n              aria-label={_('pagination.firstPage')}\n              className={config.className.paginationButton}\n            >\n              {_('1')}\n            </button>\n            <button\n              tabIndex={-1}\n              className={classJoin(\n                className('spread'),\n                config.className.paginationButton,\n              )}\n            >\n              ...\n            </button>\n          </Fragment>\n        )}\n\n        {Array.from(Array(maxCount).keys())\n          .map((i) => currentPage + (i - pagePivot))\n          .map((i) => (\n            <button\n              tabIndex={0}\n              role=\"button\"\n              onClick={() => setPage(i)}\n              className={classJoin(\n                currentPage === i\n                  ? classJoin(\n                      className('currentPage'),\n                      config.className.paginationButtonCurrent,\n                    )\n                  : null,\n                config.className.paginationButton,\n              )}\n              title={_('pagination.page', i + 1)}\n              aria-label={_('pagination.page', i + 1)}\n            >\n              {_(`${i + 1}`)}\n            </button>\n          ))}\n\n        {pages() > maxCount && pages() > currentPage + pagePivot + 1 && (\n          <Fragment>\n            <button\n              tabIndex={-1}\n              className={classJoin(\n                className('spread'),\n                config.className.paginationButton,\n              )}\n            >\n              ...\n            </button>\n            <button\n              tabIndex={0}\n              role=\"button\"\n              onClick={() => setPage(pages() - 1)}\n              title={_('pagination.page', pages())}\n              aria-label={_('pagination.page', pages())}\n              className={config.className.paginationButton}\n            >\n              {_(`${pages()}`)}\n            </button>\n          </Fragment>\n        )}\n      </Fragment>\n    );\n  };\n\n  const renderSummary = () => {\n    return (\n      <Fragment>\n        {summary && total > 0 && (\n          <div\n            role=\"status\"\n            aria-live=\"polite\"\n            className={classJoin(\n              className('summary'),\n              config.className.paginationSummary,\n            )}\n            title={_('pagination.navigate', currentPage + 1, pages())}\n          >\n            {_('pagination.showing')} <b>{_(`${currentPage * limit + 1}`)}</b>{' '}\n            {_('pagination.to')}{' '}\n            <b>{_(`${Math.min((currentPage + 1) * limit, total)}`)}</b>{' '}\n            {_('pagination.of')} <b>{_(`${total}`)}</b>{' '}\n            {_('pagination.results')}\n          </div>\n        )}\n      </Fragment>\n    );\n  };\n\n  return (\n    <div\n      className={classJoin(\n        className('pagination'),\n        config.className.pagination,\n      )}\n    >\n      {renderSummary()}\n\n      <div className={className('pages')}>\n        {prevButton && (\n          <button\n            tabIndex={0}\n            role=\"button\"\n            disabled={currentPage === 0}\n            onClick={() => setPage(currentPage - 1)}\n            title={_('pagination.previous')}\n            aria-label={_('pagination.previous')}\n            className={classJoin(\n              config.className.paginationButton,\n              config.className.paginationButtonPrev,\n            )}\n          >\n            {_('pagination.previous')}\n          </button>\n        )}\n\n        {renderPages()}\n\n        {nextButton && (\n          <button\n            tabIndex={0}\n            role=\"button\"\n            disabled={pages() === currentPage + 1 || pages() === 0}\n            onClick={() => setPage(currentPage + 1)}\n            title={_('pagination.next')}\n            aria-label={_('pagination.next')}\n            className={classJoin(\n              config.className.paginationButton,\n              config.className.paginationButtonNext,\n            )}\n          >\n            {_('pagination.next')}\n          </button>\n        )}\n      </div>\n    </div>\n  );\n}\n", "export function width(width: string | number, containerWidth?: number): number {\n  if (typeof width == 'string') {\n    if (width.indexOf('%') > -1) {\n      return (containerWidth / 100) * parseInt(width, 10);\n    } else {\n      return parseInt(width, 10);\n    }\n  }\n\n  return width;\n}\n\nexport function px(width: number): string {\n  if (!width) return '';\n  return `${Math.floor(width)}px`;\n}\n", "import { h } from 'preact';\nimport { className } from '../../util/className';\n\n/**\n * ShadowTable renders a hidden table and is used to calculate the column's width\n * when autoWidth option is enabled\n */\nexport function ShadowTable(props: { tableRef: HTMLTableElement }) {\n  const shadowTable = props.tableRef.cloneNode(true) as HTMLTableElement;\n\n  shadowTable.style.position = 'absolute';\n  shadowTable.style.width = '100%';\n  shadowTable.style.zIndex = '-2147483640';\n  shadowTable.style.visibility = 'hidden';\n\n  return (\n    <div\n      ref={(nodeElement) => {\n        nodeElement && nodeElement.appendChild(shadowTable);\n      }}\n    />\n  );\n}\n\nexport function getShadowTableWidths(tempRef: HTMLDivElement): {\n  [columnId: string]: { minWidth: number; width: number };\n} {\n  const tableElement: HTMLTableElement = tempRef.querySelector(\n    'table',\n  ) as HTMLTableElement;\n\n  if (!tableElement) {\n    return {};\n  }\n\n  const tableClassName = tableElement.className;\n  const tableStyle = tableElement.style.cssText;\n  tableElement.className = `${tableClassName} ${className('shadowTable')}`;\n\n  tableElement.style.tableLayout = 'auto';\n  tableElement.style.width = 'auto';\n  tableElement.style.padding = '0';\n  tableElement.style.margin = '0';\n  tableElement.style.border = 'none';\n  tableElement.style.outline = 'none';\n\n  let obj = Array.from(\n    tableElement.parentNode.querySelectorAll<HTMLElement>('thead th'),\n  ).reduce((prev, current) => {\n    current.style.width = `${current.clientWidth}px`;\n\n    return {\n      [current.getAttribute('data-column-id')]: {\n        minWidth: current.clientWidth,\n      },\n      ...prev,\n    };\n  }, {});\n\n  tableElement.className = tableClassName;\n  tableElement.style.cssText = tableStyle;\n  tableElement.style.tableLayout = 'auto';\n\n  obj = Array.from(\n    tableElement.parentNode.querySelectorAll<HTMLElement>('thead th'),\n  ).reduce((prev, current) => {\n    prev[current.getAttribute('data-column-id')]['width'] = current.clientWidth;\n\n    return prev;\n  }, obj);\n\n  return obj;\n}\n", "export function camelCase(str: string): string {\n  if (!str) return '';\n\n  const words = str.split(' ');\n\n  // do not convert strings that are already in camelCase format\n  if (words.length === 1 && /([a-z][A-Z])+/g.test(str)) {\n    return str;\n  }\n\n  return words\n    .map(function (word, index) {\n      // if it is the first word, lowercase all the chars\n      if (index == 0) {\n        return word.toLowerCase();\n      }\n\n      // if it is not the first word only upper case the first char and lowercase the rest\n      return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n    })\n    .join('');\n}\n", "import { Fragment, FunctionComponent, h } from 'preact';\nimport { useConfig } from './hooks/useConfig';\nimport log from './util/log';\n\nexport enum PluginPosition {\n  Header,\n  Footer,\n  Cell,\n}\n\nexport interface Plugin<T extends FunctionComponent> {\n  id: string;\n  position: PluginPosition;\n  component: T;\n  order?: number;\n}\n\nexport class PluginManager {\n  private readonly plugins: Plugin<any>[];\n\n  constructor() {\n    this.plugins = [];\n  }\n\n  get<T extends FunctionComponent>(id: string): Plugin<T> | undefined {\n    return this.plugins.find((p) => p.id === id);\n  }\n\n  add<T extends FunctionComponent<any>>(plugin: Plugin<T>): this {\n    if (!plugin.id) {\n      log.error('Plugin ID cannot be empty');\n      return this;\n    }\n\n    if (this.get(plugin.id)) {\n      log.error(`Duplicate plugin ID: ${plugin.id}`);\n      return this;\n    }\n\n    this.plugins.push(plugin);\n    return this;\n  }\n\n  remove(id: string): this {\n    const plugin = this.get(id);\n\n    if (plugin) {\n      this.plugins.splice(this.plugins.indexOf(plugin), 1);\n    }\n\n    return this;\n  }\n\n  list<T extends FunctionComponent>(position?: PluginPosition): Plugin<T>[] {\n    let plugins: Plugin<T>[];\n\n    if (position != null || position != undefined) {\n      plugins = this.plugins.filter((p) => p.position === position);\n    } else {\n      plugins = this.plugins;\n    }\n\n    return plugins.sort((a, b) => (a.order && b.order ? a.order - b.order : 1));\n  }\n}\n\nexport function PluginRenderer(props: {\n  props?: any;\n  // to render a single plugin\n  pluginId?: string;\n  // to render all plugins in this PluginPosition\n  position?: PluginPosition;\n}) {\n  const config = useConfig();\n\n  if (props.pluginId) {\n    // render a single plugin\n    const plugin = config.plugin.get(props.pluginId);\n\n    if (!plugin) return null;\n\n    return h(\n      Fragment,\n      {},\n      h(plugin.component, {\n        plugin: plugin,\n        ...props.props,\n      }),\n    );\n  } else if (props.position !== undefined) {\n    // render using a specific plugin position\n    return h(\n      Fragment,\n      {},\n      config.plugin.list(props.position).map((p) => {\n        return h(p.component, { plugin: p, ...this.props.props });\n      }),\n    );\n  }\n\n  return null;\n}\n", "/**\n * Centralized logging lib\n *\n * This class needs some improvements but so far it has been used to have a coherent way to log\n */\nclass Logger {\n  private format(message: string, type: string): string {\n    return `[Grid.js] [${type.toUpperCase()}]: ${message}`;\n  }\n\n  error(message: string, throwException = false): void {\n    const msg = this.format(message, 'error');\n\n    if (throwException) {\n      throw Error(msg);\n    } else {\n      console.error(msg);\n    }\n  }\n\n  warn(message: string): void {\n    console.warn(this.format(message, 'warn'));\n  }\n\n  info(message: string): void {\n    console.info(this.format(message, 'info'));\n  }\n}\n\nexport default new Logger();\n", "import { OneDArray, TColumn, TwoDArray } from './types';\nimport Base from './base';\nimport { Config } from './config';\nimport { px, width } from './util/width';\nimport { getShadowTableWidths, ShadowTable } from './view/table/shadow';\nimport { ComponentChild, h, isValidElement, RefObject, render } from 'preact';\nimport { camelCase } from './util/string';\nimport { flatten } from './util/array';\nimport logger from './util/log';\nimport { PluginManager, PluginPosition } from './plugin';\nimport { GenericSortConfig } from './view/plugin/sort/sort';\n\nclass Header extends Base {\n  private _columns: OneDArray<TColumn>;\n\n  constructor() {\n    super();\n\n    this._columns = [];\n  }\n\n  get columns(): OneDArray<TColumn> {\n    return this._columns;\n  }\n\n  set columns(columns) {\n    this._columns = columns;\n  }\n\n  get visibleColumns(): OneDArray<TColumn> {\n    return this._columns.filter((c) => !c.hidden);\n  }\n\n  /**\n   * Tries to automatically adjust the width of columns based on:\n   *    - Header cell content\n   *    - Cell content of the first row\n   *    - Cell content of the last row\n   *\n   * @param config\n   */\n  adjustWidth(\n    config: Config,\n    tableRef: RefObject<HTMLTableElement>,\n    tempRef: RefObject<HTMLDivElement>,\n  ): this {\n    const container: Element = config.container;\n    const autoWidth = config.autoWidth;\n\n    if (!container) {\n      // we can't calculate the width because the container\n      // is unknown at this stage\n      return this;\n    }\n\n    // pixels\n    const containerWidth = container.clientWidth;\n\n    let widths = {};\n\n    if (tableRef.current && autoWidth) {\n      // let's create a shadow table with the first 10 rows of the data\n      // and let the browser to render the table with table-layout: auto\n      // no padding, margin or border to get the minimum space required\n      // to render columns. Once the table is rendered and widths are known,\n      // we unmount the shadow table from the DOM and set the correct width\n      render(\n        h(ShadowTable, {\n          tableRef: tableRef.current,\n        }),\n        tempRef.current,\n      );\n\n      widths = getShadowTableWidths(tempRef.current);\n    }\n\n    for (const column of flatten(Header.tabularFormat(this.columns))) {\n      // because we don't want to set the width of parent THs\n      if (column.columns && column.columns.length > 0) {\n        continue;\n      }\n\n      if (!column.width && autoWidth) {\n        // tries to find the corresponding cell\n        // from the ShadowTable and set the correct width\n\n        if (column.id in widths) {\n          // because a column can be hidden, too\n          column.width = px(widths[column.id]['width']);\n          column.minWidth = px(widths[column.id]['minWidth']);\n        }\n      } else {\n        // column width is already defined\n        // sets the column with based on the width of its container\n        column.width = px(width(column.width, containerWidth));\n      }\n    }\n\n    if (tableRef.current && autoWidth) {\n      // unmount the shadow table from temp\n      render(null, tempRef.current);\n    }\n\n    return this;\n  }\n\n  private setSort(\n    sortConfig: GenericSortConfig | boolean,\n    columns?: OneDArray<TColumn>,\n  ): void {\n    const cols = columns || this.columns || [];\n\n    for (const column of cols) {\n      // sorting can only be enabled for columns without any children\n      if (column.columns && column.columns.length > 0) {\n        column.sort = undefined;\n      } else if (column.sort === undefined && sortConfig) {\n        column.sort = {};\n      } else if (!column.sort) {\n        // false, null, etc.\n        column.sort = undefined;\n      } else if (typeof column.sort === 'object') {\n        column.sort = {\n          ...column.sort,\n        };\n      }\n\n      if (column.columns) {\n        this.setSort(sortConfig, column.columns);\n      }\n    }\n  }\n\n  private setResizable(resizable: boolean, columns?: OneDArray<TColumn>): void {\n    const cols = columns || this.columns || [];\n\n    for (const column of cols) {\n      if (column.resizable === undefined) {\n        column.resizable = resizable;\n      }\n\n      if (column.columns) {\n        this.setResizable(resizable, column.columns);\n      }\n    }\n  }\n\n  private setID(columns?: OneDArray<TColumn>): void {\n    const cols = columns || this.columns || [];\n\n    for (const column of cols) {\n      if (!column.id && typeof column.name === 'string') {\n        // let's guess the column ID if it's undefined\n        column.id = camelCase(column.name);\n      }\n\n      if (!column.id) {\n        logger.error(\n          `Could not find a valid ID for one of the columns. Make sure a valid \"id\" is set for all columns.`,\n        );\n      }\n\n      // nested columns\n      if (column.columns) {\n        this.setID(column.columns);\n      }\n    }\n  }\n\n  private populatePlugins(\n    pluginManager: PluginManager,\n    columns: OneDArray<TColumn>,\n  ): void {\n    // populate the cell columns\n    for (const column of columns) {\n      if (column.plugin !== undefined) {\n        pluginManager.add({\n          id: column.id,\n          ...column.plugin,\n          position: PluginPosition.Cell,\n        });\n      }\n    }\n  }\n\n  static fromColumns(\n    columns: OneDArray<TColumn | string | ComponentChild>,\n  ): Header {\n    const header = new Header();\n\n    for (const column of columns) {\n      if (typeof column === 'string' || isValidElement(column)) {\n        header.columns.push({\n          name: column,\n        });\n      } else if (typeof column === 'object') {\n        const typedColumn = column as TColumn;\n\n        if (typedColumn.columns) {\n          typedColumn.columns = Header.fromColumns(typedColumn.columns).columns;\n        }\n\n        // because the data for that cell is null\n        // if we are trying to render a plugin\n        if (typeof typedColumn.plugin === 'object') {\n          if (typedColumn.data === undefined) {\n            typedColumn.data = null;\n          }\n        }\n\n        // TColumn type\n        header.columns.push(column as TColumn);\n      }\n    }\n\n    return header;\n  }\n\n  static createFromConfig(config: Partial<Config>): Header | null {\n    const header = new Header();\n\n    // TODO: this part needs some refactoring\n    if (config.from) {\n      header.columns = Header.fromHTMLTable(config.from).columns;\n    } else if (config.columns) {\n      header.columns = Header.fromColumns(config.columns).columns;\n    } else if (\n      config.data &&\n      typeof config.data[0] === 'object' &&\n      !(config.data[0] instanceof Array)\n    ) {\n      // if data[0] is an object but not an Array\n      // used for when a JSON payload is provided\n      header.columns = Object.keys(config.data[0]).map((name) => {\n        return { name: name };\n      });\n    }\n\n    if (header.columns.length) {\n      header.setID();\n      header.setSort(config.sort);\n      header.setResizable(config.resizable);\n      header.populatePlugins(config.plugin, header.columns);\n      return header;\n    }\n\n    return null;\n  }\n\n  static fromHTMLTable(element: HTMLElement): Header {\n    const header = new Header();\n    const thead = element.querySelector('thead');\n    const ths = thead.querySelectorAll('th');\n\n    for (const th of ths as any) {\n      header.columns.push({\n        name: th.innerHTML,\n        width: th.width,\n      });\n    }\n\n    return header;\n  }\n\n  /**\n   * Converts the tree-like format of Header to a tabular format\n   *\n   * Example:\n   *\n   *    H1\n   *      H1-H1\n   *      H1-H2\n   *    H2\n   *      H2-H1\n   *\n   *    becomes:\n   *      [\n   *        [H1, H2],\n   *        [H1-H1, H1-H2, H2-H1]\n   *      ]\n   *\n   * @param columns\n   */\n  static tabularFormat(columns: OneDArray<TColumn>): TwoDArray<TColumn> {\n    let result: TwoDArray<TColumn> = [];\n    const cols = columns || [];\n    let nextRow = [];\n\n    if (cols && cols.length) {\n      result.push(cols);\n\n      for (const col of cols) {\n        if (col.columns && col.columns.length) {\n          nextRow = nextRow.concat(col.columns);\n        }\n      }\n\n      if (nextRow.length) {\n        result = result.concat(this.tabularFormat(nextRow));\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Returns an array of leaf columns (last columns in the tree)\n   *\n   * @param columns\n   */\n  static leafColumns(columns: OneDArray<TColumn>): OneDArray<TColumn> {\n    let result: OneDArray<TColumn> = [];\n    const cols = columns || [];\n\n    if (cols && cols.length) {\n      for (const col of cols) {\n        if (!col.columns || col.columns.length === 0) {\n          result.push(col);\n        }\n\n        if (col.columns) {\n          result = result.concat(this.leafColumns(col.columns));\n        }\n      }\n    }\n\n    return result;\n  }\n\n  /**\n   * Returns the maximum depth of a column tree\n   * @param column\n   */\n  static maximumDepth(column: TColumn): number {\n    return this.tabularFormat([column]).length - 1;\n  }\n}\n\nexport default Header;\n", "/**\n * Base Storage class. All storage implementation must inherit this class\n */\nimport { TData } from '../types';\n\nabstract class Storage<I> {\n  /**\n   * Returns all rows based on ...args\n   * @param args\n   */\n  abstract get(...args): Promise<StorageResponse>;\n\n  /**\n   * To set all rows\n   *\n   * @param data\n   */\n  set?(data: I | ((...args) => void)): this;\n}\n\nexport interface StorageResponse {\n  data: TData;\n  total: number;\n}\n\nexport default Storage;\n", "import Storage, { StorageResponse } from './storage';\nimport { TData } from '../types';\n\nclass MemoryStorage extends Storage<TData> {\n  private data: (() => TData) | (() => Promise<TData>);\n\n  constructor(data: TData | (() => TData) | (() => Promise<TData>)) {\n    super();\n    this.set(data);\n  }\n\n  public async get(): Promise<StorageResponse> {\n    const data = await this.data();\n\n    return {\n      data: data,\n      total: data.length,\n    };\n  }\n\n  public set(data: TData | (() => TData) | (() => Promise<TData>)): this {\n    if (data instanceof Array) {\n      this.data = (): TData => data;\n    } else if (data instanceof Function) {\n      this.data = data;\n    }\n\n    return this;\n  }\n}\n\nexport default MemoryStorage;\n", "import Storage, { StorageResponse } from './storage';\nimport log from '../util/log';\n\nexport interface ServerStorageOptions extends RequestInit {\n  url: string;\n  // to format the data and columns\n  then?: (data: any) => any[][];\n  // to handle the response from the server. `handle` will\n  // be called first and then `then` callback will be invoked\n  // The purpose of this function is to handle the behaviour\n  // of server and either reject and resolve the initial response\n  // before calling the `then` function\n  handle?: (response: Response) => Promise<any>;\n  total?: (data: any) => number;\n  // to bypass the current implementation of ServerStorage and process the\n  // request manually (e.g. when user wants to connect their own SDK/HTTP Client)\n  data?: (opts: ServerStorageOptions) => Promise<StorageResponse>;\n}\n\nclass ServerStorage extends Storage<ServerStorageOptions> {\n  private readonly options: ServerStorageOptions;\n\n  constructor(options: ServerStorageOptions) {\n    super();\n    this.options = options;\n  }\n\n  private handler(response: Response): Promise<any> {\n    if (typeof this.options.handle === 'function') {\n      return this.options.handle(response);\n    }\n\n    if (response.ok) {\n      return response.json();\n    } else {\n      log.error(\n        `Could not fetch data: ${response.status} - ${response.statusText}`,\n        true,\n      );\n      return null;\n    }\n  }\n\n  public get(options?: ServerStorageOptions): Promise<StorageResponse> {\n    // this.options is the initial config object\n    // options is the runtime config passed by the pipeline (e.g. search component)\n    const opts = {\n      ...this.options,\n      ...options,\n    };\n\n    // if `options.data` is provided, the current ServerStorage\n    // implementation will be ignored and we let options.data to\n    // handle the request. Useful when HTTP client needs to be\n    // replaced with something else\n    if (typeof opts.data === 'function') {\n      return opts.data(opts);\n    }\n\n    return fetch(opts.url, opts)\n      .then(this.handler.bind(this))\n      .then((res) => {\n        return {\n          data: opts.then(res),\n          total: typeof opts.total === 'function' ? opts.total(res) : undefined,\n        };\n      });\n  }\n}\n\nexport default ServerStorage;\n", "import { Config } from '../config';\nimport MemoryStorage from './memory';\nimport Storage from './storage';\nimport ServerStorage from './server';\nimport log from '../util/log';\nimport { decode, html } from '../util/html';\n\nclass StorageUtils {\n  /**\n   * Accepts a Config object and tries to guess and return a Storage type\n   *\n   * @param config\n   */\n  public static createFromConfig(config: Config): Storage<any> {\n    let storage = null;\n    // `data` array is provided\n    if (config.data) {\n      storage = new MemoryStorage(config.data);\n    }\n\n    if (config.from) {\n      storage = new MemoryStorage(this.tableElementToArray(config.from));\n      // remove the source table element from the DOM\n      config.from.style.display = 'none';\n    }\n\n    if (config.server) {\n      storage = new ServerStorage(config.server);\n    }\n\n    if (!storage) {\n      log.error('Could not determine the storage type', true);\n    }\n\n    return storage;\n  }\n\n  /**\n   * Accepts a HTML table element and converts it into a 2D array of data\n   *\n   * TODO: This function can be a step in the pipeline: Convert Table -> Load into a memory storage -> ...\n   *\n   * @param element\n   */\n  static tableElementToArray(element: HTMLElement): any[][] {\n    const arr = [];\n    const tbody = element.querySelector('tbody');\n    const rows = tbody.querySelectorAll('tr');\n\n    for (const row of rows as any) {\n      const cells: HTMLElement[] = row.querySelectorAll('td');\n      const parsedRow = [];\n\n      for (const cell of cells) {\n        // try to capture a TD with single text element first\n        if (\n          cell.childNodes.length === 1 &&\n          cell.childNodes[0].nodeType === Node.TEXT_NODE\n        ) {\n          parsedRow.push(decode(cell.innerHTML));\n        } else {\n          parsedRow.push(html(cell.innerHTML));\n        }\n      }\n\n      arr.push(parsedRow);\n    }\n\n    return arr;\n  }\n}\n\nexport default StorageUtils;\n", "import { PipelineProcessor, ProcessorType } from './processor';\nimport { ID } from '../util/id';\nimport log from '../util/log';\nimport { EventEmitter } from '../util/eventEmitter';\n\ninterface PipelineEvents<R> {\n  /**\n   * Generic updated event. Triggers the callback function when the pipeline\n   * is updated, including when a new processor is registered, a processor's props\n   * get updated, etc.\n   */\n  updated: <T, P>(processor: PipelineProcessor<T, P>) => void;\n  /**\n   * Triggers the callback function when a new\n   * processor is registered successfully\n   */\n  afterRegister: () => void;\n  /**\n   * Triggers the callback when a registered\n   * processor's property is updated\n   */\n  propsUpdated: () => void;\n  /**\n   * Triggers the callback function when the pipeline\n   * is fully processed, before returning the results\n   *\n   * afterProcess will not be called if there is an\n   * error in the pipeline (i.e a step throw an Error)\n   */\n  afterProcess: (prev: R) => void;\n  /**\n   * Triggers the callback function when the pipeline\n   * fails to process all steps or at least one step\n   * throws an Error\n   */\n  error: <T>(prev: T) => void;\n}\n\nclass Pipeline<R> extends EventEmitter<PipelineEvents<R>> {\n  // available steps for this pipeline\n  private readonly _steps: Map<\n    ProcessorType,\n    PipelineProcessor<unknown, unknown>[]\n  > = new Map<ProcessorType, PipelineProcessor<unknown, unknown>[]>();\n  // used to cache the results of processors using their id field\n  private cache: Map<string, unknown> = new Map<string, unknown>();\n  // keeps the index of the last updated processor in the registered\n  // processors list and will be used to invalidate the cache\n  // -1 means all new processors should be processed\n  private lastProcessorIndexUpdated = -1;\n\n  constructor(steps?: PipelineProcessor<unknown, unknown>[]) {\n    super();\n\n    if (steps) {\n      steps.forEach((step) => this.register(step));\n    }\n  }\n\n  /**\n   * Clears the `cache` array\n   */\n  clearCache(): void {\n    this.cache = new Map<string, object>();\n    this.lastProcessorIndexUpdated = -1;\n  }\n\n  /**\n   * Registers a new processor\n   *\n   * @param processor\n   * @param priority\n   */\n  register<T, P>(\n    processor: PipelineProcessor<T, P>,\n    priority: number = null,\n  ): PipelineProcessor<T, P> {\n    if (!processor) {\n      throw Error('Processor is not defined');\n    }\n\n    if (processor.type === null) {\n      throw Error('Processor type is not defined');\n    }\n\n    if (this.findProcessorIndexByID(processor.id) > -1) {\n      throw Error(`Processor ID ${processor.id} is already defined`);\n    }\n\n    // binding the propsUpdated callback to the Pipeline\n    processor.on('propsUpdated', this.processorPropsUpdated.bind(this));\n\n    this.addProcessorByPriority(processor, priority);\n    this.afterRegistered(processor);\n\n    return processor;\n  }\n\n  /**\n   * Tries to register a new processor\n   * @param processor\n   * @param priority\n   */\n  tryRegister<T, P>(\n    processor: PipelineProcessor<T, P>,\n    priority: number = null,\n  ): PipelineProcessor<T, P> | undefined {\n    try {\n      return this.register(processor, priority);\n    } catch (_) {\n      // noop\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Removes a processor from the list\n   *\n   * @param processor\n   */\n  unregister<T, P>(processor: PipelineProcessor<T, P>): void {\n    if (!processor) return;\n    if (this.findProcessorIndexByID(processor.id) === -1) return;\n\n    const subSteps = this._steps.get(processor.type);\n\n    if (subSteps && subSteps.length) {\n      this._steps.set(\n        processor.type,\n        subSteps.filter((proc) => proc != processor),\n      );\n      this.emit('updated', processor);\n    }\n  }\n\n  /**\n   * Registers a new processor\n   *\n   * @param processor\n   * @param priority\n   */\n  private addProcessorByPriority<T, P>(\n    processor: PipelineProcessor<T, P>,\n    priority: number,\n  ): void {\n    let subSteps = this._steps.get(processor.type);\n\n    if (!subSteps) {\n      const newSubStep = [];\n      this._steps.set(processor.type, newSubStep);\n      subSteps = newSubStep;\n    }\n\n    if (priority === null || priority < 0) {\n      subSteps.push(processor);\n    } else {\n      if (!subSteps[priority]) {\n        // slot is empty\n        subSteps[priority] = processor;\n      } else {\n        // slot is NOT empty\n        const first = subSteps.slice(0, priority - 1);\n        const second = subSteps.slice(priority + 1);\n\n        this._steps.set(processor.type, first.concat(processor).concat(second));\n      }\n    }\n  }\n\n  /**\n   * Flattens the _steps Map and returns a list of steps with their correct priorities\n   */\n  get steps(): PipelineProcessor<unknown, unknown>[] {\n    let steps: PipelineProcessor<unknown, unknown>[] = [];\n\n    for (const type of this.getSortedProcessorTypes()) {\n      const subSteps = this._steps.get(type);\n\n      if (subSteps && subSteps.length) {\n        steps = steps.concat(subSteps);\n      }\n    }\n\n    // to remove any undefined elements\n    return steps.filter((s) => s);\n  }\n\n  /**\n   * Accepts ProcessType and returns an array of the registered processes\n   * with the give type\n   *\n   * @param type\n   */\n  getStepsByType(type: ProcessorType): PipelineProcessor<unknown, unknown>[] {\n    return this.steps.filter((process) => process.type === type);\n  }\n\n  /**\n   * Returns a list of ProcessorType according to their priority\n   */\n  private getSortedProcessorTypes(): ProcessorType[] {\n    return Object.keys(ProcessorType)\n      .filter((key) => !isNaN(Number(key)))\n      .map((key) => Number(key));\n  }\n\n  /**\n   * Runs all registered processors based on their correct priority\n   * and returns the final output after running all steps\n   *\n   * @param data\n   */\n  async process(data?: R): Promise<R> {\n    const lastProcessorIndexUpdated = this.lastProcessorIndexUpdated;\n    const steps = this.steps;\n\n    let prev = data;\n\n    try {\n      for (const processor of steps) {\n        const processorIndex = this.findProcessorIndexByID(processor.id);\n\n        if (processorIndex >= lastProcessorIndexUpdated) {\n          // we should execute process() here since the last\n          // updated processor was before \"processor\".\n          // This is to ensure that we always have correct and up to date\n          // data from processors and also to skip them when necessary\n          prev = (await processor.process(prev)) as R;\n          this.cache.set(processor.id, prev);\n        } else {\n          // cached results already exist\n          prev = this.cache.get(processor.id) as R;\n        }\n      }\n    } catch (e) {\n      log.error(e);\n      // trigger the onError callback\n      this.emit('error', prev);\n\n      // rethrow\n      throw e;\n    }\n\n    // means the pipeline is up to date\n    this.lastProcessorIndexUpdated = steps.length;\n\n    // triggers the afterProcess callbacks with the results\n    this.emit('afterProcess', prev);\n\n    return prev;\n  }\n\n  /**\n   * Returns the registered processor's index in _steps array\n   *\n   * @param processorID\n   */\n  private findProcessorIndexByID(processorID: ID): number {\n    return this.steps.findIndex((p) => p.id == processorID);\n  }\n\n  /**\n   * Sets the last updates processors index locally\n   * This is used to invalid or skip a processor in\n   * the process() method\n   */\n  private setLastProcessorIndex<T, P>(\n    processor: PipelineProcessor<T, P>,\n  ): void {\n    const processorIndex = this.findProcessorIndexByID(processor.id);\n\n    if (this.lastProcessorIndexUpdated > processorIndex) {\n      this.lastProcessorIndexUpdated = processorIndex;\n    }\n  }\n\n  private processorPropsUpdated(processor): void {\n    this.setLastProcessorIndex(processor);\n    this.emit('propsUpdated');\n    this.emit('updated', processor);\n  }\n\n  private afterRegistered(processor): void {\n    this.setLastProcessorIndex(processor);\n    this.emit('afterRegister');\n    this.emit('updated', processor);\n  }\n}\n\nexport default Pipeline;\n", "import Storage, { StorageResponse } from '../../storage/storage';\nimport {\n  PipelineProcessor,\n  PipelineProcessorProps,\n  ProcessorType,\n} from '../processor';\n\ninterface StorageExtractorProps extends PipelineProcessorProps {\n  storage: Storage<any>;\n}\n\nclass StorageExtractor extends PipelineProcessor<\n  StorageResponse,\n  StorageExtractorProps\n> {\n  get type(): ProcessorType {\n    return ProcessorType.Extractor;\n  }\n\n  async _process(opts: any): Promise<StorageResponse> {\n    return await this.props.storage.get(opts);\n  }\n}\n\nexport default StorageExtractor;\n", "import { PipelineProcessor, ProcessorType } from '../processor';\nimport Tabular from '../../tabular';\nimport { ArrayResponse } from './storageResponseToArray';\n\nclass ArrayToTabularTransformer extends PipelineProcessor<\n  Tabular,\n  Record<string, any>\n> {\n  get type(): ProcessorType {\n    return ProcessorType.Transformer;\n  }\n\n  _process(arrayResponse: ArrayResponse): Tabular {\n    const tabular = Tabular.fromArray(arrayResponse.data);\n\n    // for server-side storage\n    tabular.length = arrayResponse.total;\n\n    return tabular;\n  }\n}\n\nexport default ArrayToTabularTransformer;\n", "import {\n  PipelineProcessor,\n  PipelineProcessorProps,\n  ProcessorType,\n} from '../processor';\nimport { ServerStorageOptions } from '../../storage/server';\n\ninterface ServerInitiatorProps extends PipelineProcessorProps {\n  serverStorageOptions: ServerStorageOptions;\n}\n\nclass ServerInitiator extends PipelineProcessor<\n  ServerStorageOptions,\n  ServerInitiatorProps\n> {\n  get type(): ProcessorType {\n    return ProcessorType.Initiator;\n  }\n\n  _process(): ServerStorageOptions {\n    return Object.entries(this.props.serverStorageOptions)\n      .filter(([_, val]) => typeof val !== 'function')\n      .reduce(\n        (acc, [k, v]) => ({ ...acc, [k]: v }),\n        {},\n      ) as ServerStorageOptions;\n  }\n}\n\nexport default ServerInitiator;\n", "import {\n  PipelineProcessor,\n  PipelineProcessorProps,\n  ProcessorType,\n} from '../processor';\nimport { StorageResponse } from '../../storage/storage';\nimport { TCell, TData, TDataArray, TDataObject, TwoDArray } from '../../types';\nimport Header from '../../header';\nimport logger from '../../util/log';\n\nexport interface ArrayResponse {\n  data: TwoDArray<TCell>;\n  total: number;\n}\n\ninterface StorageResponseToArrayTransformerProps\n  extends PipelineProcessorProps {\n  header: Header;\n}\n\nclass StorageResponseToArrayTransformer extends PipelineProcessor<\n  ArrayResponse,\n  StorageResponseToArrayTransformerProps\n> {\n  get type(): ProcessorType {\n    return ProcessorType.Transformer;\n  }\n\n  private castData(data: TData): TwoDArray<TCell> {\n    if (!data || !data.length) {\n      return [];\n    }\n\n    if (!this.props.header || !this.props.header.columns) {\n      return data as TwoDArray<TCell>;\n    }\n\n    const columns = Header.leafColumns(this.props.header.columns);\n\n    // if it's a 2d array already\n    if (data[0] instanceof Array) {\n      return (data as TDataArray).map((row) => {\n        let pad = 0;\n\n        return columns.map((column, i) => {\n          // default `data` is provided for this column\n          if (column.data !== undefined) {\n            pad++;\n\n            if (typeof column.data === 'function') {\n              return column.data(row);\n            } else {\n              return column.data;\n            }\n          }\n\n          return row[i - pad];\n        });\n      });\n    }\n\n    // if it's an array of objects (but not array of arrays, i.e JSON payload)\n    if (typeof data[0] === 'object' && !(data[0] instanceof Array)) {\n      return (data as TDataObject).map((row) =>\n        columns.map((column, i) => {\n          if (column.data !== undefined) {\n            if (typeof column.data === 'function') {\n              return column.data(row);\n            } else {\n              return column.data;\n            }\n          } else if (column.id) {\n            return row[column.id];\n          } else {\n            logger.error(`Could not find the correct cell for column at position ${i}.\n                          Make sure either 'id' or 'selector' is defined for all columns.`);\n            return null;\n          }\n        }),\n      );\n    }\n\n    return [];\n  }\n\n  _process(storageResponse: StorageResponse): ArrayResponse {\n    return {\n      data: this.castData(storageResponse.data),\n      total: storageResponse.total,\n    };\n  }\n}\n\nexport default StorageResponseToArrayTransformer;\n", "import { Config } from '../config';\nimport Pipeline from './pipeline';\nimport Tabular from '../tabular';\nimport StorageExtractor from './extractor/storage';\nimport ArrayToTabularTransformer from './transformer/arrayToTabular';\nimport ServerStorage from '../storage/server';\nimport ServerInitiator from './initiator/server';\nimport StorageResponseToArrayTransformer from './transformer/storageResponseToArray';\n\nclass PipelineUtils {\n  static createFromConfig(config: Config): Pipeline<Tabular> {\n    const pipeline = new Pipeline<Tabular>();\n\n    if (config.storage instanceof ServerStorage) {\n      pipeline.register(\n        new ServerInitiator({\n          serverStorageOptions: config.server,\n        }),\n      );\n    }\n\n    pipeline.register(new StorageExtractor({ storage: config.storage }));\n    pipeline.register(\n      new StorageResponseToArrayTransformer({ header: config.header }),\n    );\n    pipeline.register(new ArrayToTabularTransformer());\n\n    return pipeline;\n  }\n}\n\nexport default PipelineUtils;\n", "export class Store<S = Record<string, unknown>> {\n  private state: S;\n  private listeners: ((current?: S, prev?: S) => void)[] = [];\n  private isDispatching = false;\n\n  constructor(initialState: S) {\n    this.state = initialState;\n  }\n\n  getState = () => this.state;\n  getListeners = () => this.listeners;\n\n  dispatch = (reducer: (state: S) => S) => {\n    if (typeof reducer !== 'function')\n      throw new Error('Reducer is not a function');\n    if (this.isDispatching)\n      throw new Error('Reducers may not dispatch actions');\n\n    this.isDispatching = true;\n\n    const prevState = this.state;\n    try {\n      this.state = reducer(this.state);\n    } finally {\n      this.isDispatching = false;\n    }\n\n    for (const listener of this.listeners) {\n      listener(this.state, prevState);\n    }\n\n    return this.state;\n  };\n\n  subscribe = (listener: (current?: S, prev?: S) => void): (() => void) => {\n    if (typeof listener !== 'function')\n      throw new Error('Listener is not a function');\n\n    this.listeners = [...this.listeners, listener];\n    return () =>\n      (this.listeners = this.listeners.filter((lis) => lis !== listener));\n  };\n}\n", "import { CSSDeclaration, OneDArray, Status, TColumn, TData } from './types';\nimport Storage from './storage/storage';\nimport Pipeline from './pipeline/pipeline';\nimport Tabular from './tabular';\nimport { Search, SearchConfig } from './view/plugin/search/search';\nimport { Pagination, PaginationConfig } from './view/plugin/pagination';\nimport Header from './header';\nimport { ServerStorageOptions } from './storage/server';\nimport { GenericSortConfig } from './view/plugin/sort/sort';\nimport { Language, Translator } from './i18n/language';\nimport { ComponentChild, createContext, createRef, RefObject } from 'preact';\nimport StorageUtils from './storage/storageUtils';\nimport PipelineUtils from './pipeline/pipelineUtils';\nimport { EventEmitter } from './util/eventEmitter';\nimport { GridEvents } from './events';\nimport { PluginManager, PluginPosition, Plugin } from './plugin';\nimport Grid from './grid';\nimport { Store } from './state/store';\n\nexport const ConfigContext = createContext(null);\n\nexport interface Config {\n  // a reference to the current Grid.js instance\n  instance: Grid;\n  store: Store;\n  eventEmitter: EventEmitter<GridEvents>;\n  plugin: PluginManager;\n  /** container element that is used to mount the Grid.js to */\n  // TODO: change this to an element reference\n  container?: Element;\n  /** pointer to the main table element */\n  tableRef?: RefObject<HTMLTableElement>;\n  data?: TData | (() => TData) | (() => Promise<TData>);\n  server?: ServerStorageOptions;\n  header?: Header;\n  /** to parse a HTML table and load the data */\n  from: HTMLElement;\n  storage: Storage<any>;\n  /** Pipeline process throttle timeout in milliseconds */\n  processingThrottleMs: number;\n  pipeline: Pipeline<Tabular>;\n  /** to automatically calculate the columns width */\n  autoWidth: boolean;\n  /** sets the width of the container and table */\n  width: string;\n  /** sets the height of the table */\n  height: string;\n  pagination: PaginationConfig | boolean;\n  sort: GenericSortConfig | boolean;\n  translator: Translator;\n  /** fixes the table header to the top of the table */\n  fixedHeader: boolean;\n  /** Resizable columns? */\n  resizable: boolean;\n  columns: OneDArray<TColumn | string | ComponentChild>;\n  search: SearchConfig | boolean;\n  language: Language;\n  plugins?: Plugin<any>[];\n  style?: Partial<{\n    table: CSSDeclaration;\n    td: CSSDeclaration;\n    th: CSSDeclaration;\n    container: CSSDeclaration;\n    header: CSSDeclaration;\n    footer: CSSDeclaration;\n  }>;\n  className?: Partial<{\n    table: string;\n    th: string;\n    thead: string;\n    tbody: string;\n    tr: string;\n    td: string;\n    container: string;\n    footer: string;\n    header: string;\n    search: string;\n    sort: string;\n    pagination: string;\n    paginationSummary: string;\n    paginationButton: string;\n    paginationButtonNext: string;\n    paginationButtonCurrent: string;\n    paginationButtonPrev: string;\n    loading: string;\n    notfound: string;\n    error: string;\n  }>;\n}\n\nexport class Config {\n  public constructor() {\n    Object.assign(this, Config.defaultConfig());\n  }\n  /**\n   * Assigns `updatedConfig` keys to the current config file\n   *\n   * @param partialConfig\n   */\n  assign(partialConfig: Partial<Config>): Config {\n    return Object.assign(this, partialConfig);\n  }\n\n  /**\n   * Updates the config from a partial Config\n   *\n   * @param partialConfig\n   */\n  update(partialConfig: Partial<Config>): Config {\n    if (!partialConfig) return this;\n\n    this.assign(\n      Config.fromPartialConfig({\n        ...this,\n        ...partialConfig,\n      }),\n    );\n\n    return this;\n  }\n\n  static defaultConfig(): Partial<Config> {\n    return {\n      store: new Store({\n        status: Status.Init,\n        header: undefined,\n        data: null,\n      }),\n      plugin: new PluginManager(),\n      tableRef: createRef(),\n      width: '100%',\n      height: 'auto',\n      processingThrottleMs: 100,\n      autoWidth: true,\n      style: {},\n      className: {},\n    };\n  }\n\n  static fromPartialConfig(partialConfig: Partial<Config>): Partial<Config> {\n    const config = new Config().assign(partialConfig);\n\n    // Sort\n    if (typeof partialConfig.sort === 'boolean' && partialConfig.sort) {\n      config.assign({\n        sort: {\n          multiColumn: true,\n        },\n      });\n    }\n\n    // Header\n    config.assign({\n      header: Header.createFromConfig(config),\n    });\n\n    config.assign({\n      storage: StorageUtils.createFromConfig(config),\n    });\n\n    config.assign({\n      pipeline: PipelineUtils.createFromConfig(config),\n    });\n\n    // Translator\n    config.assign({\n      translator: new Translator(config.language),\n    });\n\n    // clear existing plugins list to prevent duplicate errors\n    config.plugin = new PluginManager();\n\n    if (config.search) {\n      // Search\n      config.plugin.add({\n        id: 'search',\n        position: PluginPosition.Header,\n        component: Search,\n      });\n    }\n\n    if (config.pagination) {\n      // Pagination\n      config.plugin.add({\n        id: 'pagination',\n        position: PluginPosition.Footer,\n        component: Pagination,\n      });\n    }\n\n    // Additional plugins\n    if (config.plugins) {\n      config.plugins.forEach((p) => config.plugin.add(p));\n    }\n\n    return config;\n  }\n}\n", "import { h, ComponentChild, JSX } from 'preact';\n\nimport Cell from '../../cell';\nimport { classJoin, className } from '../../util/className';\nimport { CSSDeclaration, TColumn } from '../../types';\nimport Row from '../../row';\nimport { JSXInternal } from 'preact/src/jsx';\nimport { PluginRenderer } from '../../plugin';\nimport { useConfig } from '../../hooks/useConfig';\n\nexport function TD(\n  props: {\n    cell: Cell;\n    row?: Row;\n    column?: TColumn;\n    style?: CSSDeclaration;\n    messageCell?: boolean;\n  } & Omit<JSX.HTMLAttributes<HTMLTableCellElement>, 'style'>,\n) {\n  const config = useConfig();\n\n  const content = (): ComponentChild => {\n    if (props.column && typeof props.column.formatter === 'function') {\n      return props.column.formatter(props.cell.data, props.row, props.column);\n    }\n\n    if (props.column && props.column.plugin) {\n      return (\n        <PluginRenderer\n          pluginId={props.column.id}\n          props={{\n            column: props.column,\n            cell: props.cell,\n            row: props.row,\n          }}\n        />\n      );\n    }\n\n    return props.cell.data;\n  };\n\n  const handleClick = (\n    e: JSX.TargetedMouseEvent<HTMLTableCellElement>,\n  ): void => {\n    if (props.messageCell) return;\n\n    config.eventEmitter.emit(\n      'cellClick',\n      e,\n      props.cell,\n      props.column,\n      props.row,\n    );\n  };\n\n  const getCustomAttributes = (\n    column: TColumn | null,\n  ): JSXInternal.HTMLAttributes<HTMLTableCellElement> => {\n    if (!column) return {};\n\n    if (typeof column.attributes === 'function') {\n      return column.attributes(props.cell.data, props.row, props.column);\n    } else {\n      return column.attributes;\n    }\n  };\n\n  return (\n    <td\n      role={props.role}\n      colSpan={props.colSpan}\n      data-column-id={props.column && props.column.id}\n      className={classJoin(\n        className('td'),\n        props.className,\n        config.className.td,\n      )}\n      style={{\n        ...props.style,\n        ...config.style.td,\n      }}\n      onClick={handleClick}\n      {...getCustomAttributes(props.column)}\n    >\n      {content()}\n    </td>\n  );\n}\n", "import { h, JSX, ComponentChildren } from 'preact';\n\nimport Row from '../../row';\nimport Cell from '../../cell';\nimport { classJoin, className } from '../../util/className';\nimport { TColumn } from '../../types';\nimport { TD } from './td';\nimport Header from '../../header';\nimport { useConfig } from '../../hooks/useConfig';\nimport useSelector from '../../hooks/useSelector';\n\nexport function TR(props: {\n  row?: Row;\n  messageRow?: boolean;\n  children?: ComponentChildren;\n}) {\n  const config = useConfig();\n  const header = useSelector((state) => state.header);\n\n  const getColumn = (cellIndex: number): TColumn => {\n    if (header) {\n      const cols = Header.leafColumns(header.columns);\n\n      if (cols) {\n        return cols[cellIndex];\n      }\n    }\n\n    return null;\n  };\n\n  const handleClick = (\n    e: JSX.TargetedMouseEvent<HTMLTableRowElement>,\n  ): void => {\n    if (props.messageRow) return;\n    config.eventEmitter.emit('rowClick', e, props.row);\n  };\n\n  const getChildren = (): ComponentChildren => {\n    if (props.children) {\n      return props.children;\n    }\n\n    return props.row.cells.map((cell: Cell, i) => {\n      const column = getColumn(i);\n\n      if (column && column.hidden) return null;\n\n      return <TD key={cell.id} cell={cell} row={props.row} column={column} />;\n    });\n  };\n\n  return (\n    <tr\n      className={classJoin(className('tr'), config.className.tr)}\n      onClick={handleClick}\n    >\n      {getChildren()}\n    </tr>\n  );\n}\n", "import { h } from 'preact';\nimport Cell from '../../cell';\nimport { classJoin, className } from '../../util/className';\nimport { TR } from './tr';\nimport { TD } from './td';\n\nexport function MessageRow(props: {\n  message: string;\n  colSpan?: number;\n  className?: string;\n}) {\n  return (\n    <TR messageRow={true}>\n      <TD\n        role=\"alert\"\n        colSpan={props.colSpan}\n        messageCell={true}\n        cell={new Cell(props.message)}\n        className={classJoin(\n          className('message'),\n          props.className ? props.className : null,\n        )}\n      />\n    </TR>\n  );\n}\n", "import { h } from 'preact';\nimport Row from '../../row';\nimport { TR } from './tr';\nimport { classJoin, className } from '../../util/className';\nimport { Status } from '../../types';\nimport { MessageRow } from './messageRow';\nimport { useConfig } from '../../hooks/useConfig';\nimport { useTranslator } from '../../i18n/language';\nimport useSelector from '../../hooks/useSelector';\n\nexport function TBody() {\n  const config = useConfig();\n  const data = useSelector((state) => state.data);\n  const status = useSelector((state) => state.status);\n  const header = useSelector((state) => state.header);\n  const _ = useTranslator();\n\n  const headerLength = () => {\n    if (header) {\n      return header.visibleColumns.length;\n    }\n    return 0;\n  };\n\n  return (\n    <tbody className={classJoin(className('tbody'), config.className.tbody)}>\n      {data &&\n        data.rows.map((row: Row) => {\n          return <TR key={row.id} row={row} />;\n        })}\n\n      {status === Status.Loading && (!data || data.length === 0) && (\n        <MessageRow\n          message={_('loading')}\n          colSpan={headerLength()}\n          className={classJoin(className('loading'), config.className.loading)}\n        />\n      )}\n\n      {status === Status.Rendered && data && data.length === 0 && (\n        <MessageRow\n          message={_('noRecordsFound')}\n          colSpan={headerLength()}\n          className={classJoin(\n            className('notfound'),\n            config.className.notfound,\n          )}\n        />\n      )}\n\n      {status === Status.Error && (\n        <MessageRow\n          message={_('error')}\n          colSpan={headerLength()}\n          className={classJoin(className('error'), config.className.error)}\n        />\n      )}\n    </tbody>\n  );\n}\n", "import { Comparator, TCell } from '../../types';\nimport Tabular from '../../tabular';\nimport {\n  PipelineProcessor,\n  PipelineProcessorProps,\n  ProcessorType,\n} from '../processor';\nimport Row from '../../row';\nimport log from '../../util/log';\n\ninterface NativeSortProps extends PipelineProcessorProps {\n  columns: {\n    index: number;\n    // 1 ascending, -1 descending\n    direction?: 1 | -1;\n    compare?: Comparator<TCell>;\n  }[];\n}\n\nclass NativeSort extends PipelineProcessor<Tabular, NativeSortProps> {\n  protected validateProps(): void {\n    for (const condition of this.props.columns) {\n      if (condition.direction === undefined) {\n        condition.direction = 1;\n      }\n\n      if (condition.direction !== 1 && condition.direction !== -1) {\n        log.error(`Invalid sort direction ${condition.direction}`);\n      }\n    }\n  }\n\n  get type(): ProcessorType {\n    return ProcessorType.Sort;\n  }\n\n  private compare(cellA: TCell, cellB: TCell): number {\n    if (cellA > cellB) {\n      return 1;\n    } else if (cellA < cellB) {\n      return -1;\n    }\n\n    return 0;\n  }\n\n  private compareWrapper(a: Row, b: Row): number {\n    let cmp = 0;\n\n    for (const column of this.props.columns) {\n      if (cmp === 0) {\n        const cellA = a.cells[column.index].data;\n        const cellB = b.cells[column.index].data;\n\n        if (typeof column.compare === 'function') {\n          cmp |= column.compare(cellA, cellB) * column.direction;\n        } else {\n          cmp |= this.compare(cellA, cellB) * column.direction;\n        }\n      } else {\n        break;\n      }\n    }\n\n    return cmp;\n  }\n\n  protected _process(data: Tabular): Tabular {\n    const sortedRows = [...data.rows];\n    sortedRows.sort(this.compareWrapper.bind(this));\n\n    const sorted = new Tabular(sortedRows);\n    // we have to set the tabular length manually\n    // because of the server-side storage\n    sorted.length = data.length;\n\n    return sorted;\n  }\n}\n\nexport default NativeSort;\n", "import { Comparator, TCell } from '../../../types';\n\nexport const SortColumn =\n  (\n    index: number,\n    direction: 1 | -1,\n    multi?: boolean,\n    compare?: Comparator<TCell>,\n  ) =>\n  (state) => {\n    let columns = state.sort?.columns\n      ? state.sort.columns.map((x) => {\n          return { ...x };\n        })\n      : [];\n    const count = columns.length;\n    const column = columns.find((x) => x.index === index);\n    const exists = column !== undefined;\n\n    let add = false;\n    let reset = false;\n    let remove = false;\n    let update = false;\n\n    if (!exists) {\n      // the column has not been sorted\n      if (count === 0) {\n        // the first column to be sorted\n        add = true;\n      } else if (count > 0 && !multi) {\n        // remove the previously sorted column\n        // and sort the current column\n        add = true;\n        reset = true;\n      } else if (count > 0 && multi) {\n        // multi-sorting\n        // sort this column as well\n        add = true;\n      }\n    } else {\n      // the column has been sorted before\n      if (!multi) {\n        // single column sorting\n        if (count === 1) {\n          update = true;\n        } else if (count > 1) {\n          // this situation happens when we have already entered\n          // multi-sorting mode but then user tries to sort a single column\n          reset = true;\n          add = true;\n        }\n      } else {\n        // multi sorting\n        if (column.direction === -1) {\n          // remove the current column from the\n          // sorted columns array\n          remove = true;\n        } else {\n          update = true;\n        }\n      }\n    }\n\n    if (reset) {\n      // resetting the sorted columns\n      columns = [];\n    }\n\n    if (add) {\n      columns.push({\n        index: index,\n        direction: direction,\n        compare: compare,\n      });\n    } else if (update) {\n      const index = columns.indexOf(column);\n      columns[index].direction = direction;\n    } else if (remove) {\n      const index = columns.indexOf(column);\n      columns.splice(index, 1);\n    }\n\n    return {\n      ...state,\n      sort: {\n        columns: columns,\n      },\n    };\n  };\n\nexport const SortToggle =\n  (index: number, multi: boolean, compare?: Comparator<TCell>) => (state) => {\n    const columns = state.sort ? [...state.sort.columns] : [];\n    const column = columns.find((x) => x.index === index);\n\n    if (!column) {\n      return {\n        ...state,\n        ...SortColumn(index, 1, multi, compare)(state),\n      };\n    }\n\n    return {\n      ...state,\n      ...SortColumn(\n        index,\n        column.direction === 1 ? -1 : 1,\n        multi,\n        compare,\n      )(state),\n    };\n  };\n", "import {\n  PipelineProcessor,\n  PipelineProcessorProps,\n  ProcessorType,\n} from '../processor';\nimport { ServerStorageOptions } from '../../storage/server';\nimport { TColumnSort } from '../../types';\n\ninterface ServerSortProps extends PipelineProcessorProps {\n  columns: TColumnSort[];\n  url?: (prevUrl: string, columns: TColumnSort[]) => string;\n  body?: (prevBody: BodyInit, columns: TColumnSort[]) => BodyInit;\n}\n\nclass ServerSort extends PipelineProcessor<\n  ServerStorageOptions,\n  ServerSortProps\n> {\n  get type(): ProcessorType {\n    return ProcessorType.ServerSort;\n  }\n\n  _process(options?: ServerStorageOptions): ServerStorageOptions {\n    const updates = {};\n\n    if (this.props.url) {\n      updates['url'] = this.props.url(options.url, this.props.columns);\n    }\n\n    if (this.props.body) {\n      updates['body'] = this.props.body(options.body, this.props.columns);\n    }\n\n    return {\n      ...options,\n      ...updates,\n    };\n  }\n}\n\nexport default ServerSort;\n", "import { h, JSX } from 'preact';\n\nimport { classJoin, className } from '../../../util/className';\nimport { PipelineProcessor, ProcessorType } from '../../../pipeline/processor';\nimport NativeSort from '../../../pipeline/sort/native';\nimport { Comparator, TCell, TColumnSort } from '../../../types';\nimport * as actions from './actions';\nimport ServerSort from '../../../pipeline/sort/server';\nimport { useEffect, useState } from 'preact/hooks';\nimport { useConfig } from '../../../hooks/useConfig';\nimport { useTranslator } from '../../../i18n/language';\nimport useSelector from '../../../hooks/useSelector';\nimport { useStore } from '../../../hooks/useStore';\n\n// column specific config\nexport interface SortConfig {\n  compare?: Comparator<TCell>;\n  // 1 ascending, -1 descending\n  direction?: 1 | -1;\n}\n\n// generic sort config:\n//\n// Config {\n//    sort: GenericSortConfig\n// }\n//\nexport interface GenericSortConfig {\n  multiColumn?: boolean;\n  server?: {\n    url?: (prevUrl: string, columns: TColumnSort[]) => string;\n    body?: (prevBody: BodyInit, columns: TColumnSort[]) => BodyInit;\n  };\n}\n\nexport function Sort(\n  props: {\n    // column index\n    index: number;\n  } & SortConfig,\n) {\n  const config = useConfig();\n  const { dispatch } = useStore();\n  const _ = useTranslator();\n  const [direction, setDirection] = useState(0);\n  const sortConfig = config.sort as GenericSortConfig;\n  const state = useSelector((state) => state.sort);\n  const processorType =\n    typeof sortConfig?.server === 'object'\n      ? ProcessorType.ServerSort\n      : ProcessorType.Sort;\n\n  const getSortProcessor = () => {\n    const processors = config.pipeline.getStepsByType(processorType);\n    if (processors.length) {\n      return processors[0];\n    }\n    return undefined;\n  };\n\n  const createSortProcessor = () => {\n    if (processorType === ProcessorType.ServerSort) {\n      return new ServerSort({\n        columns: state ? state.columns : [],\n        ...sortConfig.server,\n      });\n    }\n\n    return new NativeSort({\n      columns: state ? state.columns : [],\n    });\n  };\n\n  const getOrCreateSortProcessor = (): PipelineProcessor<any, any> => {\n    const existingSortProcessor = getSortProcessor();\n    if (existingSortProcessor) {\n      return existingSortProcessor;\n    }\n\n    return createSortProcessor();\n  };\n\n  useEffect(() => {\n    const processor = getOrCreateSortProcessor();\n    config.pipeline.tryRegister(processor);\n\n    return () => config.pipeline.unregister(processor);\n  }, [config]);\n\n  /**\n   * Sets the internal state of component\n   */\n  useEffect(() => {\n    if (!state) return;\n\n    const currentColumn = state.columns.find((x) => x.index === props.index);\n\n    if (!currentColumn) {\n      setDirection(0);\n    } else {\n      // if the direction is not set, initialize the selected\n      // column direction with the passed prop (default to ascending)\n      if (direction === 0) {\n        currentColumn.direction = props.direction ?? 1;\n      }\n      setDirection(currentColumn.direction);\n    }\n  }, [state]);\n\n  useEffect(() => {\n    const processor = getSortProcessor();\n\n    if (!processor) return;\n    if (!state) return;\n\n    processor.setProps({\n      columns: state.columns,\n    });\n  }, [state]);\n\n  const changeDirection = (e: JSX.TargetedMouseEvent<HTMLButtonElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n    // to sort two or more columns at the same time\n    dispatch(\n      actions.SortToggle(\n        props.index,\n        e.shiftKey === true && sortConfig.multiColumn,\n        props.compare,\n      ),\n    );\n  };\n\n  const getSortClassName = (direction: number) => {\n    if (direction === 1) {\n      return 'asc';\n    } else if (direction === -1) {\n      return 'desc';\n    }\n\n    return 'neutral';\n  };\n\n  return (\n    <button\n      // because the corresponding <th> has tabIndex=0\n      tabIndex={-1}\n      aria-label={_(`sort.sort${direction === 1 ? 'Desc' : 'Asc'}`)}\n      title={_(`sort.sort${direction === 1 ? 'Desc' : 'Asc'}`)}\n      className={classJoin(\n        className('sort'),\n        className('sort', getSortClassName(direction)),\n        config.className.sort,\n      )}\n      onClick={changeDirection}\n    />\n  );\n}\n", "/**\n * Throttle a given function\n * @param fn Function to be called\n * @param wait Throttle timeout in milliseconds\n * @returns Throttled function\n */\nexport const throttle = (fn: (...args) => void, wait = 100) => {\n  let timeoutId: ReturnType<typeof setTimeout>;\n  let lastTime = Date.now();\n\n  const execute = (...args) => {\n    lastTime = Date.now();\n    fn(...args);\n  };\n\n  return (...args) => {\n    const currentTime = Date.now();\n    const elapsed = currentTime - lastTime;\n\n    if (elapsed >= wait) {\n      // If enough time has passed since the last call, execute the function immediately\n      execute(...args);\n    } else {\n      // If not enough time has passed, schedule the function call after the remaining delay\n      if (timeoutId) {\n        clearTimeout(timeoutId);\n      }\n\n      timeoutId = setTimeout(() => {\n        execute(...args);\n        timeoutId = null;\n      }, wait - elapsed);\n    }\n  };\n};\n", "import { h, RefObject } from 'preact';\nimport { classJoin, className } from '../../../util/className';\nimport { TColumn } from '../../../types';\nimport { throttle } from '../../../util/throttle';\n\nexport function Resize(props: {\n  column: TColumn;\n  thRef: RefObject<HTMLTableCellElement>;\n}) {\n  let moveFn: (e) => void;\n\n  const getPageX = (e: MouseEvent | TouchEvent) => {\n    if (e instanceof MouseEvent) {\n      return Math.floor(e.pageX);\n    } else {\n      return Math.floor(e.changedTouches[0].pageX);\n    }\n  };\n\n  const start = (e: MouseEvent | TouchEvent) => {\n    e.stopPropagation();\n\n    const thElement = props.thRef.current;\n\n    const offsetStart = parseInt(thElement.style.width, 10) - getPageX(e);\n\n    moveFn = throttle((e) => move(e, offsetStart), 10);\n\n    document.addEventListener('mouseup', end);\n    document.addEventListener('touchend', end);\n    document.addEventListener('mousemove', moveFn);\n    document.addEventListener('touchmove', moveFn);\n  };\n\n  const move = (e: MouseEvent | TouchEvent, offsetStart: number) => {\n    e.stopPropagation();\n\n    const thElement = props.thRef.current;\n\n    if (offsetStart + getPageX(e) >= parseInt(thElement.style.minWidth, 10)) {\n      thElement.style.width = `${offsetStart + getPageX(e)}px`;\n    }\n  };\n\n  const end = (e: MouseEvent | TouchEvent) => {\n    e.stopPropagation();\n\n    document.removeEventListener('mouseup', end);\n    document.removeEventListener('mousemove', moveFn);\n    document.removeEventListener('touchmove', moveFn);\n    document.removeEventListener('touchend', end);\n  };\n\n  return (\n    <div\n      className={classJoin(className('th'), className('resizable'))}\n      onMouseDown={start}\n      onTouchStart={start}\n      onClick={(e) => e.stopPropagation()}\n    />\n  );\n}\n", "import { h, ComponentChild, JSX } from 'preact';\n\nimport { classJoin, className } from '../../util/className';\nimport { CSSDeclaration, TColumn } from '../../types';\nimport { GenericSortConfig, Sort } from '../plugin/sort/sort';\nimport { PluginRenderer } from '../../plugin';\nimport { Resize } from '../plugin/resize/resize';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useConfig } from '../../hooks/useConfig';\nimport * as SortActions from '../plugin/sort/actions';\nimport { useStore } from '../../hooks/useStore';\n\nexport function TH(\n  props: {\n    index: number;\n    column: TColumn;\n    style?: CSSDeclaration;\n  } & Omit<JSX.HTMLAttributes<HTMLTableCellElement>, 'style'>,\n) {\n  const config = useConfig();\n  const thRef = useRef(null);\n  const [style, setStyle] = useState({});\n  const { dispatch } = useStore();\n\n  useEffect(() => {\n    // sets the `top` style if the current TH is fixed\n    if (config.fixedHeader && thRef.current) {\n      const offsetTop = thRef.current.offsetTop;\n\n      if (typeof offsetTop === 'number') {\n        setStyle({\n          top: offsetTop,\n        });\n      }\n    }\n  }, [thRef]);\n\n  const isSortable = (): boolean => props.column.sort != undefined;\n  const isResizable = (): boolean => props.column.resizable;\n  const onClick = (\n    e:\n      | JSX.TargetedMouseEvent<HTMLTableCellElement>\n      | JSX.TargetedKeyboardEvent<HTMLTableCellElement>,\n  ) => {\n    e.stopPropagation();\n\n    if (isSortable()) {\n      const sortConfig = config.sort as GenericSortConfig;\n\n      dispatch(\n        SortActions.SortToggle(\n          props.index,\n          e.shiftKey === true && sortConfig.multiColumn,\n          props.column.sort.compare,\n        ),\n      );\n    }\n  };\n\n  const keyDown = (e: JSX.TargetedKeyboardEvent<HTMLTableCellElement>) => {\n    // Enter key\n    if (isSortable() && e.which === 13) {\n      onClick(e);\n    }\n  };\n\n  const content = (): ComponentChild => {\n    if (props.column.name !== undefined) {\n      return props.column.name;\n    }\n\n    if (props.column.plugin !== undefined) {\n      return (\n        <PluginRenderer\n          pluginId={props.column.plugin.id}\n          props={{\n            column: props.column,\n          }}\n        />\n      );\n    }\n\n    return null;\n  };\n\n  const getCustomAttributes = () => {\n    const column = props.column;\n\n    if (!column) return {};\n\n    if (typeof column.attributes === 'function') {\n      return column.attributes(null, null, props.column);\n    } else {\n      return column.attributes;\n    }\n  };\n\n  return (\n    <th\n      ref={thRef}\n      data-column-id={props.column && props.column.id}\n      className={classJoin(\n        className('th'),\n        isSortable() ? className('th', 'sort') : null,\n        config.fixedHeader ? className('th', 'fixed') : null,\n        config.className.th,\n      )}\n      onClick={onClick}\n      style={{\n        ...config.style.th,\n        ...{\n          minWidth: props.column.minWidth,\n          width: props.column.width,\n        },\n        ...style,\n        ...props.style,\n      }}\n      onKeyDown={keyDown}\n      rowSpan={props.rowSpan > 1 ? props.rowSpan : undefined}\n      colSpan={props.colSpan > 1 ? props.colSpan : undefined}\n      {...getCustomAttributes()}\n      {...(isSortable() ? { tabIndex: 0 } : {})}\n    >\n      <div className={className('th', 'content')}>{content()}</div>\n      {isSortable() && <Sort index={props.index} {...props.column.sort} />}\n      {isResizable() &&\n        props.index < config.header.visibleColumns.length - 1 && (\n          <Resize column={props.column} thRef={thRef} />\n        )}\n    </th>\n  );\n}\n", "import { h } from 'preact';\nimport { TR } from './tr';\nimport { TH } from './th';\nimport { classJoin, className } from '../../util/className';\nimport Header from '../../header';\nimport { TColumn } from '../../types';\nimport { calculateRowColSpans } from '../../util/table';\nimport { useConfig } from '../../hooks/useConfig';\nimport useSelector from '../../hooks/useSelector';\n\nexport function THead() {\n  const config = useConfig();\n  const header = useSelector((state) => state.header);\n\n  const renderColumn = (\n    column: TColumn,\n    rowIndex: number,\n    columnIndex: number,\n    totalRows: number,\n  ) => {\n    const { rowSpan, colSpan } = calculateRowColSpans(\n      column,\n      rowIndex,\n      totalRows,\n    );\n\n    return (\n      <TH\n        column={column}\n        index={columnIndex}\n        colSpan={colSpan}\n        rowSpan={rowSpan}\n      />\n    );\n  };\n\n  const renderRow = (row: TColumn[], rowIndex: number, totalRows: number) => {\n    // because the only sortable columns are leaf columns (not parents)\n    const leafColumns = Header.leafColumns(header.columns);\n\n    return (\n      <TR>\n        {row.map((col) => {\n          if (col.hidden) return null;\n\n          return renderColumn(\n            col,\n            rowIndex,\n            leafColumns.indexOf(col),\n            totalRows,\n          );\n        })}\n      </TR>\n    );\n  };\n\n  const renderRows = () => {\n    const rows = Header.tabularFormat(header.columns);\n\n    return rows.map((row, rowIndex) => renderRow(row, rowIndex, rows.length));\n  };\n\n  if (header) {\n    return (\n      <thead\n        key={header.id}\n        className={classJoin(className('thead'), config.className.thead)}\n      >\n        {renderRows()}\n      </thead>\n    );\n  }\n\n  return null;\n}\n", "import { TColumn } from '../types';\nimport Header from '../header';\n\nexport function calculateRowColSpans(\n  column: TColumn,\n  rowIndex: number,\n  totalRows: number,\n): { rowSpan: number; colSpan: number } {\n  const depth = Header.maximumDepth(column);\n  const remainingRows = totalRows - rowIndex;\n  const rowSpan = Math.floor(remainingRows - depth - depth / remainingRows);\n  const colSpan = (column.columns && column.columns.length) || 1;\n\n  return {\n    rowSpan: rowSpan,\n    colSpan: colSpan,\n  };\n}\n", "import Header from 'src/header';\nimport Tabular from '../tabular';\nimport { Status } from '../types';\n\nexport const SetStatusToRendered = () => (state) => {\n  if (state.status === Status.Loaded) {\n    return {\n      ...state,\n      status: Status.Rendered,\n    };\n  }\n\n  return state;\n};\n\nexport const SetLoadingData = () => (state) => {\n  return {\n    ...state,\n    status: Status.Loading,\n  };\n};\n\nexport const SetData = (data: Tabular) => (state) => {\n  if (!data) return state;\n\n  return {\n    ...state,\n    data: data,\n    status: Status.Loaded,\n  };\n};\n\nexport const SetDataErrored = () => (state) => {\n  return {\n    ...state,\n    data: null,\n    status: Status.Error,\n  };\n};\n\nexport const SetHeader = (header: Header) => (state) => {\n  return {\n    ...state,\n    header: header,\n  };\n};\n\nexport const SetTableRef = (tableRef) => (state) => {\n  return {\n    ...state,\n    tableRef: tableRef,\n  };\n};\n", "import { h } from 'preact';\nimport { TBody } from './tbody';\nimport { THead } from './thead';\nimport { classJoin, className } from '../../util/className';\nimport { useConfig } from '../../hooks/useConfig';\nimport { useEffect, useRef } from 'preact/hooks';\nimport * as actions from '../actions';\nimport { useStore } from '../../hooks/useStore';\n\nexport function Table() {\n  const config = useConfig();\n  const tableRef = useRef(null);\n  const { dispatch } = useStore();\n\n  useEffect(() => {\n    if (tableRef) dispatch(actions.SetTableRef(tableRef));\n  }, [tableRef]);\n\n  return (\n    <table\n      ref={tableRef}\n      role=\"grid\"\n      className={classJoin(className('table'), config.className.table)}\n      style={{\n        ...config.style.table,\n        ...{\n          height: config.height,\n        },\n      }}\n    >\n      <THead />\n      <TBody />\n    </table>\n  );\n}\n", "import { classJoin, className } from '../util/className';\nimport { h } from 'preact';\nimport { PluginPosition, PluginRenderer } from '../plugin';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useConfig } from '../hooks/useConfig';\n\nexport function HeaderContainer() {\n  const [isActive, setIsActive] = useState(true);\n  const headerRef = useRef(null);\n  const config = useConfig();\n\n  useEffect(() => {\n    if (headerRef.current.children.length === 0) {\n      setIsActive(false);\n    }\n  }, [headerRef]);\n\n  if (isActive) {\n    return (\n      <div\n        ref={headerRef}\n        className={classJoin(className('head'), config.className.header)}\n        style={{ ...config.style.header }}\n      >\n        <PluginRenderer position={PluginPosition.Header} />\n      </div>\n    );\n  }\n\n  return null;\n}\n", "import { h } from 'preact';\nimport { classJoin, className } from '../util/className';\nimport { PluginPosition, PluginRenderer } from '../plugin';\nimport { useEffect, useRef, useState } from 'preact/hooks';\nimport { useConfig } from '../hooks/useConfig';\n\nexport function FooterContainer() {\n  const footerRef = useRef(null);\n  const [isActive, setIsActive] = useState(true);\n  const config = useConfig();\n\n  useEffect(() => {\n    if (footerRef.current.children.length === 0) {\n      setIsActive(false);\n    }\n  }, [footerRef]);\n\n  if (isActive) {\n    return (\n      <div\n        ref={footerRef}\n        className={classJoin(className('footer'), config.className.footer)}\n        style={{ ...config.style.footer }}\n      >\n        <PluginRenderer position={PluginPosition.Footer} />\n      </div>\n    );\n  }\n\n  return null;\n}\n", "import { createRef, h } from 'preact';\nimport { classJoin, className } from '../util/className';\nimport { Status } from '../types';\nimport { Table } from './table/table';\nimport { HeaderContainer } from './headerContainer';\nimport { FooterContainer } from './footerContainer';\nimport log from '../util/log';\nimport { useEffect } from 'preact/hooks';\nimport * as actions from './actions';\nimport { useStore } from '../hooks/useStore';\nimport useSelector from '../hooks/useSelector';\nimport { useConfig } from '../hooks/useConfig';\nimport { throttle } from '../util/throttle';\n\nexport function Container() {\n  const config = useConfig();\n  const { dispatch } = useStore();\n  const status = useSelector((state) => state.status);\n  const data = useSelector((state) => state.data);\n  const tableRef = useSelector((state) => state.tableRef);\n  const tempRef = createRef();\n\n  const processPipeline = throttle(async () => {\n    dispatch(actions.SetLoadingData());\n\n    try {\n      const data = await config.pipeline.process();\n      dispatch(actions.SetData(data));\n\n      // TODO: do we need this setTimemout?\n      setTimeout(() => {\n        dispatch(actions.SetStatusToRendered());\n      }, 0);\n    } catch (e) {\n      log.error(e);\n      dispatch(actions.SetDataErrored());\n    }\n  }, config.processingThrottleMs);\n\n  useEffect(() => {\n    // set the initial header object\n    // we update the header width later when \"data\"\n    // is available in the state\n    dispatch(actions.SetHeader(config.header));\n\n    processPipeline();\n    config.pipeline.on('updated', processPipeline);\n\n    return () => config.pipeline.off('updated', processPipeline);\n  }, []);\n\n  useEffect(() => {\n    if (config.header && status === Status.Loaded && data?.length) {\n      // now that we have the data, let's adjust columns width\n      // NOTE: that we only calculate the columns width once\n      dispatch(\n        actions.SetHeader(config.header.adjustWidth(config, tableRef, tempRef)),\n      );\n    }\n  }, [data, config, tempRef]);\n\n  return (\n    <div\n      role=\"complementary\"\n      className={classJoin(\n        'gridjs',\n        className('container'),\n        status === Status.Loading ? className('loading') : null,\n        config.className.container,\n      )}\n      style={{\n        ...config.style.container,\n        ...{\n          width: config.width,\n        },\n      }}\n    >\n      {status === Status.Loading && (\n        <div className={className('loading-bar')} />\n      )}\n\n      <HeaderContainer />\n\n      <div className={className('wrapper')} style={{ height: config.height }}>\n        <Table />\n      </div>\n\n      <FooterContainer />\n\n      <div ref={tempRef} id=\"gridjs-temp\" className={className('temp')} />\n    </div>\n  );\n}\n", "import { Config } from './config';\nimport { h, render, VNode } from 'preact';\nimport { Container } from './view/container';\nimport log from './util/log';\nimport { EventEmitter } from './util/eventEmitter';\nimport { GridEvents } from './events';\nimport { PluginManager } from './plugin';\nimport { ConfigContext } from './config';\n\nclass Grid extends EventEmitter<GridEvents> {\n  public config: Config;\n  public plugin: PluginManager;\n\n  constructor(config?: Partial<Config>) {\n    super();\n    this.config = new Config()\n      .assign({ instance: this, eventEmitter: this })\n      .update(config);\n    this.plugin = this.config.plugin;\n  }\n\n  public updateConfig(config: Partial<Config>): this {\n    this.config.update(config);\n    return this;\n  }\n\n  createElement(): VNode {\n    return h(ConfigContext.Provider, {\n      value: this.config,\n      children: h(Container, {}),\n    });\n  }\n\n  /**\n   * Uses the existing container and tries to clear the cache\n   * and re-render the existing Grid.js instance again. This is\n   * useful when a new config is set/updated.\n   *\n   */\n  forceRender(): this {\n    if (!this.config || !this.config.container) {\n      log.error(\n        'Container is empty. Make sure you call render() before forceRender()',\n        true,\n      );\n    }\n\n    this.destroy();\n\n    // recreate the Grid instance\n    render(this.createElement(), this.config.container);\n\n    return this;\n  }\n\n  /**\n   * Deletes the Grid.js instance\n   */\n  destroy(): void {\n    this.config.pipeline.clearCache();\n    // TODO: not sure if it's a good idea to render a null element but I couldn't find a better way\n    render(null, this.config.container);\n  }\n\n  /**\n   * Mounts the Grid.js instance to the container\n   * and renders the instance\n   *\n   * @param container\n   */\n  render(container: Element): this {\n    if (!container) {\n      log.error('Container element cannot be null', true);\n    }\n\n    if (container.childNodes.length > 0) {\n      log.error(\n        `The container element ${container} is not empty. Make sure the container is empty and call render() again`,\n      );\n      return this;\n    }\n\n    this.config.container = container;\n    render(this.createElement(), container);\n\n    return this;\n  }\n}\n\nexport default Grid;\n", "/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n", "import * as React from \"react\";\nimport { Component, createRef, RefObject } from \"react\";\nimport { Grid as Gridjs, Config } from \"gridjs\";\n\nclass Grid extends Component<Partial<Config>, any> {\n  private wrapper: RefObject<HTMLDivElement> = createRef();\n  // Grid.js instance\n  private readonly instance = null;\n\n  constructor(props) {\n    super(props);\n\n    this.instance = new Gridjs(props || {});\n  }\n\n  getInstance(): Gridjs {\n    return this.instance;\n  }\n\n  componentDidMount(): void {\n    // prevent gridjs from complaining that the container is not empty\n    if (this.wrapper.current.childNodes.length > 0) {\n      this.wrapper.current.innerHTML = '';\n    }\n\n    this.instance.render(this.wrapper.current);\n  }\n\n  componentDidUpdate(): void {\n    this.instance.updateConfig(this.props).forceRender();\n  }\n\n  render(): React.ReactElement {\n    return <div ref={this.wrapper} />;\n  }\n}\n\nexport default Grid;\n", "'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n", "import { h, createRef as gCreateRef, Component as gComponent } from \"gridjs\";\nimport { createRoot } from \"react-dom/client\";\n\n\nexport class ReactWrapper extends gComponent<{\n  element: any;\n  parent?: string;\n}> {\n  static defaultProps = {\n    parent: \"div\",\n  };\n\n  ref = gCreateRef();\n\n  componentDidMount(): void {\n    const root = createRoot(this.ref.current);\n    root.render(this.props.element);\n  }\n\n  render() {\n    return h(this.props.parent, { ref: this.ref });\n  }\n}\n\nexport function _(element: any, parent?: string) {\n  return h(ReactWrapper, {\n    element: element,\n    parent: parent,\n  });\n}\n"],
  "mappings": "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",
  "names": ["Status", "n", "l", "u", "i", "t", "o", "r", "f", "e", "c", "s", "a", "parentNode", "removeChild", "h", "arguments", "length", "children", "call", "defaultProps", "v", "type", "props", "key", "ref", "__k", "__", "__b", "__e", "__d", "__c", "__h", "constructor", "__v", "vnode", "y", "current", "p", "d", "this", "context", "_", "indexOf", "k", "base", "b", "push", "g", "__r", "debounceRendering", "setTimeout", "sort", "some", "__P", "j", "__n", "ownerSVGElement", "z", "w", "x", "C", "Array", "isArray", "m", "A", "N", "M", "appendChild", "nextSibling", "insertBefore", "$", "setProperty", "test", "H", "style", "cssText", "replace", "toLowerCase", "slice", "addEventListener", "T", "I", "removeEventListener", "removeAttribute", "setAttribute", "event", "contextType", "value", "__E", "prototype", "render", "O", "sub", "state", "_sb", "__s", "getDerivedStateFromProps", "componentWillMount", "componentDidMount", "componentWillReceiveProps", "shouldComponentUpdate", "forEach", "componentWillUpdate", "componentDidUpdate", "getChildContext", "getSnapshotBeforeUpdate", "L", "diffed", "localName", "nodeType", "document", "createTextNode", "createElementNS", "createElement", "is", "data", "childNodes", "dangerouslySetInnerHTML", "attributes", "name", "__html", "innerHTML", "checked", "unmount", "componentWillUnmount", "P", "firstChild", "Math", "random", "toString", "getDerivedStateFromError", "setState", "componentDidCatch", "forceUpdate", "Base", "id", "_id", "generateUUID", "_createClass", "HTMLElement", "parentElement", "content", "html", "Cell", "ProcessorType", "_Base", "_this", "update", "_inheritsLoose", "_proto", "cast", "outerHTML", "Row", "cells", "_cells", "cell", "index", "toArray", "map", "fromCells", "get", "set", "Tabular", "rows", "_rows", "_length", "row", "fromRows", "fromArray", "len", "EventEmitter", "callbacks", "init", "listeners", "on", "listener", "off", "eventName", "filter", "emit", "_arguments", "apply", "deepEqual", "obj1", "obj2", "hasOwnProperty", "keys1", "Object", "keys", "keys2", "_i", "_keys", "PipelineProcessor", "_EventEmitter", "_props", "setProps", "process", "args", "validateProps", "_process", "concat", "updatedProps", "_extends", "GlobalSearchFilter", "keyword", "String", "trim", "columns", "ignoreHiddenColumns", "tabular", "selector", "rowIndex", "cellIndex", "hidden", "element", "Filter", "className", "prefix", "reduce", "prev", "cur", "ServerGlobalSearchFilter", "options", "updates", "url", "body", "ServerFilter", "__H", "__V", "B", "__N", "every", "F", "shift", "requestAnimationFrame", "clearTimeout", "cancelAnimationFrame", "ConfigContext", "enUS", "search", "placeholder", "sortAsc", "sortDesc", "pagination", "previous", "next", "navigate", "page", "pages", "showing", "of", "to", "results", "loading", "noRecordsFound", "error", "Translator", "language", "_language", "_defaultLanguage", "getString", "message", "lang", "splitted", "split", "val", "join", "translate", "messageFormat", "translated", "useTranslator", "config", "useConfig", "_config$translator", "translator", "payload", "store", "useSelector", "useStore", "_useState", "useState", "getState", "setCurrent", "useEffect", "subscribe", "updated", "Search", "_config$className", "undefined", "processor", "setProcessor", "dispatch", "server", "header", "actions", "pipeline", "register", "unregister", "func", "waitFor", "timeout", "debouncedOnInput", "target", "HTMLInputElement", "debounceTimeout", "resolve", "classJoin", "onInput", "defaultValue", "PaginationLimit", "isNaN", "Number", "limit", "Error", "Limit", "ServerPaginationLimit", "ServerLimit", "Pagination", "_config$pagination", "summary", "_config$pagination$su", "_config$pagination$ne", "nextButton", "_config$pagination$pr", "prevButton", "_config$pagination$bu", "buttonsCount", "_config$pagination$li", "_config$pagination$pa", "_config$pagination$re", "resetPageOnUpdate", "useRef", "currentPage", "setCurrentPage", "total", "setTotal", "_useState2", "onUpdate", "updatedProcessor", "ceil", "setPage", "Fragment", "role", "paginationSummary", "title", "min", "tabIndex", "disabled", "onClick", "paginationButton", "paginationButtonPrev", "maxCount", "pagePivot", "floor", "from", "paginationButtonCurrent", "renderPages", "paginationButtonNext", "width", "containerWidth", "parseInt", "px", "ShadowTable", "shadowTable", "tableRef", "cloneNode", "position", "zIndex", "visibility", "nodeElement", "camelCase", "str", "words", "word", "charAt", "toUpperCase", "PluginPosition", "log", "Logger", "format", "throwException", "msg", "console", "warn", "info", "PluginManager", "plugins", "find", "add", "plugin", "remove", "splice", "list", "order", "PluginRenderer", "pluginId", "component", "Header", "_columns", "adjustWidth", "tempRef", "container", "autoWidth", "clientWidth", "widths", "getShadowTableWidths", "querySelector", "tableElement", "tableClassName", "tableStyle", "tableLayout", "padding", "margin", "border", "outline", "querySelectorAll", "getAttribute", "minWidth", "obj", "_step", "_iterator", "_createForOfIteratorHelperLoose", "tabularFormat", "done", "column", "setSort", "sortConfig", "cols", "_step2", "setResizable", "resizable", "_step3", "_iterator3", "setID", "_step4", "_iterator4", "logger", "populatePlugins", "pluginManager", "_step5", "_iterator5", "fromColumns", "_step6", "_iterator6", "isValidElement", "typedColumn", "createFromConfig", "fromHTMLTable", "_step7", "_iterator7", "th", "result", "_step8", "_iterator8", "col", "nextRow", "leafColumns", "_step9", "_iterator9", "maximumDepth", "Storage", "MemoryStorage", "_Storage", "Promise", "reject", "ServerStorage", "handler", "response", "handle", "ok", "json", "status", "statusText", "opts", "fetch", "then", "bind", "res", "StorageUtils", "storage", "tableElementToArray", "display", "arr", "parsedRow", "_iterator2", "Node", "TEXT_NODE", "DOMParser", "parseFromString", "documentElement", "textContent", "pact", "_settle", "observer", "_Pact", "onFulfilled", "onRejected", "callback", "_isSettledPact", "thenable", "Pipeline", "steps", "_steps", "cache", "Map", "lastProcessorIndexUpdated", "step", "clearCache", "priority", "findProcessorIndexByID", "processorPropsUpdated", "addProcessorByPriority", "afterRegistered", "tryRegister", "subSteps", "proc", "newSubStep", "second", "first", "getStepsByType", "getSortedProcessorTypes", "_temp3", "_result", "_this2", "_temp2", "array", "check", "_cycle", "processorIndex", "_processor$process", "processorID", "findIndex", "setLastProcessorIndex", "StorageExtractor", "Extractor", "arrayResponse", "ArrayToTabularTransformer", "Transformer", "ServerInitiator", "_PipelineProcessor", "entries", "serverStorageOptions", "_ref", "acc", "_extends2", "Initiator", "StorageResponseToArrayTransformer", "castData", "pad", "storageResponse", "PipelineUtils", "initialState", "isDispatching", "getListeners", "reducer", "prevState", "lis", "Consumer", "Provider", "createContext", "Config", "assign", "defaultConfig", "partialConfig", "fromPartialConfig", "Store", "Init", "height", "processingThrottleMs", "multiColumn", "Footer", "TD", "colSpan", "td", "messageCell", "eventEmitter", "formatter", "TR", "tr", "messageRow", "MessageRow", "TBody", "headerLength", "visibleColumns", "tbody", "Loading", "Rendered", "notfound", "NativeSort", "condition", "direction", "compare", "cellA", "cellB", "compareWrapper", "cmp", "sortedRows", "sorted", "Sort", "multi", "_state$sort", "reset", "count", "_index2", "SortToggle", "SortColumn", "ServerSort", "setDirection", "processorType", "getSortProcessor", "processors", "currentColumn", "_props$direction", "preventDefault", "stopPropagation", "shiftKey", "throttle", "fn", "wait", "timeoutId", "lastTime", "Date", "now", "execute", "currentTime", "elapsed", "Resize", "getPageX", "MouseEvent", "pageX", "changedTouches", "start", "offsetStart", "thRef", "moveFn", "move", "end", "thElement", "onMouseDown", "onTouchStart", "TH", "setStyle", "fixedHeader", "offsetTop", "top", "isSortable", "SortActions", "onKeyDown", "which", "rowSpan", "THead", "thead", "renderRow", "totalRows", "columnIndex", "calculateRowColSpans", "depth", "remainingRows", "_calculateRowColSpans", "SetHeader", "Table", "table", "HeaderContainer", "isActive", "setIsActive", "headerRef", "FooterContainer", "footerRef", "footer", "Container", "processPipeline", "Loaded", "_temp", "Grid", "instance", "_assertThisInitialized", "updateConfig", "forceRender", "destroy", "extendStatics", "d", "b", "Object", "setPrototypeOf", "__proto__", "Array", "p", "prototype", "hasOwnProperty", "call", "__extends", "TypeError", "String", "__", "this", "constructor", "create", "u", "Grid", "_super", "props", "_this", "wrapper", "createRef", "instance", "Gridjs", "o", "getInstance", "componentDidMount", "current", "childNodes", "length", "innerHTML", "render", "componentDidUpdate", "updateConfig", "forceRender", "React", "ref", "Component", "m", "require$$0", "createRoot", "hydrateRoot", "i", "__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED", "c", "usingClientEntryPoint", "ReactWrapper", "apply", "arguments", "gCreateRef", "element", "h", "parent", "defaultProps", "gComponent", "_"]
}
