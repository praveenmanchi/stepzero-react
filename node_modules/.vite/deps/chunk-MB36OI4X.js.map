{
  "version": 3,
  "sources": ["../../preact/src/util.js", "../../preact/src/options.js", "../../preact/src/create-element.js", "../../preact/src/diff/props.js", "../../preact/src/component.js", "../../preact/src/create-context.js", "../../preact/src/constants.js", "../../preact/src/diff/children.js", "../../preact/src/diff/index.js", "../../preact/src/render.js", "../../preact/src/clone-element.js", "../../preact/src/diff/catch-error.js", "../../preact/hooks/src/index.js", "../../preact/compat/src/util.js", "../../preact/compat/src/PureComponent.js", "../../preact/compat/src/memo.js", "../../preact/compat/src/forwardRef.js", "../../preact/compat/src/Children.js", "../../preact/compat/src/suspense.js", "../../preact/compat/src/suspense-list.js", "../../preact/compat/src/portals.js", "../../preact/compat/src/render.js", "../../preact/compat/src/index.js"],
  "sourcesContent": ["import { EMPTY_ARR } from \"./constants\";\n\n/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\t// @ts-ignore We change the type of `obj` to be `O & P`\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Remove a child node from its parent if attached. This is a workaround for\n * IE11 which doesn't support `Element.prototype.remove()`. Using this function\n * is smaller than including a dedicated polyfill.\n * @param {Node} node The node to remove\n */\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\nexport const slice = EMPTY_ARR.slice;\n", "import { _catchError } from './diff/catch-error';\n\n/**\n * The `option` object can potentially contain callback functions\n * that are called during various stages of our renderer. This is the\n * foundation on which all our addons like `preact/debug`, `preact/compat`,\n * and `preact/hooks` are based on. See the `Options` type in `internal.d.ts`\n * for a full list of available option hooks (most editors/IDEs allow you to\n * ctrl+click or cmd+click on mac the type definition below).\n * @type {import('./internal').Options}\n */\nconst options = {\n\t_catchError\n};\n\nexport default options;\n", "import { slice } from './util';\nimport options from './options';\n\nlet vnodeId = 0;\n\n/**\n * Create an virtual node (used for JSX)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * constructor for this virtual node\n * @param {object | null | undefined} [props] The properties of the virtual node\n * @param {Array<import('.').ComponentChildren>} [children] The children of the virtual node\n * @returns {import('./internal').VNode}\n */\nexport function createElement(type, props, children) {\n\tlet normalizedProps = {},\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\t// If a Component VNode, check for and apply defaultProps\n\t// Note: type may be undefined in development, must never error here.\n\tif (typeof type == 'function' && type.defaultProps != null) {\n\t\tfor (i in type.defaultProps) {\n\t\t\tif (normalizedProps[i] === undefined) {\n\t\t\t\tnormalizedProps[i] = type.defaultProps[i];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn createVNode(type, normalizedProps, key, ref, null);\n}\n\n/**\n * Create a VNode (used internally by Preact)\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component\n * Constructor for this virtual node\n * @param {object | string | number | null} props The properties of this virtual node.\n * If this virtual node represents a text node, this is the text of the node (string or number).\n * @param {string | number | null} key The key for this virtual node, used when\n * diffing it against its children\n * @param {import('./internal').VNode[\"ref\"]} ref The ref property that will\n * receive a reference to its created child\n * @returns {import('./internal').VNode}\n */\nexport function createVNode(type, props, key, ref, original) {\n\t// V8 seems to be better at detecting type shapes if the object is allocated from the same call site\n\t// Do not inline into createElement and coerceToVNode!\n\tconst vnode = {\n\t\ttype,\n\t\tprops,\n\t\tkey,\n\t\tref,\n\t\t_children: null,\n\t\t_parent: null,\n\t\t_depth: 0,\n\t\t_dom: null,\n\t\t// _nextDom must be initialized to undefined b/c it will eventually\n\t\t// be set to dom.nextSibling which can return `null` and it is important\n\t\t// to be able to distinguish between an uninitialized _nextDom and\n\t\t// a _nextDom that has been set to `null`\n\t\t_nextDom: undefined,\n\t\t_component: null,\n\t\t_hydrating: null,\n\t\tconstructor: undefined,\n\t\t_original: original == null ? ++vnodeId : original\n\t};\n\n\t// Only invoke the vnode hook if this was *not* a direct copy:\n\tif (original == null && options.vnode != null) options.vnode(vnode);\n\n\treturn vnode;\n}\n\nexport function createRef() {\n\treturn { current: null };\n}\n\nexport function Fragment(props) {\n\treturn props.children;\n}\n\n/**\n * Check if a the argument is a valid Preact VNode.\n * @param {*} vnode\n * @returns {vnode is import('./internal').VNode}\n */\nexport const isValidElement = vnode =>\n\tvnode != null && vnode.constructor === undefined;\n", "import { IS_NON_DIMENSIONAL } from '../constants';\nimport options from '../options';\n\n/**\n * Diff the old and new properties of a VNode and apply changes to the DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to apply\n * changes to\n * @param {object} newProps The new props\n * @param {object} oldProps The old props\n * @param {boolean} isSvg Whether or not this node is an SVG node\n * @param {boolean} hydrate Whether or not we are in hydration mode\n */\nexport function diffProps(dom, newProps, oldProps, isSvg, hydrate) {\n\tlet i;\n\n\tfor (i in oldProps) {\n\t\tif (i !== 'children' && i !== 'key' && !(i in newProps)) {\n\t\t\tsetProperty(dom, i, null, oldProps[i], isSvg);\n\t\t}\n\t}\n\n\tfor (i in newProps) {\n\t\tif (\n\t\t\t(!hydrate || typeof newProps[i] == 'function') &&\n\t\t\ti !== 'children' &&\n\t\t\ti !== 'key' &&\n\t\t\ti !== 'value' &&\n\t\t\ti !== 'checked' &&\n\t\t\toldProps[i] !== newProps[i]\n\t\t) {\n\t\t\tsetProperty(dom, i, newProps[i], oldProps[i], isSvg);\n\t\t}\n\t}\n}\n\nfunction setStyle(style, key, value) {\n\tif (key[0] === '-') {\n\t\tstyle.setProperty(key, value == null ? '' : value);\n\t} else if (value == null) {\n\t\tstyle[key] = '';\n\t} else if (typeof value != 'number' || IS_NON_DIMENSIONAL.test(key)) {\n\t\tstyle[key] = value;\n\t} else {\n\t\tstyle[key] = value + 'px';\n\t}\n}\n\n/**\n * Set a property value on a DOM node\n * @param {import('../internal').PreactElement} dom The DOM node to modify\n * @param {string} name The name of the property to set\n * @param {*} value The value to set the property to\n * @param {*} oldValue The old value the property had\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node or not\n */\nexport function setProperty(dom, name, value, oldValue, isSvg) {\n\tlet useCapture;\n\n\to: if (name === 'style') {\n\t\tif (typeof value == 'string') {\n\t\t\tdom.style.cssText = value;\n\t\t} else {\n\t\t\tif (typeof oldValue == 'string') {\n\t\t\t\tdom.style.cssText = oldValue = '';\n\t\t\t}\n\n\t\t\tif (oldValue) {\n\t\t\t\tfor (name in oldValue) {\n\t\t\t\t\tif (!(value && name in value)) {\n\t\t\t\t\t\tsetStyle(dom.style, name, '');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (value) {\n\t\t\t\tfor (name in value) {\n\t\t\t\t\tif (!oldValue || value[name] !== oldValue[name]) {\n\t\t\t\t\t\tsetStyle(dom.style, name, value[name]);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t// Benchmark for comparison: https://esbench.com/bench/574c954bdb965b9a00965ac6\n\telse if (name[0] === 'o' && name[1] === 'n') {\n\t\tuseCapture = name !== (name = name.replace(/Capture$/, ''));\n\n\t\t// Infer correct casing for DOM built-in events:\n\t\tif (name.toLowerCase() in dom) name = name.toLowerCase().slice(2);\n\t\telse name = name.slice(2);\n\n\t\tif (!dom._listeners) dom._listeners = {};\n\t\tdom._listeners[name + useCapture] = value;\n\n\t\tif (value) {\n\t\t\tif (!oldValue) {\n\t\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\t\tdom.addEventListener(name, handler, useCapture);\n\t\t\t}\n\t\t} else {\n\t\t\tconst handler = useCapture ? eventProxyCapture : eventProxy;\n\t\t\tdom.removeEventListener(name, handler, useCapture);\n\t\t}\n\t} else if (name !== 'dangerouslySetInnerHTML') {\n\t\tif (isSvg) {\n\t\t\t// Normalize incorrect prop usage for SVG:\n\t\t\t// - xlink:href / xlinkHref --> href (xlink:href was removed from SVG and isn't needed)\n\t\t\t// - className --> class\n\t\t\tname = name.replace(/xlink(H|:h)/, 'h').replace(/sName$/, 's');\n\t\t} else if (\n\t\t\tname !== 'width' &&\n\t\t\tname !== 'height' &&\n\t\t\tname !== 'href' &&\n\t\t\tname !== 'list' &&\n\t\t\tname !== 'form' &&\n\t\t\t// Default value in browsers is `-1` and an empty string is\n\t\t\t// cast to `0` instead\n\t\t\tname !== 'tabIndex' &&\n\t\t\tname !== 'download' &&\n\t\t\tname in dom\n\t\t) {\n\t\t\ttry {\n\t\t\t\tdom[name] = value == null ? '' : value;\n\t\t\t\t// labelled break is 1b smaller here than a return statement (sorry)\n\t\t\t\tbreak o;\n\t\t\t} catch (e) {}\n\t\t}\n\n\t\t// ARIA-attributes have a different notion of boolean values.\n\t\t// The value `false` is different from the attribute not\n\t\t// existing on the DOM, so we can't remove it. For non-boolean\n\t\t// ARIA-attributes we could treat false as a removal, but the\n\t\t// amount of exceptions would cost us too many bytes. On top of\n\t\t// that other VDOM frameworks also always stringify `false`.\n\n\t\tif (typeof value === 'function') {\n\t\t\t// never serialize functions as attribute values\n\t\t} else if (value != null && (value !== false || name.indexOf('-') != -1)) {\n\t\t\tdom.setAttribute(name, value);\n\t\t} else {\n\t\t\tdom.removeAttribute(name);\n\t\t}\n\t}\n}\n\nexport let inEvent = false;\n\n/**\n * Proxy an event to hooked event handlers\n * @param {Event} e The event object from the browser\n * @private\n */\nfunction eventProxy(e) {\n\tinEvent = true;\n\ttry {\n\t\treturn this._listeners[e.type + false](\n\t\t\toptions.event ? options.event(e) : e\n\t\t);\n\t} finally {\n\t\tinEvent = false;\n\t}\n}\n\nfunction eventProxyCapture(e) {\n\tinEvent = true;\n\ttry {\n\t\treturn this._listeners[e.type + true](options.event ? options.event(e) : e);\n\t} finally {\n\t\tinEvent = false;\n\t}\n}\n", "import { assign } from './util';\nimport { diff, commitRoot } from './diff/index';\nimport options from './options';\nimport { Fragment } from './create-element';\nimport { inEvent } from './diff/props';\n\n/**\n * Base Component class. Provides `setState()` and `forceUpdate()`, which\n * trigger rendering\n * @param {object} props The initial component props\n * @param {object} context The initial context from parent components'\n * getChildContext\n */\nexport function Component(props, context) {\n\tthis.props = props;\n\tthis.context = context;\n}\n\n/**\n * Update component state and schedule a re-render.\n * @this {import('./internal').Component}\n * @param {object | ((s: object, p: object) => object)} update A hash of state\n * properties to update with new values or a function that given the current\n * state and props returns a new partial state\n * @param {() => void} [callback] A function to be called once component state is\n * updated\n */\nComponent.prototype.setState = function(update, callback) {\n\t// only clone state when copying to nextState the first time.\n\tlet s;\n\tif (this._nextState != null && this._nextState !== this.state) {\n\t\ts = this._nextState;\n\t} else {\n\t\ts = this._nextState = assign({}, this.state);\n\t}\n\n\tif (typeof update == 'function') {\n\t\t// Some libraries like `immer` mark the current state as readonly,\n\t\t// preventing us from mutating it, so we need to clone it. See #2716\n\t\tupdate = update(assign({}, s), this.props);\n\t}\n\n\tif (update) {\n\t\tassign(s, update);\n\t}\n\n\t// Skip update if updater function returned null\n\tif (update == null) return;\n\n\tif (this._vnode) {\n\t\tif (callback) {\n\t\t\tthis._stateCallbacks.push(callback);\n\t\t}\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Immediately perform a synchronous re-render of the component\n * @this {import('./internal').Component}\n * @param {() => void} [callback] A function to be called after component is\n * re-rendered\n */\nComponent.prototype.forceUpdate = function(callback) {\n\tif (this._vnode) {\n\t\t// Set render mode so that we can differentiate where the render request\n\t\t// is coming from. We need this because forceUpdate should never call\n\t\t// shouldComponentUpdate\n\t\tthis._force = true;\n\t\tif (callback) this._renderCallbacks.push(callback);\n\t\tenqueueRender(this);\n\t}\n};\n\n/**\n * Accepts `props` and `state`, and returns a new Virtual DOM tree to build.\n * Virtual DOM is generally constructed via [JSX](http://jasonformat.com/wtf-is-jsx).\n * @param {object} props Props (eg: JSX attributes) received from parent\n * element/component\n * @param {object} state The component's current state\n * @param {object} context Context object, as returned by the nearest\n * ancestor's `getChildContext()`\n * @returns {import('./index').ComponentChildren | void}\n */\nComponent.prototype.render = Fragment;\n\n/**\n * @param {import('./internal').VNode} vnode\n * @param {number | null} [childIndex]\n */\nexport function getDomSibling(vnode, childIndex) {\n\tif (childIndex == null) {\n\t\t// Use childIndex==null as a signal to resume the search from the vnode's sibling\n\t\treturn vnode._parent\n\t\t\t? getDomSibling(vnode._parent, vnode._parent._children.indexOf(vnode) + 1)\n\t\t\t: null;\n\t}\n\n\tlet sibling;\n\tfor (; childIndex < vnode._children.length; childIndex++) {\n\t\tsibling = vnode._children[childIndex];\n\n\t\tif (sibling != null && sibling._dom != null) {\n\t\t\t// Since updateParentDomPointers keeps _dom pointer correct,\n\t\t\t// we can rely on _dom to tell us if this subtree contains a\n\t\t\t// rendered DOM node, and what the first rendered DOM node is\n\t\t\treturn sibling._dom;\n\t\t}\n\t}\n\n\t// If we get here, we have not found a DOM node in this vnode's children.\n\t// We must resume from this vnode's sibling (in it's parent _children array)\n\t// Only climb up and search the parent if we aren't searching through a DOM\n\t// VNode (meaning we reached the DOM parent of the original vnode that began\n\t// the search)\n\treturn typeof vnode.type == 'function' ? getDomSibling(vnode) : null;\n}\n\n/**\n * Trigger in-place re-rendering of a component.\n * @param {import('./internal').Component} component The component to rerender\n */\nfunction renderComponent(component) {\n\tlet vnode = component._vnode,\n\t\toldDom = vnode._dom,\n\t\tparentDom = component._parentDom;\n\n\tif (parentDom) {\n\t\tlet commitQueue = [];\n\t\tconst oldVNode = assign({}, vnode);\n\t\toldVNode._original = vnode._original + 1;\n\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tvnode,\n\t\t\toldVNode,\n\t\t\tcomponent._globalContext,\n\t\t\tparentDom.ownerSVGElement !== undefined,\n\t\t\tvnode._hydrating != null ? [oldDom] : null,\n\t\t\tcommitQueue,\n\t\t\toldDom == null ? getDomSibling(vnode) : oldDom,\n\t\t\tvnode._hydrating\n\t\t);\n\t\tcommitRoot(commitQueue, vnode);\n\n\t\tif (vnode._dom != oldDom) {\n\t\t\tupdateParentDomPointers(vnode);\n\t\t}\n\t}\n}\n\n/**\n * @param {import('./internal').VNode} vnode\n */\nfunction updateParentDomPointers(vnode) {\n\tif ((vnode = vnode._parent) != null && vnode._component != null) {\n\t\tvnode._dom = vnode._component.base = null;\n\t\tfor (let i = 0; i < vnode._children.length; i++) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child != null && child._dom != null) {\n\t\t\t\tvnode._dom = vnode._component.base = child._dom;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn updateParentDomPointers(vnode);\n\t}\n}\n\n/**\n * The render queue\n * @type {Array<import('./internal').Component>}\n */\nlet rerenderQueue = [];\n\n/*\n * The value of `Component.debounce` must asynchronously invoke the passed in callback. It is\n * important that contributors to Preact can consistently reason about what calls to `setState`, etc.\n * do, and when their effects will be applied. See the links below for some further reading on designing\n * asynchronous APIs.\n * * [Designing APIs for Asynchrony](https://blog.izs.me/2013/08/designing-apis-for-asynchrony)\n * * [Callbacks synchronous and asynchronous](https://blog.ometer.com/2011/07/24/callbacks-synchronous-and-asynchronous/)\n */\n\nlet prevDebounce;\n\nconst microTick =\n\ttypeof Promise == 'function'\n\t\t? Promise.prototype.then.bind(Promise.resolve())\n\t\t: setTimeout;\nfunction defer(cb) {\n\tif (inEvent) {\n\t\tsetTimeout(cb);\n\t} else {\n\t\tmicroTick(cb);\n\t}\n}\n\n/**\n * Enqueue a rerender of a component\n * @param {import('./internal').Component} c The component to rerender\n */\nexport function enqueueRender(c) {\n\tif (\n\t\t(!c._dirty &&\n\t\t\t(c._dirty = true) &&\n\t\t\trerenderQueue.push(c) &&\n\t\t\t!process._rerenderCount++) ||\n\t\tprevDebounce !== options.debounceRendering\n\t) {\n\t\tprevDebounce = options.debounceRendering;\n\t\t(prevDebounce || defer)(process);\n\t}\n}\n\n/** Flush the render queue by rerendering all queued components */\nfunction process() {\n\tlet c;\n\trerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t// Don't update `renderCount` yet. Keep its value non-zero to prevent unnecessary\n\t// process() calls from getting scheduled while `queue` is still being consumed.\n\twhile ((c = rerenderQueue.shift())) {\n\t\tif (c._dirty) {\n\t\t\tlet renderQueueLength = rerenderQueue.length;\n\t\t\trenderComponent(c);\n\t\t\tif (rerenderQueue.length > renderQueueLength) {\n\t\t\t\t// When i.e. rerendering a provider additional new items can be injected, we want to\n\t\t\t\t// keep the order from top to bottom with those new items so we can handle them in a\n\t\t\t\t// single pass\n\t\t\t\trerenderQueue.sort((a, b) => a._vnode._depth - b._vnode._depth);\n\t\t\t}\n\t\t}\n\t}\n\tprocess._rerenderCount = 0;\n}\n\nprocess._rerenderCount = 0;\n", "import { enqueueRender } from './component';\n\nexport let i = 0;\n\nexport function createContext(defaultValue, contextId) {\n\tcontextId = '__cC' + i++;\n\n\tconst context = {\n\t\t_id: contextId,\n\t\t_defaultValue: defaultValue,\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tConsumer(props, contextValue) {\n\t\t\t// return props.children(\n\t\t\t// \tcontext[contextId] ? context[contextId].props.value : defaultValue\n\t\t\t// );\n\t\t\treturn props.children(contextValue);\n\t\t},\n\t\t/** @type {import('./internal').FunctionComponent} */\n\t\tProvider(props) {\n\t\t\tif (!this.getChildContext) {\n\t\t\t\t/** @type {import('./internal').Component[]} */\n\t\t\t\tlet subs = [];\n\t\t\t\tlet ctx = {};\n\t\t\t\tctx[contextId] = this;\n\n\t\t\t\tthis.getChildContext = () => ctx;\n\n\t\t\t\tthis.shouldComponentUpdate = function(_props) {\n\t\t\t\t\tif (this.props.value !== _props.value) {\n\t\t\t\t\t\t// I think the forced value propagation here was only needed when `options.debounceRendering` was being bypassed:\n\t\t\t\t\t\t// https://github.com/preactjs/preact/commit/4d339fb803bea09e9f198abf38ca1bf8ea4b7771#diff-54682ce380935a717e41b8bfc54737f6R358\n\t\t\t\t\t\t// In those cases though, even with the value corrected, we're double-rendering all nodes.\n\t\t\t\t\t\t// It might be better to just tell folks not to use force-sync mode.\n\t\t\t\t\t\t// Currently, using `useContext()` in a class component will overwrite its `this.context` value.\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\n\t\t\t\t\t\t// subs.some(c => {\n\t\t\t\t\t\t// \tc.context[contextId] = _props.value;\n\t\t\t\t\t\t// \tenqueueRender(c);\n\t\t\t\t\t\t// });\n\t\t\t\t\t\tsubs.some(c => {\n\t\t\t\t\t\t\tc._force = true;\n\t\t\t\t\t\t\tenqueueRender(c);\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\tthis.sub = c => {\n\t\t\t\t\tsubs.push(c);\n\t\t\t\t\tlet old = c.componentWillUnmount;\n\t\t\t\t\tc.componentWillUnmount = () => {\n\t\t\t\t\t\tsubs.splice(subs.indexOf(c), 1);\n\t\t\t\t\t\tif (old) old.call(c);\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn props.children;\n\t\t}\n\t};\n\n\t// Devtools needs access to the context object when it\n\t// encounters a Provider. This is necessary to support\n\t// setting `displayName` on the context object instead\n\t// of on the component itself. See:\n\t// https://reactjs.org/docs/context.html#contextdisplayname\n\n\treturn (context.Provider._contextRef = context.Consumer.contextType = context);\n}\n", "export const EMPTY_OBJ = {};\nexport const EMPTY_ARR = [];\nexport const IS_NON_DIMENSIONAL = /acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i;\n", "import { diff, unmount, applyRef } from './index';\nimport { createVNode, Fragment } from '../create-element';\nimport { EMPTY_OBJ, EMPTY_ARR } from '../constants';\nimport { getDomSibling } from '../component';\n\n/**\n * Diff the children of a virtual node\n * @param {import('../internal').PreactElement} parentDom The DOM element whose\n * children are being diffed\n * @param {import('../internal').ComponentChildren[]} renderResult\n * @param {import('../internal').VNode} newParentVNode The new virtual\n * node whose children should be diff'ed against oldParentVNode\n * @param {import('../internal').VNode} oldParentVNode The old virtual\n * node whose children should be diff'ed against newParentVNode\n * @param {object} globalContext The current context object - modified by getChildContext\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} isHydrating Whether or not we are in hydration\n */\nexport function diffChildren(\n\tparentDom,\n\trenderResult,\n\tnewParentVNode,\n\toldParentVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet i, j, oldVNode, childVNode, newDom, firstChildDom, refs;\n\n\t// This is a compression of oldParentVNode!=null && oldParentVNode != EMPTY_OBJ && oldParentVNode._children || EMPTY_ARR\n\t// as EMPTY_OBJ._children should be `undefined`.\n\tlet oldChildren = (oldParentVNode && oldParentVNode._children) || EMPTY_ARR;\n\n\tlet oldChildrenLength = oldChildren.length;\n\n\tnewParentVNode._children = [];\n\tfor (i = 0; i < renderResult.length; i++) {\n\t\tchildVNode = renderResult[i];\n\n\t\tif (childVNode == null || typeof childVNode == 'boolean') {\n\t\t\tchildVNode = newParentVNode._children[i] = null;\n\t\t}\n\t\t// If this newVNode is being reused (e.g. <div>{reuse}{reuse}</div>) in the same diff,\n\t\t// or we are rendering a component (e.g. setState) copy the oldVNodes so it can have\n\t\t// it's own DOM & etc. pointers\n\t\telse if (\n\t\t\ttypeof childVNode == 'string' ||\n\t\t\ttypeof childVNode == 'number' ||\n\t\t\t// eslint-disable-next-line valid-typeof\n\t\t\ttypeof childVNode == 'bigint'\n\t\t) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tnull,\n\t\t\t\tchildVNode,\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tchildVNode\n\t\t\t);\n\t\t} else if (Array.isArray(childVNode)) {\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tFragment,\n\t\t\t\t{ children: childVNode },\n\t\t\t\tnull,\n\t\t\t\tnull,\n\t\t\t\tnull\n\t\t\t);\n\t\t} else if (childVNode._depth > 0) {\n\t\t\t// VNode is already in use, clone it. This can happen in the following\n\t\t\t// scenario:\n\t\t\t//   const reuse = <div />\n\t\t\t//   <div>{reuse}<span />{reuse}</div>\n\t\t\tchildVNode = newParentVNode._children[i] = createVNode(\n\t\t\t\tchildVNode.type,\n\t\t\t\tchildVNode.props,\n\t\t\t\tchildVNode.key,\n\t\t\t\tchildVNode.ref ? childVNode.ref : null,\n\t\t\t\tchildVNode._original\n\t\t\t);\n\t\t} else {\n\t\t\tchildVNode = newParentVNode._children[i] = childVNode;\n\t\t}\n\n\t\t// Terser removes the `continue` here and wraps the loop body\n\t\t// in a `if (childVNode) { ... } condition\n\t\tif (childVNode == null) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tchildVNode._parent = newParentVNode;\n\t\tchildVNode._depth = newParentVNode._depth + 1;\n\n\t\t// Check if we find a corresponding element in oldChildren.\n\t\t// If found, delete the array item by setting to `undefined`.\n\t\t// We use `undefined`, as `null` is reserved for empty placeholders\n\t\t// (holes).\n\t\toldVNode = oldChildren[i];\n\n\t\tif (\n\t\t\toldVNode === null ||\n\t\t\t(oldVNode &&\n\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\tchildVNode.type === oldVNode.type)\n\t\t) {\n\t\t\toldChildren[i] = undefined;\n\t\t} else {\n\t\t\t// Either oldVNode === undefined or oldChildrenLength > 0,\n\t\t\t// so after this loop oldVNode == null or oldVNode is a valid value.\n\t\t\tfor (j = 0; j < oldChildrenLength; j++) {\n\t\t\t\toldVNode = oldChildren[j];\n\t\t\t\t// If childVNode is unkeyed, we only match similarly unkeyed nodes, otherwise we match by key.\n\t\t\t\t// We always match by type (in either case).\n\t\t\t\tif (\n\t\t\t\t\toldVNode &&\n\t\t\t\t\tchildVNode.key == oldVNode.key &&\n\t\t\t\t\tchildVNode.type === oldVNode.type\n\t\t\t\t) {\n\t\t\t\t\toldChildren[j] = undefined;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\toldVNode = null;\n\t\t\t}\n\t\t}\n\n\t\toldVNode = oldVNode || EMPTY_OBJ;\n\n\t\t// Morph the old element into the new one, but don't append it to the dom yet\n\t\tdiff(\n\t\t\tparentDom,\n\t\t\tchildVNode,\n\t\t\toldVNode,\n\t\t\tglobalContext,\n\t\t\tisSvg,\n\t\t\texcessDomChildren,\n\t\t\tcommitQueue,\n\t\t\toldDom,\n\t\t\tisHydrating\n\t\t);\n\n\t\tnewDom = childVNode._dom;\n\n\t\tif ((j = childVNode.ref) && oldVNode.ref != j) {\n\t\t\tif (!refs) refs = [];\n\t\t\tif (oldVNode.ref) refs.push(oldVNode.ref, null, childVNode);\n\t\t\trefs.push(j, childVNode._component || newDom, childVNode);\n\t\t}\n\n\t\tif (newDom != null) {\n\t\t\tif (firstChildDom == null) {\n\t\t\t\tfirstChildDom = newDom;\n\t\t\t}\n\n\t\t\tif (\n\t\t\t\ttypeof childVNode.type == 'function' &&\n\t\t\t\tchildVNode._children === oldVNode._children\n\t\t\t) {\n\t\t\t\tchildVNode._nextDom = oldDom = reorderChildren(\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldDom,\n\t\t\t\t\tparentDom\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(\n\t\t\t\t\tparentDom,\n\t\t\t\t\tchildVNode,\n\t\t\t\t\toldVNode,\n\t\t\t\t\toldChildren,\n\t\t\t\t\tnewDom,\n\t\t\t\t\toldDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tif (typeof newParentVNode.type == 'function') {\n\t\t\t\t// Because the newParentVNode is Fragment-like, we need to set it's\n\t\t\t\t// _nextDom property to the nextSibling of its last child DOM node.\n\t\t\t\t//\n\t\t\t\t// `oldDom` contains the correct value here because if the last child\n\t\t\t\t// is a Fragment-like, then oldDom has already been set to that child's _nextDom.\n\t\t\t\t// If the last child is a DOM VNode, then oldDom will be set to that DOM\n\t\t\t\t// node's nextSibling.\n\t\t\t\tnewParentVNode._nextDom = oldDom;\n\t\t\t}\n\t\t} else if (\n\t\t\toldDom &&\n\t\t\toldVNode._dom == oldDom &&\n\t\t\toldDom.parentNode != parentDom\n\t\t) {\n\t\t\t// The above condition is to handle null placeholders. See test in placeholder.test.js:\n\t\t\t// `efficiently replace null placeholders in parent rerenders`\n\t\t\toldDom = getDomSibling(oldVNode);\n\t\t}\n\t}\n\n\tnewParentVNode._dom = firstChildDom;\n\n\t// Remove remaining oldChildren if there are any.\n\tfor (i = oldChildrenLength; i--; ) {\n\t\tif (oldChildren[i] != null) {\n\t\t\tif (\n\t\t\t\ttypeof newParentVNode.type == 'function' &&\n\t\t\t\toldChildren[i]._dom != null &&\n\t\t\t\toldChildren[i]._dom == newParentVNode._nextDom\n\t\t\t) {\n\t\t\t\t// If the newParentVNode.__nextDom points to a dom node that is about to\n\t\t\t\t// be unmounted, then get the next sibling of that vnode and set\n\t\t\t\t// _nextDom to it\n\t\t\t\tnewParentVNode._nextDom = getLastDom(oldParentVNode).nextSibling;\n\t\t\t}\n\n\t\t\tunmount(oldChildren[i], oldChildren[i]);\n\t\t}\n\t}\n\n\t// Set refs only after unmount\n\tif (refs) {\n\t\tfor (i = 0; i < refs.length; i++) {\n\t\t\tapplyRef(refs[i], refs[++i], refs[++i]);\n\t\t}\n\t}\n}\n\nfunction reorderChildren(childVNode, oldDom, parentDom) {\n\t// Note: VNodes in nested suspended trees may be missing _children.\n\tlet c = childVNode._children;\n\tlet tmp = 0;\n\tfor (; c && tmp < c.length; tmp++) {\n\t\tlet vnode = c[tmp];\n\t\tif (vnode) {\n\t\t\t// We typically enter this code path on sCU bailout, where we copy\n\t\t\t// oldVNode._children to newVNode._children. If that is the case, we need\n\t\t\t// to update the old children's _parent pointer to point to the newVNode\n\t\t\t// (childVNode here).\n\t\t\tvnode._parent = childVNode;\n\n\t\t\tif (typeof vnode.type == 'function') {\n\t\t\t\toldDom = reorderChildren(vnode, oldDom, parentDom);\n\t\t\t} else {\n\t\t\t\toldDom = placeChild(parentDom, vnode, vnode, c, vnode._dom, oldDom);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * Flatten and loop through the children of a virtual node\n * @param {import('../index').ComponentChildren} children The unflattened\n * children of a virtual node\n * @returns {import('../internal').VNode[]}\n */\nexport function toChildArray(children, out) {\n\tout = out || [];\n\tif (children == null || typeof children == 'boolean') {\n\t} else if (Array.isArray(children)) {\n\t\tchildren.some(child => {\n\t\t\ttoChildArray(child, out);\n\t\t});\n\t} else {\n\t\tout.push(children);\n\t}\n\treturn out;\n}\n\nfunction placeChild(\n\tparentDom,\n\tchildVNode,\n\toldVNode,\n\toldChildren,\n\tnewDom,\n\toldDom\n) {\n\tlet nextDom;\n\tif (childVNode._nextDom !== undefined) {\n\t\t// Only Fragments or components that return Fragment like VNodes will\n\t\t// have a non-undefined _nextDom. Continue the diff from the sibling\n\t\t// of last DOM child of this child VNode\n\t\tnextDom = childVNode._nextDom;\n\n\t\t// Eagerly cleanup _nextDom. We don't need to persist the value because\n\t\t// it is only used by `diffChildren` to determine where to resume the diff after\n\t\t// diffing Components and Fragments. Once we store it the nextDOM local var, we\n\t\t// can clean up the property\n\t\tchildVNode._nextDom = undefined;\n\t} else if (\n\t\toldVNode == null ||\n\t\tnewDom != oldDom ||\n\t\tnewDom.parentNode == null\n\t) {\n\t\touter: if (oldDom == null || oldDom.parentNode !== parentDom) {\n\t\t\tparentDom.appendChild(newDom);\n\t\t\tnextDom = null;\n\t\t} else {\n\t\t\t// `j<oldChildrenLength; j+=2` is an alternative to `j++<oldChildrenLength/2`\n\t\t\tfor (\n\t\t\t\tlet sibDom = oldDom, j = 0;\n\t\t\t\t(sibDom = sibDom.nextSibling) && j < oldChildren.length;\n\t\t\t\tj += 1\n\t\t\t) {\n\t\t\t\tif (sibDom == newDom) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparentDom.insertBefore(newDom, oldDom);\n\t\t\tnextDom = oldDom;\n\t\t}\n\t}\n\n\t// If we have pre-calculated the nextDOM node, use it. Else calculate it now\n\t// Strictly check for `undefined` here cuz `null` is a valid value of `nextDom`.\n\t// See more detail in create-element.js:createVNode\n\tif (nextDom !== undefined) {\n\t\toldDom = nextDom;\n\t} else {\n\t\toldDom = newDom.nextSibling;\n\t}\n\n\treturn oldDom;\n}\n\n/**\n * @param {import('../internal').VNode} vnode\n */\nfunction getLastDom(vnode) {\n\tif (vnode.type == null || typeof vnode.type === 'string') {\n\t\treturn vnode._dom;\n\t}\n\n\tif (vnode._children) {\n\t\tfor (let i = vnode._children.length - 1; i >= 0; i--) {\n\t\t\tlet child = vnode._children[i];\n\t\t\tif (child) {\n\t\t\t\tlet lastDom = getLastDom(child);\n\t\t\t\tif (lastDom) {\n\t\t\t\t\treturn lastDom;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn null;\n}\n", "import { EMPTY_OBJ } from '../constants';\nimport { Component, getDomSibling } from '../component';\nimport { Fragment } from '../create-element';\nimport { diffChildren } from './children';\nimport { diffProps, setProperty } from './props';\nimport { assign, removeNode, slice } from '../util';\nimport options from '../options';\n\n/**\n * Diff two virtual nodes and apply proper changes to the DOM\n * @param {import('../internal').PreactElement} parentDom The parent of the DOM element\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object. Modified by getChildContext\n * @param {boolean} isSvg Whether or not this element is an SVG node\n * @param {Array<import('../internal').PreactElement>} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').PreactElement} oldDom The current attached DOM\n * element any new dom elements should be placed around. Likely `null` on first\n * render (except when hydrating). Can be a sibling DOM element when diffing\n * Fragments that have siblings. In most cases, it starts out as `oldChildren[0]._dom`.\n * @param {boolean} [isHydrating] Whether or not we are in hydration\n */\nexport function diff(\n\tparentDom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\toldDom,\n\tisHydrating\n) {\n\tlet tmp,\n\t\tnewType = newVNode.type;\n\n\t// When passing through createElement it assigns the object\n\t// constructor as undefined. This to prevent JSON-injection.\n\tif (newVNode.constructor !== undefined) return null;\n\n\t// If the previous diff bailed out, resume creating/hydrating.\n\tif (oldVNode._hydrating != null) {\n\t\tisHydrating = oldVNode._hydrating;\n\t\toldDom = newVNode._dom = oldVNode._dom;\n\t\t// if we resume, we want the tree to be \"unlocked\"\n\t\tnewVNode._hydrating = null;\n\t\texcessDomChildren = [oldDom];\n\t}\n\n\tif ((tmp = options._diff)) tmp(newVNode);\n\n\ttry {\n\t\touter: if (typeof newType == 'function') {\n\t\t\tlet c, isNew, oldProps, oldState, snapshot, clearProcessingException;\n\t\t\tlet newProps = newVNode.props;\n\n\t\t\t// Necessary for createContext api. Setting this property will pass\n\t\t\t// the context value as `this.context` just for this component.\n\t\t\ttmp = newType.contextType;\n\t\t\tlet provider = tmp && globalContext[tmp._id];\n\t\t\tlet componentContext = tmp\n\t\t\t\t? provider\n\t\t\t\t\t? provider.props.value\n\t\t\t\t\t: tmp._defaultValue\n\t\t\t\t: globalContext;\n\n\t\t\t// Get component and set it to `c`\n\t\t\tif (oldVNode._component) {\n\t\t\t\tc = newVNode._component = oldVNode._component;\n\t\t\t\tclearProcessingException = c._processingException = c._pendingError;\n\t\t\t} else {\n\t\t\t\t// Instantiate the new component\n\t\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\t\t// @ts-ignore The check above verifies that newType is suppose to be constructed\n\t\t\t\t\tnewVNode._component = c = new newType(newProps, componentContext); // eslint-disable-line new-cap\n\t\t\t\t} else {\n\t\t\t\t\t// @ts-ignore Trust me, Component implements the interface we want\n\t\t\t\t\tnewVNode._component = c = new Component(newProps, componentContext);\n\t\t\t\t\tc.constructor = newType;\n\t\t\t\t\tc.render = doRender;\n\t\t\t\t}\n\t\t\t\tif (provider) provider.sub(c);\n\n\t\t\t\tc.props = newProps;\n\t\t\t\tif (!c.state) c.state = {};\n\t\t\t\tc.context = componentContext;\n\t\t\t\tc._globalContext = globalContext;\n\t\t\t\tisNew = c._dirty = true;\n\t\t\t\tc._renderCallbacks = [];\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t}\n\n\t\t\t// Invoke getDerivedStateFromProps\n\t\t\tif (c._nextState == null) {\n\t\t\t\tc._nextState = c.state;\n\t\t\t}\n\n\t\t\tif (newType.getDerivedStateFromProps != null) {\n\t\t\t\tif (c._nextState == c.state) {\n\t\t\t\t\tc._nextState = assign({}, c._nextState);\n\t\t\t\t}\n\n\t\t\t\tassign(\n\t\t\t\t\tc._nextState,\n\t\t\t\t\tnewType.getDerivedStateFromProps(newProps, c._nextState)\n\t\t\t\t);\n\t\t\t}\n\n\t\t\toldProps = c.props;\n\t\t\toldState = c.state;\n\t\t\tc._vnode = newVNode;\n\n\t\t\t// Invoke pre-render lifecycle methods\n\t\t\tif (isNew) {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tc.componentWillMount != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillMount();\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidMount != null) {\n\t\t\t\t\tc._renderCallbacks.push(c.componentDidMount);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (\n\t\t\t\t\tnewType.getDerivedStateFromProps == null &&\n\t\t\t\t\tnewProps !== oldProps &&\n\t\t\t\t\tc.componentWillReceiveProps != null\n\t\t\t\t) {\n\t\t\t\t\tc.componentWillReceiveProps(newProps, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (\n\t\t\t\t\t(!c._force &&\n\t\t\t\t\t\tc.shouldComponentUpdate != null &&\n\t\t\t\t\t\tc.shouldComponentUpdate(\n\t\t\t\t\t\t\tnewProps,\n\t\t\t\t\t\t\tc._nextState,\n\t\t\t\t\t\t\tcomponentContext\n\t\t\t\t\t\t) === false) ||\n\t\t\t\t\tnewVNode._original === oldVNode._original\n\t\t\t\t) {\n\t\t\t\t\t// More info about this here: https://gist.github.com/JoviDeCroock/bec5f2ce93544d2e6070ef8e0036e4e8\n\t\t\t\t\tif (newVNode._original !== oldVNode._original) {\n\t\t\t\t\t\t// When we are dealing with a bail because of sCU we have to update\n\t\t\t\t\t\t// the props, state and dirty-state.\n\t\t\t\t\t\t// when we are dealing with strict-equality we don't as the child could still\n\t\t\t\t\t\t// be dirtied see #3883\n\t\t\t\t\t\tc.props = newProps;\n\t\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t\t\tc._dirty = false;\n\t\t\t\t\t}\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t\tnewVNode._children.forEach(vnode => {\n\t\t\t\t\t\tif (vnode) vnode._parent = newVNode;\n\t\t\t\t\t});\n\n\t\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t\t}\n\t\t\t\t\tc._stateCallbacks = [];\n\n\t\t\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\t\t\tcommitQueue.push(c);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\n\t\t\t\tif (c.componentWillUpdate != null) {\n\t\t\t\t\tc.componentWillUpdate(newProps, c._nextState, componentContext);\n\t\t\t\t}\n\n\t\t\t\tif (c.componentDidUpdate != null) {\n\t\t\t\t\tc._renderCallbacks.push(() => {\n\t\t\t\t\t\tc.componentDidUpdate(oldProps, oldState, snapshot);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tc.context = componentContext;\n\t\t\tc.props = newProps;\n\t\t\tc._parentDom = parentDom;\n\n\t\t\tlet renderHook = options._render,\n\t\t\t\tcount = 0;\n\t\t\tif ('prototype' in newType && newType.prototype.render) {\n\t\t\t\tc.state = c._nextState;\n\t\t\t\tc._dirty = false;\n\n\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\tfor (let i = 0; i < c._stateCallbacks.length; i++) {\n\t\t\t\t\tc._renderCallbacks.push(c._stateCallbacks[i]);\n\t\t\t\t}\n\t\t\t\tc._stateCallbacks = [];\n\t\t\t} else {\n\t\t\t\tdo {\n\t\t\t\t\tc._dirty = false;\n\t\t\t\t\tif (renderHook) renderHook(newVNode);\n\n\t\t\t\t\ttmp = c.render(c.props, c.state, c.context);\n\n\t\t\t\t\t// Handle setState called in render, see #2553\n\t\t\t\t\tc.state = c._nextState;\n\t\t\t\t} while (c._dirty && ++count < 25);\n\t\t\t}\n\n\t\t\t// Handle setState called in render, see #2553\n\t\t\tc.state = c._nextState;\n\n\t\t\tif (c.getChildContext != null) {\n\t\t\t\tglobalContext = assign(assign({}, globalContext), c.getChildContext());\n\t\t\t}\n\n\t\t\tif (!isNew && c.getSnapshotBeforeUpdate != null) {\n\t\t\t\tsnapshot = c.getSnapshotBeforeUpdate(oldProps, oldState);\n\t\t\t}\n\n\t\t\tlet isTopLevelFragment =\n\t\t\t\ttmp != null && tmp.type === Fragment && tmp.key == null;\n\t\t\tlet renderResult = isTopLevelFragment ? tmp.props.children : tmp;\n\n\t\t\tdiffChildren(\n\t\t\t\tparentDom,\n\t\t\t\tArray.isArray(renderResult) ? renderResult : [renderResult],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\toldDom,\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\tc.base = newVNode._dom;\n\n\t\t\t// We successfully rendered this VNode, unset any stored hydration/bailout state:\n\t\t\tnewVNode._hydrating = null;\n\n\t\t\tif (c._renderCallbacks.length) {\n\t\t\t\tcommitQueue.push(c);\n\t\t\t}\n\n\t\t\tif (clearProcessingException) {\n\t\t\t\tc._pendingError = c._processingException = null;\n\t\t\t}\n\n\t\t\tc._force = false;\n\t\t} else if (\n\t\t\texcessDomChildren == null &&\n\t\t\tnewVNode._original === oldVNode._original\n\t\t) {\n\t\t\tnewVNode._children = oldVNode._children;\n\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t} else {\n\t\t\tnewVNode._dom = diffElementNodes(\n\t\t\t\toldVNode._dom,\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg,\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\tisHydrating\n\t\t\t);\n\t\t}\n\n\t\tif ((tmp = options.diffed)) tmp(newVNode);\n\t} catch (e) {\n\t\tnewVNode._original = null;\n\t\t// if hydrating or creating initial tree, bailout preserves DOM:\n\t\tif (isHydrating || excessDomChildren != null) {\n\t\t\tnewVNode._dom = oldDom;\n\t\t\tnewVNode._hydrating = !!isHydrating;\n\t\t\texcessDomChildren[excessDomChildren.indexOf(oldDom)] = null;\n\t\t\t// ^ could possibly be simplified to:\n\t\t\t// excessDomChildren.length = 0;\n\t\t}\n\t\toptions._catchError(e, newVNode, oldVNode);\n\t}\n}\n\n/**\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {import('../internal').VNode} root\n */\nexport function commitRoot(commitQueue, root) {\n\tif (options._commit) options._commit(root, commitQueue);\n\n\tcommitQueue.some(c => {\n\t\ttry {\n\t\t\t// @ts-ignore Reuse the commitQueue variable here so the type changes\n\t\t\tcommitQueue = c._renderCallbacks;\n\t\t\tc._renderCallbacks = [];\n\t\t\tcommitQueue.some(cb => {\n\t\t\t\t// @ts-ignore See above ts-ignore on commitQueue\n\t\t\t\tcb.call(c);\n\t\t\t});\n\t\t} catch (e) {\n\t\t\toptions._catchError(e, c._vnode);\n\t\t}\n\t});\n}\n\n/**\n * Diff two virtual nodes representing DOM element\n * @param {import('../internal').PreactElement} dom The DOM element representing\n * the virtual nodes being diffed\n * @param {import('../internal').VNode} newVNode The new virtual node\n * @param {import('../internal').VNode} oldVNode The old virtual node\n * @param {object} globalContext The current context object\n * @param {boolean} isSvg Whether or not this DOM node is an SVG node\n * @param {*} excessDomChildren\n * @param {Array<import('../internal').Component>} commitQueue List of components\n * which have callbacks to invoke in commitRoot\n * @param {boolean} isHydrating Whether or not we are in hydration\n * @returns {import('../internal').PreactElement}\n */\nfunction diffElementNodes(\n\tdom,\n\tnewVNode,\n\toldVNode,\n\tglobalContext,\n\tisSvg,\n\texcessDomChildren,\n\tcommitQueue,\n\tisHydrating\n) {\n\tlet oldProps = oldVNode.props;\n\tlet newProps = newVNode.props;\n\tlet nodeType = newVNode.type;\n\tlet i = 0;\n\n\t// Tracks entering and exiting SVG namespace when descending through the tree.\n\tif (nodeType === 'svg') isSvg = true;\n\n\tif (excessDomChildren != null) {\n\t\tfor (; i < excessDomChildren.length; i++) {\n\t\t\tconst child = excessDomChildren[i];\n\n\t\t\t// if newVNode matches an element in excessDomChildren or the `dom`\n\t\t\t// argument matches an element in excessDomChildren, remove it from\n\t\t\t// excessDomChildren so it isn't later removed in diffChildren\n\t\t\tif (\n\t\t\t\tchild &&\n\t\t\t\t'setAttribute' in child === !!nodeType &&\n\t\t\t\t(nodeType ? child.localName === nodeType : child.nodeType === 3)\n\t\t\t) {\n\t\t\t\tdom = child;\n\t\t\t\texcessDomChildren[i] = null;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tif (dom == null) {\n\t\tif (nodeType === null) {\n\t\t\t// @ts-ignore createTextNode returns Text, we expect PreactElement\n\t\t\treturn document.createTextNode(newProps);\n\t\t}\n\n\t\tif (isSvg) {\n\t\t\tdom = document.createElementNS(\n\t\t\t\t'http://www.w3.org/2000/svg',\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType\n\t\t\t);\n\t\t} else {\n\t\t\tdom = document.createElement(\n\t\t\t\t// @ts-ignore We know `newVNode.type` is a string\n\t\t\t\tnodeType,\n\t\t\t\tnewProps.is && newProps\n\t\t\t);\n\t\t}\n\n\t\t// we created a new parent, so none of the previously attached children can be reused:\n\t\texcessDomChildren = null;\n\t\t// we are creating a new node, so we can assume this is a new subtree (in case we are hydrating), this deopts the hydrate\n\t\tisHydrating = false;\n\t}\n\n\tif (nodeType === null) {\n\t\t// During hydration, we still have to split merged text from SSR'd HTML.\n\t\tif (oldProps !== newProps && (!isHydrating || dom.data !== newProps)) {\n\t\t\tdom.data = newProps;\n\t\t}\n\t} else {\n\t\t// If excessDomChildren was not null, repopulate it with the current element's children:\n\t\texcessDomChildren = excessDomChildren && slice.call(dom.childNodes);\n\n\t\toldProps = oldVNode.props || EMPTY_OBJ;\n\n\t\tlet oldHtml = oldProps.dangerouslySetInnerHTML;\n\t\tlet newHtml = newProps.dangerouslySetInnerHTML;\n\n\t\t// During hydration, props are not diffed at all (including dangerouslySetInnerHTML)\n\t\t// @TODO we should warn in debug mode when props don't match here.\n\t\tif (!isHydrating) {\n\t\t\t// But, if we are in a situation where we are using existing DOM (e.g. replaceNode)\n\t\t\t// we should read the existing DOM attributes to diff them\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\toldProps = {};\n\t\t\t\tfor (i = 0; i < dom.attributes.length; i++) {\n\t\t\t\t\toldProps[dom.attributes[i].name] = dom.attributes[i].value;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (newHtml || oldHtml) {\n\t\t\t\t// Avoid re-applying the same '__html' if it did not changed between re-render\n\t\t\t\tif (\n\t\t\t\t\t!newHtml ||\n\t\t\t\t\t((!oldHtml || newHtml.__html != oldHtml.__html) &&\n\t\t\t\t\t\tnewHtml.__html !== dom.innerHTML)\n\t\t\t\t) {\n\t\t\t\t\tdom.innerHTML = (newHtml && newHtml.__html) || '';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdiffProps(dom, newProps, oldProps, isSvg, isHydrating);\n\n\t\t// If the new vnode didn't have dangerouslySetInnerHTML, diff its children\n\t\tif (newHtml) {\n\t\t\tnewVNode._children = [];\n\t\t} else {\n\t\t\ti = newVNode.props.children;\n\t\t\tdiffChildren(\n\t\t\t\tdom,\n\t\t\t\tArray.isArray(i) ? i : [i],\n\t\t\t\tnewVNode,\n\t\t\t\toldVNode,\n\t\t\t\tglobalContext,\n\t\t\t\tisSvg && nodeType !== 'foreignObject',\n\t\t\t\texcessDomChildren,\n\t\t\t\tcommitQueue,\n\t\t\t\texcessDomChildren\n\t\t\t\t\t? excessDomChildren[0]\n\t\t\t\t\t: oldVNode._children && getDomSibling(oldVNode, 0),\n\t\t\t\tisHydrating\n\t\t\t);\n\n\t\t\t// Remove children that are not part of any vnode.\n\t\t\tif (excessDomChildren != null) {\n\t\t\t\tfor (i = excessDomChildren.length; i--; ) {\n\t\t\t\t\tif (excessDomChildren[i] != null) removeNode(excessDomChildren[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// (as above, don't diff props during hydration)\n\t\tif (!isHydrating) {\n\t\t\tif (\n\t\t\t\t'value' in newProps &&\n\t\t\t\t(i = newProps.value) !== undefined &&\n\t\t\t\t// #2756 For the <progress>-element the initial value is 0,\n\t\t\t\t// despite the attribute not being present. When the attribute\n\t\t\t\t// is missing the progress bar is treated as indeterminate.\n\t\t\t\t// To fix that we'll always update it when it is 0 for progress elements\n\t\t\t\t(i !== dom.value ||\n\t\t\t\t\t(nodeType === 'progress' && !i) ||\n\t\t\t\t\t// This is only for IE 11 to fix <select> value not being updated.\n\t\t\t\t\t// To avoid a stale select value we need to set the option.value\n\t\t\t\t\t// again, which triggers IE11 to re-evaluate the select value\n\t\t\t\t\t(nodeType === 'option' && i !== oldProps.value))\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'value', i, oldProps.value, false);\n\t\t\t}\n\t\t\tif (\n\t\t\t\t'checked' in newProps &&\n\t\t\t\t(i = newProps.checked) !== undefined &&\n\t\t\t\ti !== dom.checked\n\t\t\t) {\n\t\t\t\tsetProperty(dom, 'checked', i, oldProps.checked, false);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn dom;\n}\n\n/**\n * Invoke or update a ref, depending on whether it is a function or object ref.\n * @param {object|function} ref\n * @param {any} value\n * @param {import('../internal').VNode} vnode\n */\nexport function applyRef(ref, value, vnode) {\n\ttry {\n\t\tif (typeof ref == 'function') ref(value);\n\t\telse ref.current = value;\n\t} catch (e) {\n\t\toptions._catchError(e, vnode);\n\t}\n}\n\n/**\n * Unmount a virtual node from the tree and apply DOM changes\n * @param {import('../internal').VNode} vnode The virtual node to unmount\n * @param {import('../internal').VNode} parentVNode The parent of the VNode that\n * initiated the unmount\n * @param {boolean} [skipRemove] Flag that indicates that a parent node of the\n * current element is already detached from the DOM.\n */\nexport function unmount(vnode, parentVNode, skipRemove) {\n\tlet r;\n\tif (options.unmount) options.unmount(vnode);\n\n\tif ((r = vnode.ref)) {\n\t\tif (!r.current || r.current === vnode._dom) {\n\t\t\tapplyRef(r, null, parentVNode);\n\t\t}\n\t}\n\n\tif ((r = vnode._component) != null) {\n\t\tif (r.componentWillUnmount) {\n\t\t\ttry {\n\t\t\t\tr.componentWillUnmount();\n\t\t\t} catch (e) {\n\t\t\t\toptions._catchError(e, parentVNode);\n\t\t\t}\n\t\t}\n\n\t\tr.base = r._parentDom = null;\n\t\tvnode._component = undefined;\n\t}\n\n\tif ((r = vnode._children)) {\n\t\tfor (let i = 0; i < r.length; i++) {\n\t\t\tif (r[i]) {\n\t\t\t\tunmount(\n\t\t\t\t\tr[i],\n\t\t\t\t\tparentVNode,\n\t\t\t\t\tskipRemove || typeof vnode.type !== 'function'\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n\n\tif (!skipRemove && vnode._dom != null) {\n\t\tremoveNode(vnode._dom);\n\t}\n\n\t// Must be set to `undefined` to properly clean up `_nextDom`\n\t// for which `null` is a valid value. See comment in `create-element.js`\n\tvnode._parent = vnode._dom = vnode._nextDom = undefined;\n}\n\n/** The `.render()` method for a PFC backing instance. */\nfunction doRender(props, state, context) {\n\treturn this.constructor(props, context);\n}\n", "import { EMPTY_OBJ } from './constants';\nimport { commitRoot, diff } from './diff/index';\nimport { createElement, Fragment } from './create-element';\nimport options from './options';\nimport { slice } from './util';\n\n/**\n * Render a Preact virtual node into a DOM element\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * render into\n * @param {import('./internal').PreactElement | object} [replaceNode] Optional: Attempt to re-use an\n * existing DOM tree rooted at `replaceNode`\n */\nexport function render(vnode, parentDom, replaceNode) {\n\tif (options._root) options._root(vnode, parentDom);\n\n\t// We abuse the `replaceNode` parameter in `hydrate()` to signal if we are in\n\t// hydration mode or not by passing the `hydrate` function instead of a DOM\n\t// element..\n\tlet isHydrating = typeof replaceNode === 'function';\n\n\t// To be able to support calling `render()` multiple times on the same\n\t// DOM node, we need to obtain a reference to the previous tree. We do\n\t// this by assigning a new `_children` property to DOM nodes which points\n\t// to the last rendered tree. By default this property is not present, which\n\t// means that we are mounting a new tree for the first time.\n\tlet oldVNode = isHydrating\n\t\t? null\n\t\t: (replaceNode && replaceNode._children) || parentDom._children;\n\n\tvnode = (\n\t\t(!isHydrating && replaceNode) ||\n\t\tparentDom\n\t)._children = createElement(Fragment, null, [vnode]);\n\n\t// List of effects that need to be called after diffing.\n\tlet commitQueue = [];\n\tdiff(\n\t\tparentDom,\n\t\t// Determine the new vnode tree and store it on the DOM element on\n\t\t// our custom `_children` property.\n\t\tvnode,\n\t\toldVNode || EMPTY_OBJ,\n\t\tEMPTY_OBJ,\n\t\tparentDom.ownerSVGElement !== undefined,\n\t\t!isHydrating && replaceNode\n\t\t\t? [replaceNode]\n\t\t\t: oldVNode\n\t\t\t? null\n\t\t\t: parentDom.firstChild\n\t\t\t? slice.call(parentDom.childNodes)\n\t\t\t: null,\n\t\tcommitQueue,\n\t\t!isHydrating && replaceNode\n\t\t\t? replaceNode\n\t\t\t: oldVNode\n\t\t\t? oldVNode._dom\n\t\t\t: parentDom.firstChild,\n\t\tisHydrating\n\t);\n\n\t// Flush all queued effects\n\tcommitRoot(commitQueue, vnode);\n}\n\n/**\n * Update an existing DOM element with data from a Preact virtual node\n * @param {import('./internal').ComponentChild} vnode The virtual node to render\n * @param {import('./internal').PreactElement} parentDom The DOM element to\n * update\n */\nexport function hydrate(vnode, parentDom) {\n\trender(vnode, parentDom, hydrate);\n}\n", "import { assign, slice } from './util';\nimport { createVNode } from './create-element';\n\n/**\n * Clones the given VNode, optionally adding attributes/props and replacing its children.\n * @param {import('./internal').VNode} vnode The virtual DOM element to clone\n * @param {object} props Attributes/props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Any additional arguments will be used as replacement children.\n * @returns {import('./internal').VNode}\n */\nexport function cloneElement(vnode, props, children) {\n\tlet normalizedProps = assign({}, vnode.props),\n\t\tkey,\n\t\tref,\n\t\ti;\n\tfor (i in props) {\n\t\tif (i == 'key') key = props[i];\n\t\telse if (i == 'ref') ref = props[i];\n\t\telse normalizedProps[i] = props[i];\n\t}\n\n\tif (arguments.length > 2) {\n\t\tnormalizedProps.children =\n\t\t\targuments.length > 3 ? slice.call(arguments, 2) : children;\n\t}\n\n\treturn createVNode(\n\t\tvnode.type,\n\t\tnormalizedProps,\n\t\tkey || vnode.key,\n\t\tref || vnode.ref,\n\t\tnull\n\t);\n}\n", "/**\n * Find the closest error boundary to a thrown error and call it\n * @param {object} error The thrown value\n * @param {import('../internal').VNode} vnode The vnode that threw\n * the error that was caught (except for unmounting when this parameter\n * is the highest parent that was being unmounted)\n * @param {import('../internal').VNode} [oldVNode]\n * @param {import('../internal').ErrorInfo} [errorInfo]\n */\nexport function _catchError(error, vnode, oldVNode, errorInfo) {\n\t/** @type {import('../internal').Component} */\n\tlet component, ctor, handled;\n\n\tfor (; (vnode = vnode._parent); ) {\n\t\tif ((component = vnode._component) && !component._processingException) {\n\t\t\ttry {\n\t\t\t\tctor = component.constructor;\n\n\t\t\t\tif (ctor && ctor.getDerivedStateFromError != null) {\n\t\t\t\t\tcomponent.setState(ctor.getDerivedStateFromError(error));\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\tif (component.componentDidCatch != null) {\n\t\t\t\t\tcomponent.componentDidCatch(error, errorInfo || {});\n\t\t\t\t\thandled = component._dirty;\n\t\t\t\t}\n\n\t\t\t\t// This is an error boundary. Mark it as having bailed out, and whether it was mid-hydration.\n\t\t\t\tif (handled) {\n\t\t\t\t\treturn (component._pendingError = component);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\terror = e;\n\t\t\t}\n\t\t}\n\t}\n\n\tthrow error;\n}\n", "import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tconst prevScu = currentComponent.shouldComponentUpdate;\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\tcurrentComponent.shouldComponentUpdate = function(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t};\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any, errorInfo: import('preact').ErrorInfo) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\nexport function useId() {\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n", "/**\n * Assign properties from `props` to `obj`\n * @template O, P The obj and props types\n * @param {O} obj The object to copy properties to\n * @param {P} props The object to copy properties from\n * @returns {O & P}\n */\nexport function assign(obj, props) {\n\tfor (let i in props) obj[i] = props[i];\n\treturn /** @type {O & P} */ (obj);\n}\n\n/**\n * Check if two objects have a different shape\n * @param {object} a\n * @param {object} b\n * @returns {boolean}\n */\nexport function shallowDiffers(a, b) {\n\tfor (let i in a) if (i !== '__source' && !(i in b)) return true;\n\tfor (let i in b) if (i !== '__source' && a[i] !== b[i]) return true;\n\treturn false;\n}\n\nexport function removeNode(node) {\n\tlet parentNode = node.parentNode;\n\tif (parentNode) parentNode.removeChild(node);\n}\n\n/**\n * Check if two values are the same value\n * @param {*} x\n * @param {*} y\n * @returns {boolean}\n */\nexport function is(x, y) {\n\treturn (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y);\n}\n", "import { Component } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Component class with a predefined `shouldComponentUpdate` implementation\n */\nexport function PureComponent(p) {\n\tthis.props = p;\n}\nPureComponent.prototype = new Component();\n// Some third-party libraries check if this property is present\nPureComponent.prototype.isPureReactComponent = true;\nPureComponent.prototype.shouldComponentUpdate = function(props, state) {\n\treturn shallowDiffers(this.props, props) || shallowDiffers(this.state, state);\n};\n", "import { createElement } from 'preact';\nimport { shallowDiffers } from './util';\n\n/**\n * Memoize a component, so that it only updates when the props actually have\n * changed. This was previously known as `React.pure`.\n * @param {import('./internal').FunctionComponent} c functional component\n * @param {(prev: object, next: object) => boolean} [comparer] Custom equality function\n * @returns {import('./internal').FunctionComponent}\n */\nexport function memo(c, comparer) {\n\tfunction shouldUpdate(nextProps) {\n\t\tlet ref = this.props.ref;\n\t\tlet updateRef = ref == nextProps.ref;\n\t\tif (!updateRef && ref) {\n\t\t\tref.call ? ref(null) : (ref.current = null);\n\t\t}\n\n\t\tif (!comparer) {\n\t\t\treturn shallowDiffers(this.props, nextProps);\n\t\t}\n\n\t\treturn !comparer(this.props, nextProps) || !updateRef;\n\t}\n\n\tfunction Memoed(props) {\n\t\tthis.shouldComponentUpdate = shouldUpdate;\n\t\treturn createElement(c, props);\n\t}\n\tMemoed.displayName = 'Memo(' + (c.displayName || c.name) + ')';\n\tMemoed.prototype.isReactComponent = true;\n\tMemoed._forwarded = true;\n\treturn Memoed;\n}\n", "import { options } from 'preact';\nimport { assign } from './util';\n\nlet oldDiffHook = options._diff;\noptions._diff = vnode => {\n\tif (vnode.type && vnode.type._forwarded && vnode.ref) {\n\t\tvnode.props.ref = vnode.ref;\n\t\tvnode.ref = null;\n\t}\n\tif (oldDiffHook) oldDiffHook(vnode);\n};\n\nexport const REACT_FORWARD_SYMBOL =\n\t(typeof Symbol != 'undefined' &&\n\t\tSymbol.for &&\n\t\tSymbol.for('react.forward_ref')) ||\n\t0xf47;\n\n/**\n * Pass ref down to a child. This is mainly used in libraries with HOCs that\n * wrap components. Using `forwardRef` there is an easy way to get a reference\n * of the wrapped component instead of one of the wrapper itself.\n * @param {import('./index').ForwardFn} fn\n * @returns {import('./internal').FunctionComponent}\n */\nexport function forwardRef(fn) {\n\tfunction Forwarded(props) {\n\t\tlet clone = assign({}, props);\n\t\tdelete clone.ref;\n\t\treturn fn(clone, props.ref || null);\n\t}\n\n\t// mobx-react checks for this being present\n\tForwarded.$$typeof = REACT_FORWARD_SYMBOL;\n\t// mobx-react heavily relies on implementation details.\n\t// It expects an object here with a `render` property,\n\t// and prototype.render will fail. Without this\n\t// mobx-react throws.\n\tForwarded.render = Forwarded;\n\n\tForwarded.prototype.isReactComponent = Forwarded._forwarded = true;\n\tForwarded.displayName = 'ForwardRef(' + (fn.displayName || fn.name) + ')';\n\treturn Forwarded;\n}\n", "import { toChildArray } from 'preact';\n\nconst mapFn = (children, fn) => {\n\tif (children == null) return null;\n\treturn toChildArray(toChildArray(children).map(fn));\n};\n\n// This API is completely unnecessary for Preact, so it's basically passthrough.\nexport const Children = {\n\tmap: mapFn,\n\tforEach: mapFn,\n\tcount(children) {\n\t\treturn children ? toChildArray(children).length : 0;\n\t},\n\tonly(children) {\n\t\tconst normalized = toChildArray(children);\n\t\tif (normalized.length !== 1) throw 'Children.only';\n\t\treturn normalized[0];\n\t},\n\ttoArray: toChildArray\n};\n", "import { Component, createElement, options, Fragment } from 'preact';\nimport { assign } from './util';\n\nconst oldCatchError = options._catchError;\noptions._catchError = function(error, newVNode, oldVNode, errorInfo) {\n\tif (error.then) {\n\t\t/** @type {import('./internal').Component} */\n\t\tlet component;\n\t\tlet vnode = newVNode;\n\n\t\tfor (; (vnode = vnode._parent); ) {\n\t\t\tif ((component = vnode._component) && component._childDidSuspend) {\n\t\t\t\tif (newVNode._dom == null) {\n\t\t\t\t\tnewVNode._dom = oldVNode._dom;\n\t\t\t\t\tnewVNode._children = oldVNode._children;\n\t\t\t\t}\n\t\t\t\t// Don't call oldCatchError if we found a Suspense\n\t\t\t\treturn component._childDidSuspend(error, newVNode);\n\t\t\t}\n\t\t}\n\t}\n\toldCatchError(error, newVNode, oldVNode, errorInfo);\n};\n\nconst oldUnmount = options.unmount;\noptions.unmount = function(vnode) {\n\t/** @type {import('./internal').Component} */\n\tconst component = vnode._component;\n\tif (component && component._onResolve) {\n\t\tcomponent._onResolve();\n\t}\n\n\t// if the component is still hydrating\n\t// most likely it is because the component is suspended\n\t// we set the vnode.type as `null` so that it is not a typeof function\n\t// so the unmount will remove the vnode._dom\n\tif (component && vnode._hydrating === true) {\n\t\tvnode.type = null;\n\t}\n\n\tif (oldUnmount) oldUnmount(vnode);\n};\n\nfunction detachedClone(vnode, detachedParent, parentDom) {\n\tif (vnode) {\n\t\tif (vnode._component && vnode._component.__hooks) {\n\t\t\tvnode._component.__hooks._list.forEach(effect => {\n\t\t\t\tif (typeof effect._cleanup == 'function') effect._cleanup();\n\t\t\t});\n\n\t\t\tvnode._component.__hooks = null;\n\t\t}\n\n\t\tvnode = assign({}, vnode);\n\t\tif (vnode._component != null) {\n\t\t\tif (vnode._component._parentDom === parentDom) {\n\t\t\t\tvnode._component._parentDom = detachedParent;\n\t\t\t}\n\t\t\tvnode._component = null;\n\t\t}\n\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tdetachedClone(child, detachedParent, parentDom)\n\t\t\t);\n\t}\n\n\treturn vnode;\n}\n\nfunction removeOriginal(vnode, detachedParent, originalParent) {\n\tif (vnode) {\n\t\tvnode._original = null;\n\t\tvnode._children =\n\t\t\tvnode._children &&\n\t\t\tvnode._children.map(child =>\n\t\t\t\tremoveOriginal(child, detachedParent, originalParent)\n\t\t\t);\n\n\t\tif (vnode._component) {\n\t\t\tif (vnode._component._parentDom === detachedParent) {\n\t\t\t\tif (vnode._dom) {\n\t\t\t\t\toriginalParent.insertBefore(vnode._dom, vnode._nextDom);\n\t\t\t\t}\n\t\t\t\tvnode._component._force = true;\n\t\t\t\tvnode._component._parentDom = originalParent;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn vnode;\n}\n\n// having custom inheritance instead of a class here saves a lot of bytes\nexport function Suspense() {\n\t// we do not call super here to golf some bytes...\n\tthis._pendingSuspensionCount = 0;\n\tthis._suspenders = null;\n\tthis._detachOnNextRender = null;\n}\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspense.prototype = new Component();\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {Promise} promise The thrown promise\n * @param {import('./internal').VNode<any, any>} suspendingVNode The suspending component\n */\nSuspense.prototype._childDidSuspend = function(promise, suspendingVNode) {\n\tconst suspendingComponent = suspendingVNode._component;\n\n\t/** @type {import('./internal').SuspenseComponent} */\n\tconst c = this;\n\n\tif (c._suspenders == null) {\n\t\tc._suspenders = [];\n\t}\n\tc._suspenders.push(suspendingComponent);\n\n\tconst resolve = suspended(c._vnode);\n\n\tlet resolved = false;\n\tconst onResolved = () => {\n\t\tif (resolved) return;\n\n\t\tresolved = true;\n\t\tsuspendingComponent._onResolve = null;\n\n\t\tif (resolve) {\n\t\t\tresolve(onSuspensionComplete);\n\t\t} else {\n\t\t\tonSuspensionComplete();\n\t\t}\n\t};\n\n\tsuspendingComponent._onResolve = onResolved;\n\n\tconst onSuspensionComplete = () => {\n\t\tif (!--c._pendingSuspensionCount) {\n\t\t\t// If the suspension was during hydration we don't need to restore the\n\t\t\t// suspended children into the _children array\n\t\t\tif (c.state._suspended) {\n\t\t\t\tconst suspendedVNode = c.state._suspended;\n\t\t\t\tc._vnode._children[0] = removeOriginal(\n\t\t\t\t\tsuspendedVNode,\n\t\t\t\t\tsuspendedVNode._component._parentDom,\n\t\t\t\t\tsuspendedVNode._component._originalParentDom\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tc.setState({ _suspended: (c._detachOnNextRender = null) });\n\n\t\t\tlet suspended;\n\t\t\twhile ((suspended = c._suspenders.pop())) {\n\t\t\t\tsuspended.forceUpdate();\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * We do not set `suspended: true` during hydration because we want the actual markup\n\t * to remain on screen and hydrate it when the suspense actually gets resolved.\n\t * While in non-hydration cases the usual fallback -> component flow would occour.\n\t */\n\tconst wasHydrating = suspendingVNode._hydrating === true;\n\tif (!c._pendingSuspensionCount++ && !wasHydrating) {\n\t\tc.setState({ _suspended: (c._detachOnNextRender = c._vnode._children[0]) });\n\t}\n\tpromise.then(onResolved, onResolved);\n};\n\nSuspense.prototype.componentWillUnmount = function() {\n\tthis._suspenders = [];\n};\n\n/**\n * @this {import('./internal').SuspenseComponent}\n * @param {import('./internal').SuspenseComponent[\"props\"]} props\n * @param {import('./internal').SuspenseState} state\n */\nSuspense.prototype.render = function(props, state) {\n\tif (this._detachOnNextRender) {\n\t\t// When the Suspense's _vnode was created by a call to createVNode\n\t\t// (i.e. due to a setState further up in the tree)\n\t\t// it's _children prop is null, in this case we \"forget\" about the parked vnodes to detach\n\t\tif (this._vnode._children) {\n\t\t\tconst detachedParent = document.createElement('div');\n\t\t\tconst detachedComponent = this._vnode._children[0]._component;\n\t\t\tthis._vnode._children[0] = detachedClone(\n\t\t\t\tthis._detachOnNextRender,\n\t\t\t\tdetachedParent,\n\t\t\t\t(detachedComponent._originalParentDom = detachedComponent._parentDom)\n\t\t\t);\n\t\t}\n\n\t\tthis._detachOnNextRender = null;\n\t}\n\n\t// Wrap fallback tree in a VNode that prevents itself from being marked as aborting mid-hydration:\n\t/** @type {import('./internal').VNode} */\n\tconst fallback =\n\t\tstate._suspended && createElement(Fragment, null, props.fallback);\n\tif (fallback) fallback._hydrating = null;\n\n\treturn [\n\t\tcreateElement(Fragment, null, state._suspended ? null : props.children),\n\t\tfallback\n\t];\n};\n\n/**\n * Checks and calls the parent component's _suspended method, passing in the\n * suspended vnode. This is a way for a parent (e.g. SuspenseList) to get notified\n * that one of its children/descendants suspended.\n *\n * The parent MAY return a callback. The callback will get called when the\n * suspension resolves, notifying the parent of the fact.\n * Moreover, the callback gets function `unsuspend` as a parameter. The resolved\n * child descendant will not actually get unsuspended until `unsuspend` gets called.\n * This is a way for the parent to delay unsuspending.\n *\n * If the parent does not return a callback then the resolved vnode\n * gets unsuspended immediately when it resolves.\n *\n * @param {import('./internal').VNode} vnode\n * @returns {((unsuspend: () => void) => void)?}\n */\nexport function suspended(vnode) {\n\t/** @type {import('./internal').Component} */\n\tlet component = vnode._parent._component;\n\treturn component && component._suspended && component._suspended(vnode);\n}\n\nexport function lazy(loader) {\n\tlet prom;\n\tlet component;\n\tlet error;\n\n\tfunction Lazy(props) {\n\t\tif (!prom) {\n\t\t\tprom = loader();\n\t\t\tprom.then(\n\t\t\t\texports => {\n\t\t\t\t\tcomponent = exports.default || exports;\n\t\t\t\t},\n\t\t\t\te => {\n\t\t\t\t\terror = e;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\n\t\tif (error) {\n\t\t\tthrow error;\n\t\t}\n\n\t\tif (!component) {\n\t\t\tthrow prom;\n\t\t}\n\n\t\treturn createElement(component, props);\n\t}\n\n\tLazy.displayName = 'Lazy';\n\tLazy._forwarded = true;\n\treturn Lazy;\n}\n", "import { Component, toChildArray } from 'preact';\nimport { suspended } from './suspense.js';\n\n// Indexes to linked list nodes (nodes are stored as arrays to save bytes).\nconst SUSPENDED_COUNT = 0;\nconst RESOLVED_COUNT = 1;\nconst NEXT_NODE = 2;\n\n// Having custom inheritance instead of a class here saves a lot of bytes.\nexport function SuspenseList() {\n\tthis._next = null;\n\tthis._map = null;\n}\n\n// Mark one of child's earlier suspensions as resolved.\n// Some pending callbacks may become callable due to this\n// (e.g. the last suspended descendant gets resolved when\n// revealOrder === 'together'). Process those callbacks as well.\nconst resolve = (list, child, node) => {\n\tif (++node[RESOLVED_COUNT] === node[SUSPENDED_COUNT]) {\n\t\t// The number a child (or any of its descendants) has been suspended\n\t\t// matches the number of times it's been resolved. Therefore we\n\t\t// mark the child as completely resolved by deleting it from ._map.\n\t\t// This is used to figure out when *all* children have been completely\n\t\t// resolved when revealOrder is 'together'.\n\t\tlist._map.delete(child);\n\t}\n\n\t// If revealOrder is falsy then we can do an early exit, as the\n\t// callbacks won't get queued in the node anyway.\n\t// If revealOrder is 'together' then also do an early exit\n\t// if all suspended descendants have not yet been resolved.\n\tif (\n\t\t!list.props.revealOrder ||\n\t\t(list.props.revealOrder[0] === 't' && list._map.size)\n\t) {\n\t\treturn;\n\t}\n\n\t// Walk the currently suspended children in order, calling their\n\t// stored callbacks on the way. Stop if we encounter a child that\n\t// has not been completely resolved yet.\n\tnode = list._next;\n\twhile (node) {\n\t\twhile (node.length > 3) {\n\t\t\tnode.pop()();\n\t\t}\n\t\tif (node[RESOLVED_COUNT] < node[SUSPENDED_COUNT]) {\n\t\t\tbreak;\n\t\t}\n\t\tlist._next = node = node[NEXT_NODE];\n\t}\n};\n\n// Things we do here to save some bytes but are not proper JS inheritance:\n// - call `new Component()` as the prototype\n// - do not set `Suspense.prototype.constructor` to `Suspense`\nSuspenseList.prototype = new Component();\n\nSuspenseList.prototype._suspended = function(child) {\n\tconst list = this;\n\tconst delegated = suspended(list._vnode);\n\n\tlet node = list._map.get(child);\n\tnode[SUSPENDED_COUNT]++;\n\n\treturn unsuspend => {\n\t\tconst wrappedUnsuspend = () => {\n\t\t\tif (!list.props.revealOrder) {\n\t\t\t\t// Special case the undefined (falsy) revealOrder, as there\n\t\t\t\t// is no need to coordinate a specific order or unsuspends.\n\t\t\t\tunsuspend();\n\t\t\t} else {\n\t\t\t\tnode.push(unsuspend);\n\t\t\t\tresolve(list, child, node);\n\t\t\t}\n\t\t};\n\t\tif (delegated) {\n\t\t\tdelegated(wrappedUnsuspend);\n\t\t} else {\n\t\t\twrappedUnsuspend();\n\t\t}\n\t};\n};\n\nSuspenseList.prototype.render = function(props) {\n\tthis._next = null;\n\tthis._map = new Map();\n\n\tconst children = toChildArray(props.children);\n\tif (props.revealOrder && props.revealOrder[0] === 'b') {\n\t\t// If order === 'backwards' (or, well, anything starting with a 'b')\n\t\t// then flip the child list around so that the last child will be\n\t\t// the first in the linked list.\n\t\tchildren.reverse();\n\t}\n\t// Build the linked list. Iterate through the children in reverse order\n\t// so that `_next` points to the first linked list node to be resolved.\n\tfor (let i = children.length; i--; ) {\n\t\t// Create a new linked list node as an array of form:\n\t\t// \t[suspended_count, resolved_count, next_node]\n\t\t// where suspended_count and resolved_count are numeric counters for\n\t\t// keeping track how many times a node has been suspended and resolved.\n\t\t//\n\t\t// Note that suspended_count starts from 1 instead of 0, so we can block\n\t\t// processing callbacks until componentDidMount has been called. In a sense\n\t\t// node is suspended at least until componentDidMount gets called!\n\t\t//\n\t\t// Pending callbacks are added to the end of the node:\n\t\t// \t[suspended_count, resolved_count, next_node, callback_0, callback_1, ...]\n\t\tthis._map.set(children[i], (this._next = [1, 0, this._next]));\n\t}\n\treturn props.children;\n};\n\nSuspenseList.prototype.componentDidUpdate = SuspenseList.prototype.componentDidMount = function() {\n\t// Iterate through all children after mounting for two reasons:\n\t// 1. As each node[SUSPENDED_COUNT] starts from 1, this iteration increases\n\t//    each node[RELEASED_COUNT] by 1, therefore balancing the counters.\n\t//    The nodes can now be completely consumed from the linked list.\n\t// 2. Handle nodes that might have gotten resolved between render and\n\t//    componentDidMount.\n\tthis._map.forEach((node, child) => {\n\t\tresolve(this, child, node);\n\t});\n};\n", "import { createElement, render } from 'preact';\n\n/**\n * @param {import('../../src/index').RenderableProps<{ context: any }>} props\n */\nfunction ContextProvider(props) {\n\tthis.getChildContext = () => props.context;\n\treturn props.children;\n}\n\n/**\n * Portal component\n * @this {import('./internal').Component}\n * @param {object | null | undefined} props\n *\n * TODO: use createRoot() instead of fake root\n */\nfunction Portal(props) {\n\tconst _this = this;\n\tlet container = props._container;\n\n\t_this.componentWillUnmount = function() {\n\t\trender(null, _this._temp);\n\t\t_this._temp = null;\n\t\t_this._container = null;\n\t};\n\n\t// When we change container we should clear our old container and\n\t// indicate a new mount.\n\tif (_this._container && _this._container !== container) {\n\t\t_this.componentWillUnmount();\n\t}\n\n\t// When props.vnode is undefined/false/null we are dealing with some kind of\n\t// conditional vnode. This should not trigger a render.\n\tif (props._vnode) {\n\t\tif (!_this._temp) {\n\t\t\t_this._container = container;\n\n\t\t\t// Create a fake DOM parent node that manages a subset of `container`'s children:\n\t\t\t_this._temp = {\n\t\t\t\tnodeType: 1,\n\t\t\t\tparentNode: container,\n\t\t\t\tchildNodes: [],\n\t\t\t\tappendChild(child) {\n\t\t\t\t\tthis.childNodes.push(child);\n\t\t\t\t\t_this._container.appendChild(child);\n\t\t\t\t},\n\t\t\t\tinsertBefore(child, before) {\n\t\t\t\t\tthis.childNodes.push(child);\n\t\t\t\t\t_this._container.appendChild(child);\n\t\t\t\t},\n\t\t\t\tremoveChild(child) {\n\t\t\t\t\tthis.childNodes.splice(this.childNodes.indexOf(child) >>> 1, 1);\n\t\t\t\t\t_this._container.removeChild(child);\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\t// Render our wrapping element into temp.\n\t\trender(\n\t\t\tcreateElement(ContextProvider, { context: _this.context }, props._vnode),\n\t\t\t_this._temp\n\t\t);\n\t}\n\t// When we come from a conditional render, on a mounted\n\t// portal we should clear the DOM.\n\telse if (_this._temp) {\n\t\t_this.componentWillUnmount();\n\t}\n}\n\n/**\n * Create a `Portal` to continue rendering the vnode tree at a different DOM node\n * @param {import('./internal').VNode} vnode The vnode to render\n * @param {import('./internal').PreactElement} container The DOM node to continue rendering in to.\n */\nexport function createPortal(vnode, container) {\n\tconst el = createElement(Portal, { _vnode: vnode, _container: container });\n\tel.containerInfo = container;\n\treturn el;\n}\n", "import {\n\trender as preactRender,\n\thydrate as preactHydrate,\n\toptions,\n\ttoChildArray,\n\tComponent\n} from 'preact';\n\nexport const REACT_ELEMENT_TYPE =\n\t(typeof Symbol != 'undefined' && Symbol.for && Symbol.for('react.element')) ||\n\t0xeac7;\n\nconst CAMEL_PROPS = /^(?:accent|alignment|arabic|baseline|cap|clip(?!PathU)|color|dominant|fill|flood|font|glyph(?!R)|horiz|image|letter|lighting|marker(?!H|W|U)|overline|paint|pointer|shape|stop|strikethrough|stroke|text(?!L)|transform|underline|unicode|units|v|vector|vert|word|writing|x(?!C))[A-Z]/;\n\nconst IS_DOM = typeof document !== 'undefined';\n\n// Input types for which onchange should not be converted to oninput.\n// type=\"file|checkbox|radio\", plus \"range\" in IE11.\n// (IE11 doesn't support Symbol, which we use here to turn `rad` into `ra` which matches \"range\")\nconst onChangeInputType = type =>\n\t(typeof Symbol != 'undefined' && typeof Symbol() == 'symbol'\n\t\t? /fil|che|rad/i\n\t\t: /fil|che|ra/i\n\t).test(type);\n\n// Some libraries like `react-virtualized` explicitly check for this.\nComponent.prototype.isReactComponent = {};\n\n// `UNSAFE_*` lifecycle hooks\n// Preact only ever invokes the unprefixed methods.\n// Here we provide a base \"fallback\" implementation that calls any defined UNSAFE_ prefixed method.\n// - If a component defines its own `componentDidMount()` (including via defineProperty), use that.\n// - If a component defines `UNSAFE_componentDidMount()`, `componentDidMount` is the alias getter/setter.\n// - If anything assigns to an `UNSAFE_*` property, the assignment is forwarded to the unprefixed property.\n// See https://github.com/preactjs/preact/issues/1941\n[\n\t'componentWillMount',\n\t'componentWillReceiveProps',\n\t'componentWillUpdate'\n].forEach(key => {\n\tObject.defineProperty(Component.prototype, key, {\n\t\tconfigurable: true,\n\t\tget() {\n\t\t\treturn this['UNSAFE_' + key];\n\t\t},\n\t\tset(v) {\n\t\t\tObject.defineProperty(this, key, {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true,\n\t\t\t\tvalue: v\n\t\t\t});\n\t\t}\n\t});\n});\n\n/**\n * Proxy render() since React returns a Component reference.\n * @param {import('./internal').VNode} vnode VNode tree to render\n * @param {import('./internal').PreactElement} parent DOM node to render vnode tree into\n * @param {() => void} [callback] Optional callback that will be called after rendering\n * @returns {import('./internal').Component | null} The root component reference or null\n */\nexport function render(vnode, parent, callback) {\n\t// React destroys any existing DOM nodes, see #1727\n\t// ...but only on the first render, see #1828\n\tif (parent._children == null) {\n\t\tparent.textContent = '';\n\t}\n\n\tpreactRender(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nexport function hydrate(vnode, parent, callback) {\n\tpreactHydrate(vnode, parent);\n\tif (typeof callback == 'function') callback();\n\n\treturn vnode ? vnode._component : null;\n}\n\nlet oldEventHook = options.event;\noptions.event = e => {\n\tif (oldEventHook) e = oldEventHook(e);\n\te.persist = empty;\n\te.isPropagationStopped = isPropagationStopped;\n\te.isDefaultPrevented = isDefaultPrevented;\n\treturn (e.nativeEvent = e);\n};\n\nfunction empty() {}\n\nfunction isPropagationStopped() {\n\treturn this.cancelBubble;\n}\n\nfunction isDefaultPrevented() {\n\treturn this.defaultPrevented;\n}\n\nlet classNameDescriptor = {\n\tconfigurable: true,\n\tget() {\n\t\treturn this.class;\n\t}\n};\n\nlet oldVNodeHook = options.vnode;\noptions.vnode = vnode => {\n\tlet type = vnode.type;\n\tlet props = vnode.props;\n\tlet normalizedProps = props;\n\n\t// only normalize props on Element nodes\n\tif (typeof type === 'string') {\n\t\tconst nonCustomElement = type.indexOf('-') === -1;\n\t\tnormalizedProps = {};\n\n\t\tfor (let i in props) {\n\t\t\tlet value = props[i];\n\n\t\t\tif (IS_DOM && i === 'children' && type === 'noscript') {\n\t\t\t\t// Emulate React's behavior of not rendering the contents of noscript tags on the client.\n\t\t\t\tcontinue;\n\t\t\t} else if (i === 'value' && 'defaultValue' in props && value == null) {\n\t\t\t\t// Skip applying value if it is null/undefined and we already set\n\t\t\t\t// a default value\n\t\t\t\tcontinue;\n\t\t\t} else if (\n\t\t\t\ti === 'defaultValue' &&\n\t\t\t\t'value' in props &&\n\t\t\t\tprops.value == null\n\t\t\t) {\n\t\t\t\t// `defaultValue` is treated as a fallback `value` when a value prop is present but null/undefined.\n\t\t\t\t// `defaultValue` for Elements with no value prop is the same as the DOM defaultValue property.\n\t\t\t\ti = 'value';\n\t\t\t} else if (i === 'download' && value === true) {\n\t\t\t\t// Calling `setAttribute` with a truthy value will lead to it being\n\t\t\t\t// passed as a stringified value, e.g. `download=\"true\"`. React\n\t\t\t\t// converts it to an empty string instead, otherwise the attribute\n\t\t\t\t// value will be used as the file name and the file will be called\n\t\t\t\t// \"true\" upon downloading it.\n\t\t\t\tvalue = '';\n\t\t\t} else if (/ondoubleclick/i.test(i)) {\n\t\t\t\ti = 'ondblclick';\n\t\t\t} else if (\n\t\t\t\t/^onchange(textarea|input)/i.test(i + type) &&\n\t\t\t\t!onChangeInputType(props.type)\n\t\t\t) {\n\t\t\t\ti = 'oninput';\n\t\t\t} else if (/^onfocus$/i.test(i)) {\n\t\t\t\ti = 'onfocusin';\n\t\t\t} else if (/^onblur$/i.test(i)) {\n\t\t\t\ti = 'onfocusout';\n\t\t\t} else if (/^on(Ani|Tra|Tou|BeforeInp|Compo)/.test(i)) {\n\t\t\t\ti = i.toLowerCase();\n\t\t\t} else if (nonCustomElement && CAMEL_PROPS.test(i)) {\n\t\t\t\ti = i.replace(/[A-Z0-9]/g, '-$&').toLowerCase();\n\t\t\t} else if (value === null) {\n\t\t\t\tvalue = undefined;\n\t\t\t}\n\n\t\t\t// Add support for onInput and onChange, see #3561\n\t\t\t// if we have an oninput prop already change it to oninputCapture\n\t\t\tif (/^oninput$/i.test(i)) {\n\t\t\t\ti = i.toLowerCase();\n\t\t\t\tif (normalizedProps[i]) {\n\t\t\t\t\ti = 'oninputCapture';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tnormalizedProps[i] = value;\n\t\t}\n\n\t\t// Add support for array select values: <select multiple value={[]} />\n\t\tif (\n\t\t\ttype == 'select' &&\n\t\t\tnormalizedProps.multiple &&\n\t\t\tArray.isArray(normalizedProps.value)\n\t\t) {\n\t\t\t// forEach() always returns undefined, which we abuse here to unset the value prop.\n\t\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\t\tchild.props.selected =\n\t\t\t\t\tnormalizedProps.value.indexOf(child.props.value) != -1;\n\t\t\t});\n\t\t}\n\n\t\t// Adding support for defaultValue in select tag\n\t\tif (type == 'select' && normalizedProps.defaultValue != null) {\n\t\t\tnormalizedProps.value = toChildArray(props.children).forEach(child => {\n\t\t\t\tif (normalizedProps.multiple) {\n\t\t\t\t\tchild.props.selected =\n\t\t\t\t\t\tnormalizedProps.defaultValue.indexOf(child.props.value) != -1;\n\t\t\t\t} else {\n\t\t\t\t\tchild.props.selected =\n\t\t\t\t\t\tnormalizedProps.defaultValue == child.props.value;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tvnode.props = normalizedProps;\n\n\t\tif (props.class != props.className) {\n\t\t\tclassNameDescriptor.enumerable = 'className' in props;\n\t\t\tif (props.className != null) normalizedProps.class = props.className;\n\t\t\tObject.defineProperty(normalizedProps, 'className', classNameDescriptor);\n\t\t}\n\t}\n\n\tvnode.$$typeof = REACT_ELEMENT_TYPE;\n\n\tif (oldVNodeHook) oldVNodeHook(vnode);\n};\n\n// Only needed for react-relay\nlet currentComponent;\nconst oldBeforeRender = options._render;\noptions._render = function(vnode) {\n\tif (oldBeforeRender) {\n\t\toldBeforeRender(vnode);\n\t}\n\tcurrentComponent = vnode._component;\n};\n\n// This is a very very private internal function for React it\n// is used to sort-of do runtime dependency injection. So far\n// only `react-relay` makes use of it. It uses it to read the\n// context value.\nexport const __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = {\n\tReactCurrentDispatcher: {\n\t\tcurrent: {\n\t\t\treadContext(context) {\n\t\t\t\treturn currentComponent._globalContext[context._id].props.value;\n\t\t\t}\n\t\t}\n\t}\n};\n", "import {\n\tcreateElement,\n\trender as preactRender,\n\tcloneElement as preactCloneElement,\n\tcreateRef,\n\tComponent,\n\tcreateContext,\n\tFragment\n} from 'preact';\nimport {\n\tuseState,\n\tuseId,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue\n} from 'preact/hooks';\nimport { PureComponent } from './PureComponent';\nimport { memo } from './memo';\nimport { forwardRef } from './forwardRef';\nimport { Children } from './Children';\nimport { Suspense, lazy } from './suspense';\nimport { SuspenseList } from './suspense-list';\nimport { createPortal } from './portals';\nimport { is } from './util';\nimport {\n\thydrate,\n\trender,\n\tREACT_ELEMENT_TYPE,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n} from './render';\n\nconst version = '17.0.2'; // trick libraries to think we are react\n\n/**\n * Legacy version of createElement.\n * @param {import('./internal').VNode[\"type\"]} type The node name or Component constructor\n */\nfunction createFactory(type) {\n\treturn createElement.bind(null, type);\n}\n\n/**\n * Check if the passed element is a valid (p)react node.\n * @param {*} element The element to check\n * @returns {boolean}\n */\nfunction isValidElement(element) {\n\treturn !!element && element.$$typeof === REACT_ELEMENT_TYPE;\n}\n\n/**\n * Wrap `cloneElement` to abort if the passed element is not a valid element and apply\n * all vnode normalizations.\n * @param {import('./internal').VNode} element The vnode to clone\n * @param {object} props Props to add when cloning\n * @param {Array<import('./internal').ComponentChildren>} rest Optional component children\n */\nfunction cloneElement(element) {\n\tif (!isValidElement(element)) return element;\n\treturn preactCloneElement.apply(null, arguments);\n}\n\n/**\n * Remove a component tree from the DOM, including state and event handlers.\n * @param {import('./internal').PreactElement} container\n * @returns {boolean}\n */\nfunction unmountComponentAtNode(container) {\n\tif (container._children) {\n\t\tpreactRender(null, container);\n\t\treturn true;\n\t}\n\treturn false;\n}\n\n/**\n * Get the matching DOM node for a component\n * @param {import('./internal').Component} component\n * @returns {import('./internal').PreactElement | null}\n */\nfunction findDOMNode(component) {\n\treturn (\n\t\t(component &&\n\t\t\t(component.base || (component.nodeType === 1 && component))) ||\n\t\tnull\n\t);\n}\n\n/**\n * Deprecated way to control batched rendering inside the reconciler, but we\n * already schedule in batches inside our rendering code\n * @template Arg\n * @param {(arg: Arg) => void} callback function that triggers the updated\n * @param {Arg} [arg] Optional argument that can be passed to the callback\n */\n// eslint-disable-next-line camelcase\nconst unstable_batchedUpdates = (callback, arg) => callback(arg);\n\n/**\n * In React, `flushSync` flushes the entire tree and forces a rerender. It's\n * implmented here as a no-op.\n * @template Arg\n * @template Result\n * @param {(arg: Arg) => Result} callback function that runs before the flush\n * @param {Arg} [arg] Optional argument that can be passed to the callback\n * @returns\n */\nconst flushSync = (callback, arg) => callback(arg);\n\n/**\n * Strict Mode is not implemented in Preact, so we provide a stand-in for it\n * that just renders its children without imposing any restrictions.\n */\nconst StrictMode = Fragment;\n\nexport function startTransition(cb) {\n\tcb();\n}\n\nexport function useDeferredValue(val) {\n\treturn val;\n}\n\nexport function useTransition() {\n\treturn [false, startTransition];\n}\n\n// TODO: in theory this should be done after a VNode is diffed as we want to insert\n// styles/... before it attaches\nexport const useInsertionEffect = useLayoutEffect;\n\n/**\n * This is taken from https://github.com/facebook/react/blob/main/packages/use-sync-external-store/src/useSyncExternalStoreShimClient.js#L84\n * on a high level this cuts out the warnings, ... and attempts a smaller implementation\n */\nexport function useSyncExternalStore(subscribe, getSnapshot) {\n\tconst value = getSnapshot();\n\n\tconst [{ _instance }, forceUpdate] = useState({\n\t\t_instance: { _value: value, _getSnapshot: getSnapshot }\n\t});\n\n\tuseLayoutEffect(() => {\n\t\t_instance._value = value;\n\t\t_instance._getSnapshot = getSnapshot;\n\n\t\tif (!is(_instance._value, getSnapshot())) {\n\t\t\tforceUpdate({ _instance });\n\t\t}\n\t}, [subscribe, value, getSnapshot]);\n\n\tuseEffect(() => {\n\t\tif (!is(_instance._value, _instance._getSnapshot())) {\n\t\t\tforceUpdate({ _instance });\n\t\t}\n\n\t\treturn subscribe(() => {\n\t\t\tif (!is(_instance._value, _instance._getSnapshot())) {\n\t\t\t\tforceUpdate({ _instance });\n\t\t\t}\n\t\t});\n\t}, [subscribe]);\n\n\treturn value;\n}\n\nexport * from 'preact/hooks';\nexport {\n\tversion,\n\tChildren,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\tflushSync,\n\t// eslint-disable-next-line camelcase\n\tunstable_batchedUpdates,\n\tStrictMode,\n\tSuspense,\n\tSuspenseList,\n\tlazy,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n};\n\n// React copies the named exports to the default one.\nexport default {\n\tuseState,\n\tuseId,\n\tuseReducer,\n\tuseEffect,\n\tuseLayoutEffect,\n\tuseInsertionEffect,\n\tuseTransition,\n\tuseDeferredValue,\n\tuseSyncExternalStore,\n\tstartTransition,\n\tuseRef,\n\tuseImperativeHandle,\n\tuseMemo,\n\tuseCallback,\n\tuseContext,\n\tuseDebugValue,\n\tversion,\n\tChildren,\n\trender,\n\thydrate,\n\tunmountComponentAtNode,\n\tcreatePortal,\n\tcreateElement,\n\tcreateContext,\n\tcreateFactory,\n\tcloneElement,\n\tcreateRef,\n\tFragment,\n\tisValidElement,\n\tfindDOMNode,\n\tComponent,\n\tPureComponent,\n\tmemo,\n\tforwardRef,\n\tflushSync,\n\tunstable_batchedUpdates,\n\tStrictMode,\n\tSuspense,\n\tSuspenseList,\n\tlazy,\n\t__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED\n};\n"],
  "mappings": "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",
  "names": ["assign", "obj", "props", "i", "removeNode", "node", "parentNode", "removeChild", "createElement", "type", "children", "key", "ref", "normalizedProps", "arguments", "length", "slice", "call", "defaultProps", "createVNode", "original", "vnode", "__k", "__", "__b", "__e", "__d", "__c", "__h", "constructor", "__v", "vnodeId", "options", "createRef", "current", "Fragment", "diffProps", "dom", "newProps", "oldProps", "isSvg", "hydrate", "setProperty", "setStyle", "style", "value", "IS_NON_DIMENSIONAL", "test", "name", "oldValue", "useCapture", "o", "cssText", "replace", "toLowerCase", "l", "addEventListener", "eventProxyCapture", "eventProxy", "removeEventListener", "e", "indexOf", "removeAttribute", "setAttribute", "inEvent", "this", "event", "Component", "context", "getDomSibling", "childIndex", "sibling", "updateParentDomPointers", "child", "base", "defer", "cb", "setTimeout", "microTick", "enqueueRender", "c", "rerenderQueue", "push", "process", "__r", "prevDebounce", "debounceRendering", "renderQueueLength", "component", "commitQueue", "oldVNode", "oldDom", "parentDom", "sort", "a", "b", "shift", "__P", "diff", "ownerSVGElement", "commitRoot", "diffChildren", "renderResult", "newParentVNode", "oldParentVNode", "globalContext", "excessDomChildren", "isHydrating", "j", "childVNode", "newDom", "firstChildDom", "refs", "oldChildren", "EMPTY_ARR", "oldChildrenLength", "Array", "isArray", "EMPTY_OBJ", "reorderChildren", "placeChild", "getLastDom", "nextSibling", "unmount", "applyRef", "tmp", "toChildArray", "out", "some", "nextDom", "sibDom", "outer", "appendChild", "insertBefore", "lastDom", "newVNode", "isNew", "oldState", "snapshot", "clearProcessingException", "provider", "componentContext", "renderHook", "count", "newType", "contextType", "__E", "prototype", "render", "doRender", "sub", "state", "_sb", "__s", "getDerivedStateFromProps", "componentWillMount", "componentDidMount", "componentWillReceiveProps", "shouldComponentUpdate", "forEach", "componentWillUpdate", "componentDidUpdate", "getChildContext", "getSnapshotBeforeUpdate", "diffElementNodes", "diffed", "root", "oldHtml", "newHtml", "nodeType", "localName", "document", "createTextNode", "createElementNS", "is", "data", "childNodes", "dangerouslySetInnerHTML", "attributes", "__html", "innerHTML", "checked", "parentVNode", "skipRemove", "r", "componentWillUnmount", "replaceNode", "firstChild", "cloneElement", "createContext", "defaultValue", "contextId", "Consumer", "contextValue", "Provider", "subs", "ctx", "_props", "old", "splice", "isValidElement", "error", "errorInfo", "ctor", "handled", "getDerivedStateFromError", "setState", "componentDidCatch", "update", "callback", "s", "forceUpdate", "Promise", "then", "bind", "resolve", "getHookState", "index", "type", "options", "__h", "currentComponent", "currentHook", "hooks", "__H", "__", "length", "push", "__V", "EMPTY", "useState", "initialState", "useReducer", "invokeOrReturn", "reducer", "init", "hookState", "currentIndex", "_reducer", "__c", "action", "currentValue", "__N", "nextValue", "setState", "_hasScuFromHooks", "prevScu", "shouldComponentUpdate", "p", "s", "c", "stateHooks", "filter", "x", "every", "call", "this", "shouldUpdate", "forEach", "hookItem", "props", "useEffect", "callback", "args", "state", "__s", "argsChanged", "_pendingArgs", "useLayoutEffect", "useRef", "initialValue", "useMemo", "current", "useImperativeHandle", "ref", "createHandle", "concat", "factory", "useCallback", "useContext", "context", "provider", "sub", "value", "useDebugValue", "formatter", "useErrorBoundary", "cb", "errState", "componentDidCatch", "err", "errorInfo", "undefined", "useId", "root", "__v", "__m", "mask", "flushAfterPaintEffects", "component", "afterPaintEffects", "shift", "invokeCleanup", "invokeEffect", "e", "__e", "afterNextFrame", "raf", "done", "clearTimeout", "timeout", "HAS_RAF", "cancelAnimationFrame", "setTimeout", "requestAnimationFrame", "hook", "comp", "cleanup", "oldArgs", "newArgs", "some", "arg", "f", "previousComponent", "prevRaf", "oldBeforeDiff", "oldBeforeRender", "oldAfterDiff", "oldCommit", "oldBeforeUnmount", "diffed", "unmount", "__b", "vnode", "commitQueue", "hasErrored", "assign", "obj", "props", "i", "shallowDiffers", "a", "b", "is", "x", "y", "PureComponent", "p", "this", "memo", "c", "comparer", "shouldUpdate", "nextProps", "ref", "updateRef", "call", "current", "Memoed", "shouldComponentUpdate", "createElement", "displayName", "name", "prototype", "isReactComponent", "forwardRef", "fn", "Forwarded", "clone", "$$typeof", "REACT_FORWARD_SYMBOL", "render", "__f", "detachedClone", "vnode", "detachedParent", "parentDom", "__c", "forEach", "effect", "__H", "__P", "__k", "map", "child", "removeOriginal", "originalParent", "__v", "__e", "insertBefore", "__d", "Suspense", "__u", "_suspenders", "suspended", "component", "__", "__a", "lazy", "loader", "prom", "error", "Lazy", "then", "exports", "default", "e", "SuspenseList", "_next", "_map", "ContextProvider", "getChildContext", "context", "children", "Portal", "_this", "container", "_container", "componentWillUnmount", "_temp", "nodeType", "parentNode", "childNodes", "appendChild", "push", "before", "removeChild", "splice", "indexOf", "createPortal", "el", "containerInfo", "parent", "callback", "textContent", "preactRender", "hydrate", "preactHydrate", "empty", "isPropagationStopped", "cancelBubble", "isDefaultPrevented", "defaultPrevented", "createFactory", "type", "bind", "isValidElement", "element", "REACT_ELEMENT_TYPE", "cloneElement", "preactCloneElement", "apply", "arguments", "unmountComponentAtNode", "findDOMNode", "base", "Fragment", "startTransition", "cb", "useDeferredValue", "val", "useTransition", "useLayoutEffect", "useSyncExternalStore", "subscribe", "getSnapshot", "value", "_useState", "useState", "_instance", "_getSnapshot", "forceUpdate", "useEffect", "oldDiffHook", "mapFn", "Children", "oldCatchError", "oldUnmount", "resolve", "CAMEL_PROPS", "IS_DOM", "onChangeInputType", "oldEventHook", "currentComponent", "classNameDescriptor", "oldVNodeHook", "oldBeforeRender", "__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED", "version", "unstable_batchedUpdates", "flushSync", "StrictMode", "useInsertionEffect", "index", "Component", "isPureReactComponent", "state", "options", "__b", "Symbol", "for", "toChildArray", "count", "length", "only", "normalized", "toArray", "newVNode", "oldVNode", "errorInfo", "unmount", "__R", "__h", "promise", "suspendingVNode", "suspendingComponent", "resolved", "onResolved", "onSuspensionComplete", "suspendedVNode", "setState", "pop", "wasHydrating", "document", "detachedComponent", "__O", "fallback", "list", "node", "delete", "revealOrder", "size", "delegated", "get", "unsuspend", "wrappedUnsuspend", "Map", "reverse", "set", "componentDidUpdate", "componentDidMount", "test", "key", "Object", "defineProperty", "configurable", "v", "writable", "event", "persist", "nativeEvent", "class", "normalizedProps", "nonCustomElement", "toLowerCase", "replace", "multiple", "Array", "isArray", "selected", "defaultValue", "className", "enumerable", "__r", "ReactCurrentDispatcher", "readContext", "__n", "arg", "useId", "useReducer", "useRef", "useImperativeHandle", "useMemo", "useCallback", "useContext", "useDebugValue", "createContext", "createRef"]
}
